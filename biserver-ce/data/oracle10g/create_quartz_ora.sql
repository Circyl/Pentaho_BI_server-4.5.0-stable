--THIS USER IS SPECIFIC TO THE DATABASE WHERE THIS SCRIPT IS TO BE RUN AND
--IT SHOULD BE A USER WITH DBA PRIVS.
--AND ALSO @pentaho should be replaced with the correct instance name
--
--NOTE: run create_repository_ora.sql before running this script, which
--      creates the pentaho_tablespace

-- conn admin/password@pentaho

drop user quartz cascade;

create tablespace pentaho_tablespace
  logging
  datafile 'ptho_ts.dbf' 
  size 32m 
  autoextend on 
  next 32m maxsize 2048m
  extent management local;

create user quartz identified by "password" default tablespace pentaho_tablespace quota unlimited on pentaho_tablespace temporary tablespace temp quota 5M on system;

grant create session, create procedure, create table to quartz;

--CREATE QUARTZ TABLES

CONN quartz/password

CREATE TABLE QRTZ_JOB_DETAILS (JOB_NAME  VARCHAR2(80) NOT NULL,JOB_GROUP VARCHAR2(80) NOT NULL,DESCRIPTION VARCHAR2(120),JOB_CLASS_NAME VARCHAR2(128) NOT NULL,IS_DURABLE VARCHAR2(1) NOT NULL,IS_VOLATILE VARCHAR2(1) NOT NULL,IS_STATEFUL VARCHAR2(1) NOT NULL,REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,JOB_DATA BLOB);
ALTER TABLE QRTZ_JOB_DETAILS ADD CONSTRAINT qrtz_job_details_pk PRIMARY KEY (JOB_NAME,JOB_GROUP);

CREATE TABLE QRTZ_JOB_LISTENERS(JOB_NAME VARCHAR2(80) NOT NULL,JOB_GROUP VARCHAR2(80) NOT NULL,JOB_LISTENER VARCHAR2(80) NOT NULL);
ALTER TABLE QRTZ_JOB_LISTENERS ADD CONSTRAINT qrtz_job_list_pk PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER);
ALTER TABLE QRTZ_JOB_LISTENERS ADD CONSTRAINT job_listener_fk FOREIGN KEY (JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP);

CREATE TABLE QRTZ_TRIGGERS(TRIGGER_NAME VARCHAR2(80) NOT NULL,TRIGGER_GROUP VARCHAR2(80) NOT NULL,JOB_NAME  VARCHAR2(80) NOT NULL,JOB_GROUP VARCHAR2(80) NOT NULL,IS_VOLATILE VARCHAR2(1) NOT NULL,DESCRIPTION VARCHAR2(120),NEXT_FIRE_TIME number(13) NULL, PREV_FIRE_TIME number(13) NULL,TRIGGER_STATE varchar2(16) NOT NULL,TRIGGER_TYPE varchar2(8) NOT NULL,START_TIME number(13) NOT NULL,END_TIME number(13) NULL,CALENDAR_NAME varchar2(80) NULL,MISFIRE_INSTR number(2) NULL,JOB_DATA BLOB NULL);
ALTER TABLE QRTZ_TRIGGERS ADD CONSTRAINT qrtz_tg_pk PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE QRTZ_TRIGGERS ADD CONSTRAINT qrtz_tg_fk FOREIGN KEY (JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP);

CREATE TABLE QRTZ_SIMPLE_TRIGGERS(TRIGGER_NAME varchar2(80) NOT NULL,TRIGGER_GROUP varchar2(80) NOT NULL,REPEAT_COUNT number(7) NOT NULL,REPEAT_INTERVAL number(12) NOT NULL,TIMES_TRIGGERED number(7) NOT NULL);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT qrtz_sm_tg_pk PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT qrtz_sm_tg_fk FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP);

CREATE TABLE QRTZ_CRON_TRIGGERS(TRIGGER_NAME varchar2(80) NOT NULL,TRIGGER_GROUP varchar2(80) NOT NULL,CRON_EXPRESSION varchar2(80) NOT NULL,TIME_ZONE_ID varchar2(80));
ALTER TABLE QRTZ_CRON_TRIGGERS ADD CONSTRAINT qrtz_cron_pk PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE QRTZ_CRON_TRIGGERS ADD CONSTRAINT qrtz_cron_fk FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP);

CREATE TABLE QRTZ_BLOB_TRIGGERS(TRIGGER_NAME varchar2(80) NOT NULL,TRIGGER_GROUP varchar2(80) NOT NULL,BLOB_DATA BLOB NULL);
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CONSTRAINT qrtz_blob_pk PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP);
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD CONSTRAINT qrtz_blob_fk FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP);

CREATE TABLE QRTZ_TRIGGER_LISTENERS(TRIGGER_NAME  varchar2(80) NOT NULL,TRIGGER_GROUP varchar2(80) NOT NULL,TRIGGER_LISTENER varchar2(80) NOT NULL);
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD CONSTRAINT qrtz_tg_lst_pk PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER);
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD CONSTRAINT qrtz_tg_lst_fk FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP);

CREATE TABLE QRTZ_CALENDARS(CALENDAR_NAME  varchar2(80) NOT NULL,CALENDAR BLOB NOT NULL);
ALTER TABLE QRTZ_CALENDARS ADD CONSTRAINT qrtz_cld_pk PRIMARY KEY (CALENDAR_NAME);

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS(TRIGGER_GROUP  varchar2(80) NOT NULL);
ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS ADD CONSTRAINT qrtz_p_trig_grps_pk PRIMARY KEY (TRIGGER_GROUP);

CREATE TABLE QRTZ_FIRED_TRIGGERS(ENTRY_ID varchar2(95) NOT NULL,TRIGGER_NAME varchar2(80) NOT NULL,TRIGGER_GROUP varchar2(80) NOT NULL,IS_VOLATILE varchar2(1) NOT NULL,INSTANCE_NAME varchar2(80) NOT NULL,FIRED_TIME number(13) NOT NULL,STATE varchar2(16) NOT NULL,JOB_NAME varchar2(80) NULL,JOB_GROUP varchar2(80) NULL,IS_STATEFUL varchar2(1) NULL,REQUESTS_RECOVERY varchar2(1) NULL);
ALTER TABLE QRTZ_FIRED_TRIGGERS ADD CONSTRAINT qrtz_fired_trg_pk PRIMARY KEY (ENTRY_ID);

CREATE TABLE QRTZ_SCHEDULER_STATE(INSTANCE_NAME varchar2(80) NOT NULL,LAST_CHECKIN_TIME number(13) NOT NULL,CHECKIN_INTERVAL number(13) NOT NULL,RECOVERER varchar2(80) NULL);
ALTER TABLE QRTZ_SCHEDULER_STATE ADD CONSTRAINT qrtz_sched_st_pk PRIMARY KEY (INSTANCE_NAME);

CREATE TABLE QRTZ_LOCKS(LOCK_NAME  varchar2(40) NOT NULL);
ALTER TABLE QRTZ_LOCKS ADD CONSTRAINT qrtz_locKs_pk PRIMARY KEY (LOCK_NAME);


INSERT INTO QRTZ_LOCKS values('TRIGGER_ACCESS');
INSERT INTO QRTZ_LOCKS values('JOB_ACCESS');
INSERT INTO QRTZ_LOCKS values('CALENDAR_ACCESS');
INSERT INTO QRTZ_LOCKS values('STATE_ACCESS');
INSERT INTO QRTZ_LOCKS values('MISFIRE_ACCESS');

commit;
