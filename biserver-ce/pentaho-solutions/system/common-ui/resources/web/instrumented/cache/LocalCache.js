/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['cache/LocalCache.js']) {
  _$jscoverage['cache/LocalCache.js'] = [];
  _$jscoverage['cache/LocalCache.js'][1] = 0;
  _$jscoverage['cache/LocalCache.js'][2] = 0;
  _$jscoverage['cache/LocalCache.js'][4] = 0;
  _$jscoverage['cache/LocalCache.js'][6] = 0;
  _$jscoverage['cache/LocalCache.js'][11] = 0;
  _$jscoverage['cache/LocalCache.js'][12] = 0;
  _$jscoverage['cache/LocalCache.js'][13] = 0;
  _$jscoverage['cache/LocalCache.js'][14] = 0;
  _$jscoverage['cache/LocalCache.js'][15] = 0;
  _$jscoverage['cache/LocalCache.js'][17] = 0;
  _$jscoverage['cache/LocalCache.js'][20] = 0;
  _$jscoverage['cache/LocalCache.js'][29] = 0;
  _$jscoverage['cache/LocalCache.js'][33] = 0;
  _$jscoverage['cache/LocalCache.js'][34] = 0;
  _$jscoverage['cache/LocalCache.js'][35] = 0;
  _$jscoverage['cache/LocalCache.js'][36] = 0;
  _$jscoverage['cache/LocalCache.js'][37] = 0;
  _$jscoverage['cache/LocalCache.js'][38] = 0;
  _$jscoverage['cache/LocalCache.js'][43] = 0;
  _$jscoverage['cache/LocalCache.js'][48] = 0;
  _$jscoverage['cache/LocalCache.js'][53] = 0;
  _$jscoverage['cache/LocalCache.js'][54] = 0;
  _$jscoverage['cache/LocalCache.js'][55] = 0;
  _$jscoverage['cache/LocalCache.js'][56] = 0;
  _$jscoverage['cache/LocalCache.js'][57] = 0;
  _$jscoverage['cache/LocalCache.js'][58] = 0;
  _$jscoverage['cache/LocalCache.js'][61] = 0;
  _$jscoverage['cache/LocalCache.js'][66] = 0;
  _$jscoverage['cache/LocalCache.js'][67] = 0;
  _$jscoverage['cache/LocalCache.js'][68] = 0;
  _$jscoverage['cache/LocalCache.js'][69] = 0;
  _$jscoverage['cache/LocalCache.js'][70] = 0;
  _$jscoverage['cache/LocalCache.js'][71] = 0;
  _$jscoverage['cache/LocalCache.js'][72] = 0;
  _$jscoverage['cache/LocalCache.js'][74] = 0;
  _$jscoverage['cache/LocalCache.js'][81] = 0;
  _$jscoverage['cache/LocalCache.js'][82] = 0;
  _$jscoverage['cache/LocalCache.js'][83] = 0;
  _$jscoverage['cache/LocalCache.js'][84] = 0;
  _$jscoverage['cache/LocalCache.js'][85] = 0;
  _$jscoverage['cache/LocalCache.js'][87] = 0;
  _$jscoverage['cache/LocalCache.js'][92] = 0;
  _$jscoverage['cache/LocalCache.js'][97] = 0;
  _$jscoverage['cache/LocalCache.js'][98] = 0;
  _$jscoverage['cache/LocalCache.js'][99] = 0;
  _$jscoverage['cache/LocalCache.js'][104] = 0;
  _$jscoverage['cache/LocalCache.js'][107] = 0;
  _$jscoverage['cache/LocalCache.js'][108] = 0;
  _$jscoverage['cache/LocalCache.js'][109] = 0;
  _$jscoverage['cache/LocalCache.js'][111] = 0;
  _$jscoverage['cache/LocalCache.js'][112] = 0;
  _$jscoverage['cache/LocalCache.js'][113] = 0;
  _$jscoverage['cache/LocalCache.js'][114] = 0;
  _$jscoverage['cache/LocalCache.js'][130] = 0;
  _$jscoverage['cache/LocalCache.js'][131] = 0;
  _$jscoverage['cache/LocalCache.js'][132] = 0;
  _$jscoverage['cache/LocalCache.js'][133] = 0;
}
_$jscoverage['cache/LocalCache.js'].source = ["pentaho <span class=\"k\">=</span> <span class=\"k\">typeof</span> pentaho <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span> <span class=\"k\">{}</span> <span class=\"k\">:</span> pentaho<span class=\"k\">;</span>","pentaho<span class=\"k\">.</span>common <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","dojo<span class=\"k\">.</span>require<span class=\"k\">(</span><span class=\"s\">\"dojox.storage\"</span><span class=\"k\">);</span>","","pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>localcache <span class=\"k\">=</span> <span class=\"k\">{</span>","  keyRegex <span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"[-</span><span class=\"t\">\\\\</span><span class=\"s\">.]\"</span><span class=\"k\">,</span> <span class=\"s\">\"gi\"</span><span class=\"k\">),</span>","  cacheHasBeenRefreshed <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","  isAvailable <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>isAvailable<span class=\"k\">())</span> <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>manager<span class=\"k\">.</span>getProvider<span class=\"k\">().</span>declaredClass <span class=\"k\">==</span> <span class=\"s\">\"dojox.storage.FlashStorageProvider\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> installer <span class=\"k\">=</span> <span class=\"k\">new</span> dojox<span class=\"k\">.</span>flash<span class=\"k\">.</span>Install<span class=\"k\">();</span>","        <span class=\"k\">var</span> available <span class=\"k\">=</span> <span class=\"k\">!</span>installer<span class=\"k\">.</span>needed<span class=\"k\">();</span>","        <span class=\"k\">return</span> available<span class=\"k\">;</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Local storage providers don't support certain characters in key names.</span>","<span class=\"c\">   * This method will strip out any unsupportted characters and make a friendly key by swapping in an underscore.</span>","<span class=\"c\">   * @param key desired key name</span>","<span class=\"c\">   */</span>","  getCacheKey <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> key<span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>keyRegex<span class=\"k\">,</span> <span class=\"s\">\"_\"</span> <span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  putValue <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">,</span> lastModified<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isAvailable<span class=\"k\">())</span> <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>refreshCacheExirations<span class=\"k\">();</span>","      key <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getCacheKey<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">var</span> cacheLastModified <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getLastModified<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>cacheLastModified <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> cachedObj <span class=\"k\">=</span> <span class=\"k\">{</span>","          lastModified<span class=\"k\">:</span> <span class=\"k\">(</span>lastModified <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> lastModified<span class=\"k\">),</span>","          value<span class=\"k\">:</span> value","        <span class=\"k\">}</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> cachedObj <span class=\"k\">=</span> <span class=\"k\">{</span>","          lastModified<span class=\"k\">:</span> <span class=\"k\">(</span>lastModified <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span> <span class=\"k\">?</span> cacheLastModified <span class=\"k\">:</span> lastModified<span class=\"k\">),</span>","          value<span class=\"k\">:</span> value","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>put<span class=\"k\">(</span>key<span class=\"k\">,</span> cachedObj<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  getValue <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isAvailable<span class=\"k\">())</span> <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>refreshCacheExirations<span class=\"k\">();</span>","      key <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getCacheKey<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">var</span> cachedObj <span class=\"k\">=</span> dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>get<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>cachedObj <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> cachedObj<span class=\"k\">.</span>value<span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  getLastModified <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">// lookup the last modified value from the local storage cache</span>","    <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isAvailable<span class=\"k\">())</span> <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>refreshCacheExirations<span class=\"k\">();</span>","      key <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getCacheKey<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">var</span> cachedObj <span class=\"k\">=</span> dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>get<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>cachedObj <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> lastMod <span class=\"k\">=</span> cachedObj<span class=\"k\">.</span>lastModified<span class=\"k\">;</span>","        <span class=\"k\">return</span> lastMod<span class=\"k\">;</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  setLastModified <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">,</span> lastModified<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isAvailable<span class=\"k\">())</span> <span class=\"k\">{</span>","      key <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getCacheKey<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">var</span> cachedObj <span class=\"k\">=</span> dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>get<span class=\"k\">(</span>key<span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>cachedObj <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        cachedObj<span class=\"k\">.</span>lastModified <span class=\"k\">=</span> lastModified<span class=\"k\">;</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        cachedObj <span class=\"k\">=</span> <span class=\"k\">{</span>","          lastModified<span class=\"k\">:</span> lastModified<span class=\"k\">,</span>","          value<span class=\"k\">:</span> <span class=\"k\">null</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>put<span class=\"k\">(</span>key<span class=\"k\">,</span> cachedObj<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  clear <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isAvailable<span class=\"k\">())</span> <span class=\"k\">{</span>","      key <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getCacheKey<span class=\"k\">(</span>key<span class=\"k\">);</span>","      dojox<span class=\"k\">.</span>storage<span class=\"k\">.</span>remove<span class=\"k\">(</span>key<span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","  updateCacheExpiration <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>response<span class=\"k\">)</span> <span class=\"k\">{</span>","    $<span class=\"k\">(</span>response<span class=\"k\">)</span>","      <span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'cache-item'</span><span class=\"k\">)</span>","      <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> key <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'key'</span><span class=\"k\">).</span>text<span class=\"k\">();</span>","        key <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>localcache<span class=\"k\">.</span>getCacheKey<span class=\"k\">(</span>key<span class=\"k\">);</span>","        <span class=\"k\">var</span> lastModified <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'last-modified'</span><span class=\"k\">).</span>text<span class=\"k\">();</span>","        <span class=\"c\">//console.log(key + ' --&gt; ' + lastModified);</span>","        <span class=\"k\">var</span> cachedObj <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>localcache<span class=\"k\">.</span>getValue<span class=\"k\">(</span>key<span class=\"k\">);</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>cachedObj <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>localcache<span class=\"k\">.</span>getLastModified<span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">&lt;</span> lastModified<span class=\"k\">)</span> <span class=\"k\">{</span>","          pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>localcache<span class=\"k\">.</span>clear<span class=\"k\">(</span>key<span class=\"k\">);</span>","          pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>localcache<span class=\"k\">.</span>setLastModified<span class=\"k\">(</span>key<span class=\"k\">,</span> lastModified<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">,</span>","","<span class=\"c\">//  getCacheExpirations : function() {</span>","<span class=\"c\">//    try {</span>","<span class=\"c\">//      if(pentahoGet) {</span>","<span class=\"c\">//        var result = pentahoGet(CONTEXT_PATH + \"CacheExpirationService\", \"\", this.updateCacheExpiration);</span>","<span class=\"c\">//      }</span>","<span class=\"c\">//    } catch (e) {</span>","<span class=\"c\">//      // can't use pentahoGet...</span>","<span class=\"c\">//    }</span>","<span class=\"c\">//  },</span>","","  refreshCacheExirations <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>cacheHasBeenRefreshed <span class=\"k\">==</span> <span class=\"k\">false</span><span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>window<span class=\"k\">.</span>pentahoCacheExpirationServiceResults <span class=\"k\">!=</span> <span class=\"s\">'undefined'</span> <span class=\"k\">&amp;&amp;</span> window<span class=\"k\">.</span>pentahoCacheExpirationServiceResults <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>cacheHasBeenRefreshed <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>updateCacheExpiration<span class=\"k\">(</span>window<span class=\"k\">.</span>pentahoCacheExpirationServiceResults<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","<span class=\"k\">}</span>",""];
_$jscoverage['cache/LocalCache.js'][1]++;
pentaho = (((typeof pentaho) == "undefined")? {}: pentaho);
_$jscoverage['cache/LocalCache.js'][2]++;
pentaho.common = (pentaho.common || {});
_$jscoverage['cache/LocalCache.js'][4]++;
dojo.require("dojox.storage");
_$jscoverage['cache/LocalCache.js'][6]++;
pentaho.common.localcache = {keyRegex: new RegExp("[-\\.]", "gi"), cacheHasBeenRefreshed: false, isAvailable: (function () {
  _$jscoverage['cache/LocalCache.js'][11]++;
  if (dojox.storage.isAvailable()) {
    _$jscoverage['cache/LocalCache.js'][12]++;
    if ((dojox.storage.manager.getProvider().declaredClass == "dojox.storage.FlashStorageProvider")) {
      _$jscoverage['cache/LocalCache.js'][13]++;
      var installer = new (dojox.flash.Install)();
      _$jscoverage['cache/LocalCache.js'][14]++;
      var available = (! installer.needed());
      _$jscoverage['cache/LocalCache.js'][15]++;
      return available;
    }
    else {
      _$jscoverage['cache/LocalCache.js'][17]++;
      return true;
    }
  }
  _$jscoverage['cache/LocalCache.js'][20]++;
  return false;
}), getCacheKey: (function (key) {
  _$jscoverage['cache/LocalCache.js'][29]++;
  return key.replace(this.keyRegex, "_");
}), putValue: (function (key, value, lastModified) {
  _$jscoverage['cache/LocalCache.js'][33]++;
  if (this.isAvailable()) {
    _$jscoverage['cache/LocalCache.js'][34]++;
    this.refreshCacheExirations();
    _$jscoverage['cache/LocalCache.js'][35]++;
    key = this.getCacheKey(key);
    _$jscoverage['cache/LocalCache.js'][36]++;
    var cacheLastModified = this.getLastModified(key);
    _$jscoverage['cache/LocalCache.js'][37]++;
    if ((cacheLastModified == null)) {
      _$jscoverage['cache/LocalCache.js'][38]++;
      var cachedObj = {lastModified: ((lastModified != "undefined")? 0: lastModified), value: value};
    }
    else {
      _$jscoverage['cache/LocalCache.js'][43]++;
      var cachedObj = {lastModified: ((lastModified != "undefined")? cacheLastModified: lastModified), value: value};
    }
    _$jscoverage['cache/LocalCache.js'][48]++;
    dojox.storage.put(key, cachedObj);
  }
}), getValue: (function (key) {
  _$jscoverage['cache/LocalCache.js'][53]++;
  if (this.isAvailable()) {
    _$jscoverage['cache/LocalCache.js'][54]++;
    this.refreshCacheExirations();
    _$jscoverage['cache/LocalCache.js'][55]++;
    key = this.getCacheKey(key);
    _$jscoverage['cache/LocalCache.js'][56]++;
    var cachedObj = dojox.storage.get(key);
    _$jscoverage['cache/LocalCache.js'][57]++;
    if ((cachedObj != null)) {
      _$jscoverage['cache/LocalCache.js'][58]++;
      return cachedObj.value;
    }
  }
  _$jscoverage['cache/LocalCache.js'][61]++;
  return null;
}), getLastModified: (function (key) {
  _$jscoverage['cache/LocalCache.js'][66]++;
  if (this.isAvailable()) {
    _$jscoverage['cache/LocalCache.js'][67]++;
    this.refreshCacheExirations();
    _$jscoverage['cache/LocalCache.js'][68]++;
    key = this.getCacheKey(key);
    _$jscoverage['cache/LocalCache.js'][69]++;
    var cachedObj = dojox.storage.get(key);
    _$jscoverage['cache/LocalCache.js'][70]++;
    if ((cachedObj != null)) {
      _$jscoverage['cache/LocalCache.js'][71]++;
      var lastMod = cachedObj.lastModified;
      _$jscoverage['cache/LocalCache.js'][72]++;
      return lastMod;
    }
    else {
      _$jscoverage['cache/LocalCache.js'][74]++;
      return null;
    }
  }
}), setLastModified: (function (key, lastModified) {
  _$jscoverage['cache/LocalCache.js'][81]++;
  if (this.isAvailable()) {
    _$jscoverage['cache/LocalCache.js'][82]++;
    key = this.getCacheKey(key);
    _$jscoverage['cache/LocalCache.js'][83]++;
    var cachedObj = dojox.storage.get(key);
    _$jscoverage['cache/LocalCache.js'][84]++;
    if ((cachedObj != null)) {
      _$jscoverage['cache/LocalCache.js'][85]++;
      cachedObj.lastModified = lastModified;
    }
    else {
      _$jscoverage['cache/LocalCache.js'][87]++;
      cachedObj = {lastModified: lastModified, value: null};
    }
    _$jscoverage['cache/LocalCache.js'][92]++;
    dojox.storage.put(key, cachedObj);
  }
}), clear: (function (key) {
  _$jscoverage['cache/LocalCache.js'][97]++;
  if (this.isAvailable()) {
    _$jscoverage['cache/LocalCache.js'][98]++;
    key = this.getCacheKey(key);
    _$jscoverage['cache/LocalCache.js'][99]++;
    dojox.storage.remove(key);
  }
}), updateCacheExpiration: (function (response) {
  _$jscoverage['cache/LocalCache.js'][104]++;
  $(response).find("cache-item").each((function () {
  _$jscoverage['cache/LocalCache.js'][107]++;
  var key = $(this).find("key").text();
  _$jscoverage['cache/LocalCache.js'][108]++;
  key = pentaho.common.localcache.getCacheKey(key);
  _$jscoverage['cache/LocalCache.js'][109]++;
  var lastModified = $(this).find("last-modified").text();
  _$jscoverage['cache/LocalCache.js'][111]++;
  var cachedObj = pentaho.common.localcache.getValue(key);
  _$jscoverage['cache/LocalCache.js'][112]++;
  if (((cachedObj != null) && (pentaho.common.localcache.getLastModified(key) < lastModified))) {
    _$jscoverage['cache/LocalCache.js'][113]++;
    pentaho.common.localcache.clear(key);
    _$jscoverage['cache/LocalCache.js'][114]++;
    pentaho.common.localcache.setLastModified(key, lastModified);
  }
}));
}), refreshCacheExirations: (function () {
  _$jscoverage['cache/LocalCache.js'][130]++;
  if ((this.cacheHasBeenRefreshed == false)) {
    _$jscoverage['cache/LocalCache.js'][131]++;
    if (((window.pentahoCacheExpirationServiceResults != "undefined") && (window.pentahoCacheExpirationServiceResults != null))) {
      _$jscoverage['cache/LocalCache.js'][132]++;
      this.cacheHasBeenRefreshed = true;
      _$jscoverage['cache/LocalCache.js'][133]++;
      this.updateCacheExpiration(window.pentahoCacheExpirationServiceResults);
    }
  }
})};
