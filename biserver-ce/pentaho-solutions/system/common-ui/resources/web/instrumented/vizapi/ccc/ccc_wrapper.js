/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['vizapi/ccc/ccc_wrapper.js']) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'] = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][5] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][7] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][10] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][11] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][18] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][20] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][57] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][69] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][82] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][91] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][107] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][124] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][139] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][156] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][173] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][190] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][224] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][242] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][286] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][317] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][461] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][545] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][551] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][552] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][555] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][556] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][558] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][559] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][561] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][562] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][563] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][565] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][567] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][568] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][570] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][571] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][572] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][574] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][576] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][578] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][579] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][588] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][590] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][591] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][592] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][594] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][598] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][599] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][601] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][602] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][606] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][608] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][610] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][612] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][614] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][616] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][618] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][625] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][627] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][628] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][629] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][632] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][636] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][637] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][638] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][642] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][644] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][653] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][654] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][656] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][658] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][660] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][662] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][664] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][670] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][673] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][674] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][678] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][679] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][680] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][681] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][684] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][687] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][688] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][689] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][690] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][691] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][692] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][696] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][699] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][705] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][707] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][712] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][713] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][717] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][718] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][720] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][723] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][724] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][725] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][727] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][730] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][732] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][736] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][739] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][740] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][748] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][762] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][763] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][765] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][767] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][769] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][773] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][774] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][780] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][781] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][784] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][785] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][788] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][793] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][796] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][811] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][815] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][819] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][821] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][824] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][828] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][833] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][834] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][837] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][838] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][839] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][844] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][845] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][846] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][848] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][849] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][853] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][854] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][856] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][859] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][862] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][864] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][867] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][868] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][871] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][872] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][878] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][881] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][890] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][891] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][893] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][898] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][899] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][901] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][904] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][914] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][916] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][917] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][919] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][920] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][921] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][922] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][928] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][929] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][932] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][935] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][940] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][945] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][946] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][947] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][948] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][949] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][951] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][955] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][956] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][957] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][964] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][966] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][971] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][973] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][974] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][980] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][981] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][985] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][986] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][989] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][991] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][992] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][995] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][996] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1000] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1011] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1012] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1017] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1018] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1024] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1034] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1035] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1039] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1042] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1045] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1052] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1054] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1057] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1058] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1061] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1073] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1076] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1079] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1082] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1085] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1086] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1087] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1089] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1090] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1091] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1095] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1097] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1099] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1100] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1102] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1103] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1104] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1119] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1120] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1122] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1125] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1143] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1144] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1150] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1152] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1153] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1154] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1155] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1157] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1158] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1159] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1163] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1166] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1168] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1170] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1177] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1178] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1183] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1185] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1198] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1199] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1200] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1201] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1205] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1211] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1213] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1214] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1217] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1220] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1221] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1234] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1235] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1237] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1238] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1266] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1270] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1275] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1276] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1287] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1289] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1290] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1291] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1294] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1295] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1296] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1301] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1302] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1305] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1306] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1307] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1313] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1314] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1315] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1318] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1320] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1321] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1324] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1325] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1329] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1330] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1333] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1337] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1338] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1339] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1341] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1344] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1345] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1346] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1347] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1351] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1352] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1354] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1355] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1357] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1361] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1362] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1363] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1364] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1365] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1371] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1372] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1376] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1377] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1381] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1382] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1386] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1387] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1391] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1392] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1395] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1396] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1401] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1404] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1405] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1406] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1408] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1413] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1414] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1417] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1418] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1420] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1422] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1423] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1427] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1428] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1431] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1433] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1439] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1440] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1443] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1449] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1454] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1459] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1461] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1462] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1464] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1466] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1467] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1468] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1469] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1471] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1473] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1474] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1480] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1481] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1485] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1486] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1490] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1492] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1493] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1497] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1498] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1502] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1503] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1507] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1508] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1510] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1511] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1512] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1514] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1515] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1520] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1521] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1524] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1527] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1528] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1531] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1534] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1535] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1540] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1541] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1543] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1544] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1545] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1546] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1547] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1548] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1549] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1551] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1552] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1555] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1559] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1560] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1561] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1562] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1564] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1567] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1568] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1569] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1571] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1579] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1580] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1587] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1620] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1627] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1629] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1630] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1635] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1637] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1639] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1640] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1641] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1642] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1643] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1644] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1645] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1646] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1649] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1650] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1655] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1656] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1657] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1658] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1680] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1681] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1682] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1687] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1689] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1694] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1697] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1698] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1701] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1710] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1711] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1712] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1713] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1718] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1720] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1723] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1724] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1725] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1728] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1729] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1730] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1733] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1742] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1747] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1752] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1753] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1759] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1760] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1761] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1770] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1773] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1774] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1775] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1780] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1789] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1790] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1797] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1798] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1842] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1843] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1846] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1847] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1852] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1857] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1859] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1862] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1866] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1871] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1877] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1878] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1879] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1883] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1889] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1890] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1893] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1895] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1896] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1897] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1898] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1903] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1904] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1906] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1907] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1909] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1910] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1912] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1913] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1914] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1915] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1919] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1922] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1925] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1931] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1935] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1936] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1939] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1944] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1952] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1965] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1968] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1973] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1974] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1975] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1976] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1983] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1984] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1986] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1992] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1993] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1997] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1998] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1999] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2001] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2002] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2003] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2005] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2007] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2014] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2015] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2017] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2020] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2029] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2030] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2031] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2038] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2039] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2044] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2045] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2049] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2081] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2084] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2085] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2086] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2087] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2088] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2089] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2091] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2092] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2097] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2115] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2116] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2120] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2121] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2122] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2125] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2126] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2127] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2129] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2137] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2140] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2141] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2142] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2146] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2151] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2155] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2158] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2161] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2166] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2170] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2171] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2172] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2173] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2174] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2180] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2183] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2184] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2185] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2186] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2189] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2196] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2197] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2198] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2199] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2201] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2202] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2203] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2205] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2220] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2222] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2223] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2224] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2230] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2231] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2239] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2242] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2243] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2245] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2246] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2247] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2248] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2257] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2258] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2259] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2262] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2264] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2265] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2266] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2267] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2268] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2269] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2270] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2271] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2272] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2273] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2275] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2276] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2277] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2281] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2283] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2287] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2292] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2297] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2298] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2300] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2303] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2308] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2309] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2310] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2311] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2314] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2319] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2320] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2321] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2322] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2324] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2325] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2328] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2331] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2337] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2338] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2342] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2343] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2346] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2351] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2352] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2353] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2354] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2355] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2358] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2363] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2364] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2392] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2393] = 0;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2401] = 0;
}
_$jscoverage['vizapi/ccc/ccc_wrapper.js'].source = ["pen<span class=\"k\">.</span>define<span class=\"k\">([</span><span class=\"s\">\"cdf/lib/CCC/pvc-d1.0\"</span><span class=\"k\">,</span> <span class=\"s\">\"common-ui/vizapi/VizController\"</span><span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","  pentaho <span class=\"k\">=</span> <span class=\"k\">typeof</span> pentaho <span class=\"k\">!=</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span> pentaho <span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","<span class=\"c\">// BEGIN Private Scope</span>","  <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","    pentaho<span class=\"k\">.</span>ccc <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>ccc <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","","    <span class=\"k\">function</span> defVisualization<span class=\"k\">(</span>viz<span class=\"k\">)</span><span class=\"k\">{</span>","      pentaho<span class=\"k\">.</span>visualizations<span class=\"k\">.</span>push<span class=\"k\">(</span>viz<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     Visualization Metadata</span>","<span class=\"c\">     These objects describe the visualizations provided by this library.</span>","<span class=\"c\">     */</span>","    <span class=\"k\">var</span> lineStrokeStyle <span class=\"k\">=</span> <span class=\"s\">'#A0A0A0'</span><span class=\"k\">;</span> <span class=\"c\">// #D8D8D8',// #f0f0f0</span>","","    <span class=\"k\">var</span> baseCategChartArgs <span class=\"k\">=</span> <span class=\"k\">{</span>","      legend<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","      yAxisSize<span class=\"k\">:</span>     <span class=\"s\">100</span><span class=\"k\">,</span>","      yAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","      yAxisEndLine<span class=\"k\">:</span>  <span class=\"k\">true</span><span class=\"k\">,</span>","      yAxisDomainRoundMode<span class=\"k\">:</span> <span class=\"s\">'tick'</span><span class=\"k\">,</span>","      yAxisDesiredTickCount<span class=\"k\">:</span> <span class=\"s\">10</span><span class=\"k\">,</span>","","      xAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","      xAxisSize<span class=\"k\">:</span>     <span class=\"s\">100</span><span class=\"k\">,</span>","      xAxisEndLine<span class=\"k\">:</span>  <span class=\"k\">true</span><span class=\"k\">,</span>","      xAxisDesiredTickCount<span class=\"k\">:</span> <span class=\"s\">10</span><span class=\"k\">,</span>","      xAxisDomainRoundMode<span class=\"k\">:</span> <span class=\"s\">'tick'</span><span class=\"k\">,</span>","","      extensionPoints<span class=\"k\">:</span> <span class=\"k\">{</span>","        yAxisRule_strokeStyle<span class=\"k\">:</span> lineStrokeStyle<span class=\"k\">,</span>","        yAxisEndLine_strokeStyle<span class=\"k\">:</span> lineStrokeStyle<span class=\"k\">,</span>","        yAxisGrid_strokeWidth<span class=\"k\">:</span>  <span class=\"s\">\"2px\"</span><span class=\"k\">,</span>","        yAxisGrid_strokeStyle<span class=\"k\">:</span>  lineStrokeStyle<span class=\"k\">,</span>","","        xAxisRule_strokeStyle<span class=\"k\">:</span> lineStrokeStyle<span class=\"k\">,</span>","        xAxisEndLine_strokeStyle<span class=\"k\">:</span>  lineStrokeStyle<span class=\"k\">,</span>","        xAxisGrid_strokeWidth<span class=\"k\">:</span> <span class=\"s\">\"2px\"</span><span class=\"k\">,</span>","        xAxisGrid_strokeStyle<span class=\"k\">:</span> lineStrokeStyle","      <span class=\"k\">}</span><span class=\"k\">,</span>","","      tipsySettings<span class=\"k\">:</span> <span class=\"k\">{</span>","        html<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        gravity<span class=\"k\">:</span> <span class=\"s\">\"c\"</span><span class=\"k\">,</span>","        fade<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        followMouse<span class=\"k\">:</span><span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">,</span>","","      seriesIncludeMeasures<span class=\"k\">:</span> <span class=\"k\">true</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> baseVertiCategChartArgs <span class=\"k\">=</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseCategChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","      legendPosition<span class=\"k\">:</span> <span class=\"s\">'right'</span><span class=\"k\">,</span>","      legendAlign<span class=\"k\">:</span> <span class=\"s\">'top'</span><span class=\"k\">,</span>","","      extensionPoints<span class=\"k\">:</span> <span class=\"k\">{</span>","        xAxisLabel_textAngle<span class=\"k\">:</span>    <span class=\"k\">-</span>Math<span class=\"k\">.</span>PI<span class=\"k\">/</span><span class=\"s\">6</span><span class=\"k\">,</span>","        xAxisLabel_textAlign<span class=\"k\">:</span>    <span class=\"s\">\"right\"</span><span class=\"k\">,</span>","        xAxisLabel_textBaseline<span class=\"k\">:</span> <span class=\"s\">\"top\"</span><span class=\"k\">,</span>","        yAxisTicks_strokeStyle<span class=\"k\">:</span>  lineStrokeStyle","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">var</span> baseHorizCategChartArgs <span class=\"k\">=</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseCategChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","      orientation<span class=\"k\">:</span>   <span class=\"s\">'horizontal'</span><span class=\"k\">,</span>","      yAxisSize<span class=\"k\">:</span>      <span class=\"s\">150</span><span class=\"k\">,</span>","      xAxisSize<span class=\"k\">:</span>      <span class=\"s\">50</span><span class=\"k\">,</span>","      xAxisPosition<span class=\"k\">:</span>  <span class=\"s\">'top'</span><span class=\"k\">,</span>","      legendPosition<span class=\"k\">:</span> <span class=\"s\">'right'</span><span class=\"k\">,</span>","      legendAlign<span class=\"k\">:</span>    <span class=\"s\">'middle'</span><span class=\"k\">,</span>","","      extensionPoints<span class=\"k\">:</span> <span class=\"k\">{</span>","        xAxisTicks_strokeStyle<span class=\"k\">:</span> lineStrokeStyle","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">var</span> mixinBarChartArgs <span class=\"k\">=</span> <span class=\"k\">{</span>","      cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.BarChart'</span><span class=\"k\">,</span> <span class=\"c\">// Default</span>","      panelSizeRatio<span class=\"k\">:</span> <span class=\"s\">0.6</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","        baseVertiBarChartArgs <span class=\"k\">=</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseVertiCategChartArgs<span class=\"k\">,</span> mixinBarChartArgs<span class=\"k\">),</span>","        baseHorizBarChartArgs <span class=\"k\">=</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseHorizCategChartArgs<span class=\"k\">,</span> mixinBarChartArgs<span class=\"k\">);</span>","","<span class=\"c\">// ----</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_bar'</span><span class=\"k\">,</span>                          <span class=\"c\">// unique identifier</span>","      type<span class=\"k\">:</span> <span class=\"s\">'barchart'</span><span class=\"k\">,</span>                       <span class=\"c\">// generic type id</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>                          <span class=\"c\">// id of the source library</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Column'</span><span class=\"k\">,</span>                     <span class=\"c\">// visible name, this will come from a properties file eventually</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>          <span class=\"c\">// type of the Javascript object to instantiate</span>","      args<span class=\"k\">:</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseVertiBarChartArgs<span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      <span class=\"c\">// dataReqs describes the data requirements of this visualization</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs <span class=\"k\">:</span> createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_barstacked'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'barchart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Stacked Column'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseVertiBarChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","        stacked<span class=\"k\">:</span> <span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs <span class=\"k\">:</span> createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_horzbar'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'horzbarchart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Bar'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span>  pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseHorizBarChartArgs<span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs <span class=\"k\">:</span> createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_horzbarstacked'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'horzbarchart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Stacked Bar'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span>  pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseHorizBarChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","        stacked<span class=\"k\">:</span> <span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs <span class=\"k\">:</span> createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_barnormalized'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'barchart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC 100% Stacked Column'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseVertiBarChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.NormalizedBarChart'</span>","      <span class=\"k\">}</span><span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs <span class=\"k\">:</span> createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_horzbarnormalized'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'horzbarchart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC 100% Stacked Bar'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span>  pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseHorizBarChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.NormalizedBarChart'</span>","      <span class=\"k\">}</span><span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs <span class=\"k\">:</span> createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_line'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'linechart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Line'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseVertiCategChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.LineChart'</span><span class=\"k\">,</span>","","        <span class=\"c\">// Default value for 'shape' data request</span>","        shape<span class=\"k\">:</span> <span class=\"s\">'circle'</span>","      <span class=\"k\">}</span><span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs<span class=\"k\">:</span> pvc<span class=\"k\">.</span>arrayAppend<span class=\"k\">(</span>","            createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">),</span>","            <span class=\"k\">[</span>","              <span class=\"k\">{</span>","                id<span class=\"k\">:</span> <span class=\"s\">'shape'</span><span class=\"k\">,</span>","                dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","                values<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'none'</span><span class=\"k\">,</span> <span class=\"s\">'circle'</span><span class=\"k\">,</span> <span class=\"s\">'cross'</span><span class=\"k\">,</span> <span class=\"s\">'diamond'</span><span class=\"k\">,</span> <span class=\"s\">'square'</span><span class=\"k\">,</span> <span class=\"s\">'triangle'</span><span class=\"k\">],</span>","                ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                  labels<span class=\"k\">:</span>  <span class=\"k\">[</span><span class=\"s\">\"None\"</span><span class=\"k\">,</span> <span class=\"s\">\"Circle\"</span><span class=\"k\">,</span> <span class=\"s\">\"Cross\"</span><span class=\"k\">,</span> <span class=\"s\">\"Diamond\"</span><span class=\"k\">,</span> <span class=\"s\">\"Square\"</span><span class=\"k\">,</span> <span class=\"s\">\"Triangle\"</span><span class=\"k\">],</span>","                  group<span class=\"k\">:</span>   <span class=\"s\">'options'</span><span class=\"k\">,</span>","                  type<span class=\"k\">:</span>    <span class=\"s\">'combo'</span><span class=\"k\">,</span>","                  caption<span class=\"k\">:</span> <span class=\"s\">\"Shape\"</span>","                <span class=\"k\">}</span>","              <span class=\"k\">}</span>","            <span class=\"k\">])</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_area'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'areachart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Area'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>baseVertiCategChartArgs<span class=\"k\">,</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.StackedAreaChart'</span><span class=\"k\">,</span>","        showLines<span class=\"k\">:</span> <span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">),</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">{</span>","        name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","        reqs<span class=\"k\">:</span> createVizDataReq<span class=\"k\">(</span><span class=\"s\">\"Category\"</span><span class=\"k\">,</span> <span class=\"s\">\"Series\"</span><span class=\"k\">,</span> <span class=\"s\">\"Value\"</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_scatter'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'scatter'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Scatter'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.MetricDotChart'</span><span class=\"k\">,</span>","        showDots<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        yAxisSize<span class=\"k\">:</span> <span class=\"s\">30</span><span class=\"k\">,</span>","        xAxisSize<span class=\"k\">:</span> <span class=\"s\">30</span><span class=\"k\">,</span>","        xAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        yAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">,</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span>","          name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","          reqs <span class=\"k\">:[</span>","            <span class=\"k\">{</span>   id<span class=\"k\">:</span> <span class=\"s\">'rows'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'Category'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>   id<span class=\"k\">:</span> <span class=\"s\">'x'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'X Axis'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","              allowMultiple<span class=\"k\">:</span> <span class=\"k\">false</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>   id<span class=\"k\">:</span> <span class=\"s\">'y'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'Y Axis'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","              allowMultiple<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span>","          <span class=\"k\">]</span>","        <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_pie'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'piechart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'CCC Pie Chart'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","      args<span class=\"k\">:</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.PieChart'</span>","      <span class=\"k\">}</span><span class=\"k\">,</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span>","          name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","          reqs <span class=\"k\">:[</span>","            <span class=\"k\">{</span>   id<span class=\"k\">:</span> <span class=\"s\">'rows'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'Slices'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>   id<span class=\"k\">:</span> <span class=\"s\">'measures'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'Values'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span>","          <span class=\"k\">]</span>","        <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_heatgrid'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'heatgrid'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'Heat Grid'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","","      args<span class=\"k\">:</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.HeatGridChart'</span><span class=\"k\">,</span>","        crosstabMode<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        normPerBaseCategory<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        showXScale<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        xAxisPosition<span class=\"k\">:</span> <span class=\"s\">\"bottom\"</span><span class=\"k\">,</span>","        showYScale<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        yAxisPosition<span class=\"k\">:</span> <span class=\"s\">\"left\"</span><span class=\"k\">,</span>","","        seriesInRows<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","        timeSeries<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        panelSizeRatio<span class=\"k\">:</span> <span class=\"s\">0.8</span><span class=\"k\">,</span>","        orientation<span class=\"k\">:</span> <span class=\"s\">\"vertical\"</span><span class=\"k\">,</span>","        showValues<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        valuesAnchor<span class=\"k\">:</span> <span class=\"s\">\"right\"</span><span class=\"k\">,</span>","        titlePosition<span class=\"k\">:</span> <span class=\"s\">\"top\"</span><span class=\"k\">,</span>","        titleSize<span class=\"k\">:</span> <span class=\"s\">25</span><span class=\"k\">,</span>","        xAxisSize<span class=\"k\">:</span> <span class=\"s\">30</span><span class=\"k\">,</span>","        yAxisSize<span class=\"k\">:</span> <span class=\"s\">50</span><span class=\"k\">,</span>","        xAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        yAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        orthoAxisOrdinal<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        scalingType<span class=\"k\">:</span> <span class=\"s\">\"linear\"</span><span class=\"k\">,</span>","        numSD<span class=\"k\">:</span> <span class=\"s\">2</span><span class=\"k\">,</span>","        nullColor<span class=\"k\">:</span> <span class=\"s\">\"#efc5ad\"</span><span class=\"k\">,</span>","        extensionPoints<span class=\"k\">:</span> <span class=\"k\">[],</span>","        useShapes<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        shape<span class=\"k\">:</span> <span class=\"s\">'square'</span><span class=\"k\">,</span>","        isMultiValued<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        useCompositeAxis<span class=\"k\">:</span><span class=\"k\">true</span><span class=\"k\">,</span>","        colorValIdx<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        sizeValIdx<span class=\"k\">:</span>  <span class=\"s\">1</span><span class=\"k\">,</span>","        ctrlSelectMode<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        tipsySettings<span class=\"k\">:</span> <span class=\"k\">{</span>","          html<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","          gravity<span class=\"k\">:</span> <span class=\"s\">\"c\"</span><span class=\"k\">,</span>","          fade<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","          followMouse<span class=\"k\">:</span><span class=\"k\">true</span><span class=\"k\">,</span>","          opacity<span class=\"k\">:</span> <span class=\"s\">1</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">,</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span>","          name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","          reqs <span class=\"k\">:[</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'rows'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'row'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'x_axis'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","              allowMultiple<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'columns'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'y_axis'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","              allowMultiple<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'color'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'color_by'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","              allowMultiple<span class=\"k\">:</span> <span class=\"k\">false</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'size'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'size_by'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","              allowMultiple<span class=\"k\">:</span> <span class=\"k\">false</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'pattern'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              values<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"GRADIENT\"</span><span class=\"k\">,</span> <span class=\"s\">\"3-COLOR\"</span><span class=\"k\">,</span> <span class=\"s\">\"5-COLOR\"</span><span class=\"k\">],</span>","              ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                labels<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"gradient\"</span><span class=\"k\">,</span> <span class=\"s\">\"step_3\"</span><span class=\"k\">,</span> <span class=\"s\">\"step_5\"</span><span class=\"k\">],</span>","                group<span class=\"k\">:</span> <span class=\"s\">\"options\"</span><span class=\"k\">,</span>","                type<span class=\"k\">:</span> <span class=\"s\">'combo'</span><span class=\"k\">,</span>","                caption<span class=\"k\">:</span> <span class=\"s\">\"Pattern\"</span>","              <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'colorSet'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              values<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"ryg\"</span><span class=\"k\">,</span> <span class=\"s\">\"ryb\"</span><span class=\"k\">,</span> <span class=\"s\">\"blue\"</span><span class=\"k\">,</span> <span class=\"s\">\"gray\"</span><span class=\"k\">],</span>","              ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                labels<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"RYG\"</span><span class=\"k\">,</span> <span class=\"s\">\"RYB\"</span><span class=\"k\">,</span> <span class=\"s\">\"blue_scale\"</span><span class=\"k\">,</span> <span class=\"s\">\"gray_scale\"</span><span class=\"k\">],</span>","                group<span class=\"k\">:</span> <span class=\"s\">\"options\"</span><span class=\"k\">,</span>","                type<span class=\"k\">:</span> <span class=\"s\">'combo'</span><span class=\"k\">,</span>","                caption<span class=\"k\">:</span> <span class=\"s\">\"Color\"</span>","              <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'reverseColors'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'boolean'</span><span class=\"k\">,</span>","              ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                label<span class=\"k\">:</span> <span class=\"s\">\"reverse_colors\"</span><span class=\"k\">,</span>","                group<span class=\"k\">:</span> <span class=\"s\">\"options\"</span><span class=\"k\">,</span>","                type<span class=\"k\">:</span> <span class=\"s\">'checkbox'</span>","              <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'shape'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              values<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"square\"</span><span class=\"k\">,</span> <span class=\"s\">\"circle\"</span><span class=\"k\">],</span>","              ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                labels<span class=\"k\">:</span>  <span class=\"k\">[</span><span class=\"s\">\"square\"</span><span class=\"k\">,</span> <span class=\"s\">\"circle\"</span><span class=\"k\">],</span>","                group<span class=\"k\">:</span>   <span class=\"s\">\"options\"</span><span class=\"k\">,</span>","                type<span class=\"k\">:</span>    <span class=\"s\">'combo'</span><span class=\"k\">,</span>","                caption<span class=\"k\">:</span> <span class=\"s\">\"Shape\"</span>","              <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">\"optionsBtn\"</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'none'</span><span class=\"k\">,</span>","              ui<span class=\"k\">:</span> <span class=\"k\">{</span>","                group<span class=\"k\">:</span> <span class=\"s\">\"options\"</span><span class=\"k\">,</span>","                type<span class=\"k\">:</span> <span class=\"s\">\"button\"</span><span class=\"k\">,</span>","                label<span class=\"k\">:</span> <span class=\"s\">\"chart_options\"</span><span class=\"k\">,</span>","                seperator<span class=\"k\">:</span> <span class=\"k\">true</span>","              <span class=\"k\">}</span>","            <span class=\"k\">}</span>","          <span class=\"k\">]</span>","        <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","","    defVisualization<span class=\"k\">(</span><span class=\"k\">{</span>","      id<span class=\"k\">:</span> <span class=\"s\">'ccc_bulletchart'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'bulletchart'</span><span class=\"k\">,</span>","      source<span class=\"k\">:</span> <span class=\"s\">'CCC'</span><span class=\"k\">,</span>","      name<span class=\"k\">:</span> <span class=\"s\">'Bullet Chart'</span><span class=\"k\">,</span>","      <span class=\"s\">'class'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.ccc.CccChart'</span><span class=\"k\">,</span>","","      args<span class=\"k\">:</span> <span class=\"k\">{</span>","        cccClass<span class=\"k\">:</span> <span class=\"s\">'pvc.BulletChart'</span><span class=\"k\">,</span>","        crosstabMode<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        showValues<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        showXScale<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        xAxisPosition<span class=\"k\">:</span> <span class=\"s\">\"bottom\"</span><span class=\"k\">,</span>","        showYScale<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        yAxisPosition<span class=\"k\">:</span> <span class=\"s\">\"left\"</span><span class=\"k\">,</span>","        legendPosition<span class=\"k\">:</span> <span class=\"s\">\"bottom\"</span><span class=\"k\">,</span>","        seriesInRows<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","","        bulletTitle<span class=\"k\">:</span> <span class=\"s\">'Test for title'</span><span class=\"k\">,</span>","        bulletSubtitle<span class=\"k\">:</span> <span class=\"s\">'Test for subtitle'</span><span class=\"k\">,</span>","        bulletMeasures<span class=\"k\">:</span> <span class=\"k\">[],</span>","","        <span class=\"c\">// TODO: Constant bullets markers and ranges?</span>","        bulletMarkers<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">\"7500\"</span><span class=\"k\">],</span>","        bulletRanges<span class=\"k\">:</span>  <span class=\"k\">[</span><span class=\"s\">\"3000\"</span><span class=\"k\">,</span> <span class=\"s\">\"6500\"</span><span class=\"k\">,</span> <span class=\"s\">\"9000\"</span><span class=\"k\">],</span>","","        bulletMargin<span class=\"k\">:</span> <span class=\"s\">50</span><span class=\"k\">,</span>","","        timeSeries<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        timeSeriesFormat<span class=\"k\">:</span> <span class=\"s\">\"%Y-%m-%d\"</span><span class=\"k\">,</span>","        panelSizeRatio<span class=\"k\">:</span> <span class=\"s\">0.8</span><span class=\"k\">,</span>","        orientation<span class=\"k\">:</span> <span class=\"s\">\"vertical\"</span><span class=\"k\">,</span>","        valuesAnchor<span class=\"k\">:</span> <span class=\"s\">\"right\"</span><span class=\"k\">,</span>","        titlePosition<span class=\"k\">:</span> <span class=\"s\">\"top\"</span><span class=\"k\">,</span>","        titleSize<span class=\"k\">:</span> <span class=\"s\">25</span><span class=\"k\">,</span>","        xAxisSize<span class=\"k\">:</span> <span class=\"s\">30</span><span class=\"k\">,</span>","        yAxisSize<span class=\"k\">:</span> <span class=\"s\">50</span><span class=\"k\">,</span>","        xAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        yAxisFullGrid<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        orthoAxisOrdinal<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        scalingType<span class=\"k\">:</span> <span class=\"s\">\"linear\"</span><span class=\"k\">,</span>","        numSD<span class=\"k\">:</span> <span class=\"s\">2</span><span class=\"k\">,</span>","","        extensionPoints<span class=\"k\">:</span> <span class=\"k\">[[</span><span class=\"s\">\"bulletRuleLabel_font\"</span><span class=\"k\">,</span><span class=\"s\">\"7pt sans\"</span><span class=\"k\">]],</span>","        normPerBaseCategory<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        useShapes<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        useCompositeAxis<span class=\"k\">:</span><span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">,</span>","      propMap<span class=\"k\">:</span> <span class=\"k\">[],</span>","      dataReqs<span class=\"k\">:</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span>","          name<span class=\"k\">:</span> <span class=\"s\">'Default'</span><span class=\"k\">,</span>","          reqs <span class=\"k\">:[</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'rows'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'row'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'Across'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'columns'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'Down'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","              id<span class=\"k\">:</span> <span class=\"s\">'measures'</span><span class=\"k\">,</span>","              dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","              dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","              caption<span class=\"k\">:</span> <span class=\"s\">'Values'</span><span class=\"k\">,</span>","              required<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span>","          <span class=\"k\">]</span>","        <span class=\"k\">}</span>","      <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     CccChart constructor</span>","<span class=\"c\">     Takes an HTML DOM element as a parameter</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"c\">/**</span>","<span class=\"c\">       * The axes' names.</span>","<span class=\"c\">       * NOTE that they are in the order to be tested</span>","<span class=\"c\">       * for being chosen as the drilling axis.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_keyAxes <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'column'</span><span class=\"k\">,</span> <span class=\"s\">'row'</span><span class=\"k\">];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_drillAxes <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_keyAxes<span class=\"k\">;</span>","","      <span class=\"c\">// _allAxes includes the non-key 'measure' axis</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_allAxes <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_keyAxes<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_allAxes<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'measure'</span><span class=\"k\">);</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_element <span class=\"k\">=</span> element<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_elementName <span class=\"k\">=</span> element<span class=\"k\">.</span>id<span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_cdaTable <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>  <span class=\"c\">// CDA DataTable</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_metadata  <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_resultset <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span> <span class=\"c\">// Analyzer DataTable</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_rowDtColIndexes <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions  <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_originalVizOptions <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_dataOptions <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_selections <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_currentChartType <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_colors <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_title <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     draw()</span>","","<span class=\"c\">     dataTable   a pentaho.DataTable object with the data to display</span>","<span class=\"c\">     vizOptions  the options for the visualization</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>draw <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>dataTable<span class=\"k\">,</span> vizOptions<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"c\">// Reset support fields</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_metadata  <span class=\"k\">=</span> <span class=\"k\">[];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_resultset <span class=\"k\">=</span> <span class=\"k\">[];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_cdaTable <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_colors <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"c\">// ----------------------</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable  <span class=\"k\">=</span> dataTable<span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_crossTable <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_rowDtColIndexes <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"c\">// ----------------------</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper <span class=\"k\">=</span> cv<span class=\"k\">.</span>pentahoVisualizationHelpers<span class=\"k\">[</span>vizOptions<span class=\"k\">.</span>customChartType<span class=\"k\">];</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_initializeOptions<span class=\"k\">(</span>vizOptions<span class=\"k\">);</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_initializeAxesMetadata<span class=\"k\">();</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_buildCrossTable<span class=\"k\">();</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_readData<span class=\"k\">();</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_prepareOptions<span class=\"k\">();</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_renderChart<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * INIT OPTIONS</span>","<span class=\"c\">     */</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_initializeOptions <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>vizOptions<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"c\">// Store a copy of the incoming parameters, for later use, in #resize</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_originalVizOptions <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> vizOptions<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_isResize <span class=\"k\">=</span> <span class=\"k\">!!</span>vizOptions<span class=\"k\">.</span>isResize<span class=\"k\">;</span>","      <span class=\"k\">delete</span> vizOptions<span class=\"k\">.</span>isResize<span class=\"k\">;</span>","      ","      <span class=\"c\">// Make a copy</span>","      vizOptions <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions <span class=\"k\">=</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> vizOptions<span class=\"k\">);</span>","","      <span class=\"c\">// Recover non user-overriden chart args extension points</span>","      <span class=\"c\">// * userDefinedProperties smash chart args' extension points...</span>","      <span class=\"k\">var</span> chartArgsExtPoints <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>controller<span class=\"k\">.</span>currentViz<span class=\"k\">.</span>args<span class=\"k\">.</span>extensionPoints<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>chartArgsExtPoints<span class=\"k\">)</span><span class=\"k\">{</span>","        vizOptions<span class=\"k\">.</span>extensionPoints <span class=\"k\">=</span> pvc<span class=\"k\">.</span>create<span class=\"k\">(</span>chartArgsExtPoints<span class=\"k\">,</span> vizOptions<span class=\"k\">.</span>extensionPoints<span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">// store the current highlighted selections</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_selections <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>selections<span class=\"k\">;</span>","","      <span class=\"k\">return</span> vizOptions<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * INIT METADATA</span>","<span class=\"c\">     */</span>","","<span class=\"c\">// -------------</span>","<span class=\"c\">// Axis are: row, column and measure.</span>","    <span class=\"k\">function</span> AxisInfo<span class=\"k\">(</span>axis<span class=\"k\">,</span> formulaInfos<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>id <span class=\"k\">=</span> axis<span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>formulasInfo <span class=\"k\">=</span> formulaInfos<span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>depth <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>formulasInfo<span class=\"k\">.</span>length<span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>formulas <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>formulasInfo<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>formInfo<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">// Overwrite axis id with corresponding AxisInfo instance</span>","        formInfo<span class=\"k\">.</span>axis <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> formInfo<span class=\"k\">.</span>formula<span class=\"k\">;</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Map of axis values to labels.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>valueLabel <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    AxisInfo<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getAxisLabel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>formulasInfo<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>formInfo<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"k\">return</span> formInfo<span class=\"k\">.</span>label<span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">)</span>","          <span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\" and \"</span><span class=\"k\">);</span> <span class=\"c\">// TODO localize</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_calcFilteredAxisFormulasInfo <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axis<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> formulasInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper<span class=\"k\">.</span>getAxisFormulasInfo<span class=\"k\">(</span>axis<span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>axis <span class=\"k\">!==</span> <span class=\"s\">'measure'</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> formulasInfo<span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> filtered <span class=\"k\">=</span> <span class=\"k\">[],</span>","          usedMeasureIds <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getUsedMeasuresIds<span class=\"k\">();</span>","","      formulasInfo<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>formulaInfo<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> meaId <span class=\"k\">=</span> formulaInfo<span class=\"k\">.</span>id<span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>meaId <span class=\"k\">&amp;&amp;</span> pvc<span class=\"k\">.</span>hasOwn<span class=\"k\">(</span>usedMeasureIds<span class=\"k\">,</span> meaId<span class=\"k\">))</span><span class=\"k\">{</span>","          formulaInfo<span class=\"k\">.</span>index <span class=\"k\">=</span> filtered<span class=\"k\">.</span>length<span class=\"k\">;</span>","          formulaInfo<span class=\"k\">.</span>role  <span class=\"k\">=</span> usedMeasureIds<span class=\"k\">[</span>meaId<span class=\"k\">];</span>","          filtered<span class=\"k\">.</span>push<span class=\"k\">(</span>formulaInfo<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","","      <span class=\"k\">return</span> filtered<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getUsedMeasuresIds <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","      <span class=\"c\">// Data truncation can affect also the structure of data.</span>","      <span class=\"c\">// If the query returns more than 100x100 rowsxcols,</span>","      <span class=\"c\">// requested measure formulas may be suppressed.</span>","      <span class=\"c\">// Filter measures not returned in this._dataTable</span>","","      assert<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">,</span> <span class=\"s\">\"Measure axis must be the last one to be processed.\"</span><span class=\"k\">);</span>","","      <span class=\"k\">var</span> dataTable <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">,</span>","          dtColCount <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfColumns<span class=\"k\">(),</span>","          seenMeasureIds <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","          lastMeasureId<span class=\"k\">;</span>","","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tc <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>depth <span class=\"k\">;</span> tc <span class=\"k\">&lt;</span> dtColCount <span class=\"k\">;</span> tc<span class=\"k\">++)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> dtColId <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span>tc<span class=\"k\">),</span>","            dtColParts <span class=\"k\">=</span> dtColId<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">),</span>","            meaId <span class=\"k\">=</span> dtColParts<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> dtColParts<span class=\"k\">.</span>pop<span class=\"k\">()</span> <span class=\"k\">:</span> dtColParts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>meaId <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>lastMeasureId <span class=\"k\">||</span> lastMeasureId <span class=\"k\">!==</span> meaId<span class=\"k\">))</span><span class=\"k\">{</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>pvc<span class=\"k\">.</span>hasOwn<span class=\"k\">(</span>seenMeasureIds<span class=\"k\">,</span> meaId<span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"c\">// Have seen all distinct measures</span>","            <span class=\"k\">break</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","","          <span class=\"k\">var</span> role <span class=\"k\">=</span> <span class=\"s\">'measure'</span><span class=\"k\">;</span>","          <span class=\"k\">var</span> dataReq <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getColumnProperty<span class=\"k\">(</span>tc<span class=\"k\">,</span> <span class=\"s\">'dataReq'</span><span class=\"k\">);</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>dataReq <span class=\"k\">&amp;&amp;</span> dataReq<span class=\"k\">.</span>id<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"c\">// Update measure role</span>","            role <span class=\"k\">=</span> dataReq<span class=\"k\">.</span>id<span class=\"k\">;</span>","          <span class=\"k\">}</span>","","          seenMeasureIds<span class=\"k\">[</span>meaId<span class=\"k\">]</span> <span class=\"k\">=</span> role<span class=\"k\">;</span>","","          lastMeasureId <span class=\"k\">=</span> meaId<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> seenMeasureIds<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_initializeAxesMetadata <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> myself <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Index of FormulaInfo by formula:</span>","<span class=\"c\">       *   formula -&gt; formulaInfo</span>","<span class=\"c\">       *</span>","<span class=\"c\">       * Filled by #indexFormula declared below.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_formulasInfo <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Create an AxisInfo for each axis.</span>","<span class=\"c\">       *</span>","<span class=\"c\">       * Index AxisInfo by axis: axis -&gt; AxisInfo.</span>","<span class=\"c\">       *</span>","<span class=\"c\">       * Index FormulaInfo by formula and id.</span>","<span class=\"c\">       *</span>","<span class=\"c\">       * Create CHART axis field:</span>","<span class=\"c\">       *   this._rowAxis     = ...</span>","<span class=\"c\">       *   this._columnAxis  = ...</span>","<span class=\"c\">       *   this._measureAxis = ...</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_allAxesInfo <span class=\"k\">=</span> pv<span class=\"k\">.</span>dict<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_allAxes<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>axis<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> axisInfo <span class=\"k\">=</span> <span class=\"k\">new</span> AxisInfo<span class=\"k\">(</span>axis<span class=\"k\">,</span> myself<span class=\"k\">.</span>_calcFilteredAxisFormulasInfo<span class=\"k\">(</span>axis<span class=\"k\">));</span>","","        myself<span class=\"k\">[</span><span class=\"s\">\"_\"</span> <span class=\"k\">+</span> axisInfo<span class=\"k\">.</span>id <span class=\"k\">+</span> <span class=\"s\">\"Axis\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> axisInfo<span class=\"k\">;</span>","","        axisInfo<span class=\"k\">.</span>formulasInfo<span class=\"k\">.</span>forEach<span class=\"k\">(</span>indexFormula<span class=\"k\">,</span> myself<span class=\"k\">);</span>","","        <span class=\"k\">return</span> axisInfo<span class=\"k\">;</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","","      <span class=\"c\">/* @instance */</span>","      <span class=\"k\">function</span> indexFormula<span class=\"k\">(</span>formInfo<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> form <span class=\"k\">=</span> formInfo<span class=\"k\">.</span>formula<span class=\"k\">,</span>","            id   <span class=\"k\">=</span> formInfo<span class=\"k\">.</span>id<span class=\"k\">;</span>","","        <span class=\"c\">// NOTE: when interaction is disabled...formula and id aren't available in every axis type...</span>","","        <span class=\"c\">// Index by formula</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>form<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_formulasInfo<span class=\"k\">[</span>form<span class=\"k\">]</span> <span class=\"k\">=</span> formInfo<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>id <span class=\"k\">&amp;&amp;</span> form <span class=\"k\">!==</span> id<span class=\"k\">)</span><span class=\"k\">{</span>","          assert<span class=\"k\">(</span>formInfo<span class=\"k\">.</span>axis<span class=\"k\">.</span>id <span class=\"k\">===</span> <span class=\"s\">'measure'</span><span class=\"k\">,</span> <span class=\"s\">\"Must be a measure\"</span><span class=\"k\">);</span>","","          <span class=\"c\">// Index ALSO by formula id.</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_formulasInfo<span class=\"k\">[</span>id<span class=\"k\">]</span> <span class=\"k\">=</span> formInfo<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">// The chart title is the conjuction of every row axis formula's label.</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_title <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>getAxisLabel<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_buildCrossTable <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","      <span class=\"c\">// row := {</span>","      <span class=\"c\">//   keyValues: row values Array,</span>","      <span class=\"c\">//   children: [],</span>","      <span class=\"c\">//   childrenByKey: joinedKeyVals -&gt; {</span>","      <span class=\"c\">//      keyValues: column values Array,</span>","      <span class=\"c\">//</span>","      <span class=\"c\">//      measures: [</span>","      <span class=\"c\">//          {v: measure 0 value, f: formatted value},</span>","      <span class=\"c\">//          ...</span>","      <span class=\"c\">//      ]</span>","      <span class=\"c\">//   }</span>","      <span class=\"c\">// };</span>","","      <span class=\"k\">var</span> dataTable  <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">,</span>","          dtColCount <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfColumns<span class=\"k\">(),</span>","          dtRowCount <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">();</span>","","      assert<span class=\"k\">(</span>dtColCount <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">\"DataTable must have at least one column\"</span><span class=\"k\">);</span>","","      <span class=\"c\">// Indexes of DataTable columns with the values of row axis formulas</span>","      <span class=\"c\">// By construction: the first R columns.</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_rowDtColIndexes  <span class=\"k\">=</span> pv<span class=\"k\">.</span>range<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>depth<span class=\"k\">);</span>","","      assert<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_rowDtColIndexes<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">\"There must exist at least one row axis formula.\"</span><span class=\"k\">);</span>","","      <span class=\"c\">// All other columns (!row axis formulas)</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes <span class=\"k\">=</span> pv<span class=\"k\">.</span>range<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>depth<span class=\"k\">,</span> dtColCount<span class=\"k\">);</span>","","      <span class=\"c\">// -------------</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_crossTable <span class=\"k\">=</span> <span class=\"k\">{</span>","        children<span class=\"k\">:</span>      <span class=\"k\">[],</span>","        childrenByKey<span class=\"k\">:</span> <span class=\"k\">{}</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"k\">if</span><span class=\"k\">(</span>dtRowCount <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> otherDtColsInfo <span class=\"k\">=</span> <span class=\"k\">[];</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>tc<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> dtColId <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span>tc<span class=\"k\">),</span>","            dtColParts <span class=\"k\">=</span> dtColId<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">),</span>","            colValsJoined<span class=\"k\">,</span>","            meaId<span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>dtColParts<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","          meaId <span class=\"k\">=</span> dtColParts<span class=\"k\">.</span>pop<span class=\"k\">();</span>","          colValsJoined <span class=\"k\">=</span> dtColParts<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","          meaId <span class=\"k\">=</span> dtColParts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","          colValsJoined <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Obtain the formula corresponding to the id.</span>","        <span class=\"k\">var</span> meaInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_formulasInfo<span class=\"k\">[</span>meaId<span class=\"k\">];</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>meaInfo<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"c\">// unmapped measure</span>","          <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> meaIndex <span class=\"k\">=</span> meaInfo<span class=\"k\">.</span>index<span class=\"k\">;</span>","","        <span class=\"c\">// Store labels for each value of a formula in the columns axis</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>colValsJoined<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"c\">// Includes measure, but we don't use it</span>","          <span class=\"k\">var</span> joinedLabels <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getColumnLabel<span class=\"k\">(</span>tc<span class=\"k\">),</span>","              colLabels <span class=\"k\">=</span> joinedLabels<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"~\"</span><span class=\"k\">);</span>","","          <span class=\"k\">if</span><span class=\"k\">(</span>colLabels<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","            colLabels<span class=\"k\">.</span>pop<span class=\"k\">();</span>","          <span class=\"k\">}</span>","","          dtColParts<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>colVal<span class=\"k\">,</span> level<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_columnAxis<span class=\"k\">.</span>valueLabel<span class=\"k\">[</span>colVal<span class=\"k\">]</span> <span class=\"k\">=</span> colLabels<span class=\"k\">[</span>level<span class=\"k\">];</span>","          <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","          <span class=\"c\">// Also allow getting a label for the joined value.</span>","          <span class=\"c\">// Depending on the chart, the joined value or</span>","          <span class=\"c\">// the component values are used for obtaining labels.</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_columnAxis<span class=\"k\">.</span>valueLabel<span class=\"k\">[</span>colValsJoined<span class=\"k\">]</span> <span class=\"k\">=</span> colLabels<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\" ~ \"</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        otherDtColsInfo<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","          column<span class=\"k\">:</span> tc<span class=\"k\">,</span>","          measureIndex<span class=\"k\">:</span> meaIndex<span class=\"k\">,</span>","          keyValues<span class=\"k\">:</span> dtColParts<span class=\"k\">,</span>","          key<span class=\"k\">:</span> colValsJoined","        <span class=\"k\">}</span><span class=\"k\">);</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"c\">// Also, collect the label of each row value</span>","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tr <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> tr <span class=\"k\">&lt;</span> dtRowCount <span class=\"k\">;</span> tr<span class=\"k\">++)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> rowLabels <span class=\"k\">=</span> <span class=\"k\">[],</span>","            rowVals <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rowDtColIndexes<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>tc<span class=\"k\">)</span><span class=\"k\">{</span>","              <span class=\"k\">var</span> rowVal <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">),</span>","                  rowLabel <span class=\"k\">=</span> rowVal <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","                      <span class=\"s\">\"-\"</span> <span class=\"k\">:</span>","                      dataTable<span class=\"k\">.</span>getFormattedValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">);</span>","","              <span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>valueLabel<span class=\"k\">[</span>rowVal<span class=\"k\">]</span> <span class=\"k\">=</span> rowLabel<span class=\"k\">;</span>","              rowLabels<span class=\"k\">.</span>push<span class=\"k\">(</span>rowLabel<span class=\"k\">);</span>","","              <span class=\"k\">return</span> rowVal<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> crossRow <span class=\"k\">=</span> <span class=\"k\">{</span>","          key<span class=\"k\">:</span>       rowVals<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">),</span>","          keyValues<span class=\"k\">:</span> rowVals<span class=\"k\">,</span>","          children<span class=\"k\">:</span>      <span class=\"k\">[],</span>","          childrenByKey<span class=\"k\">:</span> <span class=\"k\">{}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">// Also allow getting a label for the joined value.</span>","        <span class=\"c\">// Depending on the chart, the joined value or</span>","        <span class=\"c\">// the component values are used for obtaining labels.</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>valueLabel<span class=\"k\">[</span>crossRow<span class=\"k\">.</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> rowLabels<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\" ~ \"</span><span class=\"k\">);</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>_crossTable<span class=\"k\">.</span>children<span class=\"k\">.</span>push<span class=\"k\">(</span>crossRow<span class=\"k\">);</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_crossTable<span class=\"k\">.</span>childrenByKey<span class=\"k\">[</span>crossRow<span class=\"k\">.</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> crossRow<span class=\"k\">;</span>","","        otherDtColsInfo<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>dtColInfo<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">var</span> crossCol <span class=\"k\">=</span> crossRow<span class=\"k\">.</span>childrenByKey<span class=\"k\">[</span>dtColInfo<span class=\"k\">.</span>key<span class=\"k\">];</span>","          <span class=\"k\">if</span><span class=\"k\">(!</span>crossCol<span class=\"k\">)</span><span class=\"k\">{</span>","            crossCol <span class=\"k\">=</span> <span class=\"k\">{</span>","              key<span class=\"k\">:</span>       dtColInfo<span class=\"k\">.</span>key<span class=\"k\">,</span>","              keyValues<span class=\"k\">:</span> dtColInfo<span class=\"k\">.</span>keyValues<span class=\"k\">,</span>","              measures<span class=\"k\">:</span>  <span class=\"k\">[]</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            crossRow<span class=\"k\">.</span>children<span class=\"k\">.</span>push<span class=\"k\">(</span>crossCol<span class=\"k\">);</span>","            crossRow<span class=\"k\">.</span>childrenByKey<span class=\"k\">[</span>crossCol<span class=\"k\">.</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> crossCol<span class=\"k\">;</span>","          <span class=\"k\">}</span>","","          <span class=\"k\">var</span> tc <span class=\"k\">=</span> dtColInfo<span class=\"k\">.</span>column<span class=\"k\">,</span>","              value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">);</span>","","          <span class=\"k\">var</span> measure <span class=\"k\">=</span> <span class=\"k\">{</span>","            v<span class=\"k\">:</span> value<span class=\"k\">,</span>","            f<span class=\"k\">:</span> value <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"s\">\"-\"</span> <span class=\"k\">:</span> dataTable<span class=\"k\">.</span>getFormattedValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">)</span>","          <span class=\"k\">}</span><span class=\"k\">;</span>","","          crossCol<span class=\"k\">.</span>measures<span class=\"k\">[</span>dtColInfo<span class=\"k\">.</span>measureIndex<span class=\"k\">]</span> <span class=\"k\">=</span> measure<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getAxisValueLabel <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axis<span class=\"k\">,</span> value<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">switch</span><span class=\"k\">(</span>axis<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">case</span> <span class=\"s\">'column'</span><span class=\"k\">:</span>  <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_columnAxis<span class=\"k\">.</span>valueLabel<span class=\"k\">[</span>value<span class=\"k\">];</span>","        <span class=\"k\">case</span> <span class=\"s\">'row'</span><span class=\"k\">:</span>     <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>valueLabel<span class=\"k\">[</span>value<span class=\"k\">];</span>","        <span class=\"k\">case</span> <span class=\"s\">'measure'</span><span class=\"k\">:</span> <span class=\"k\">return</span> value<span class=\"k\">.</span>f<span class=\"k\">;</span> <span class=\"c\">// Must be a measure cell!</span>","      <span class=\"k\">}</span>","      <span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"Invalid axis: '\"</span> <span class=\"k\">+</span> axis <span class=\"k\">+</span> <span class=\"s\">\"'\"</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/* DataTable related */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getTableValue <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">);</span>","      <span class=\"k\">return</span> value <span class=\"k\">===</span> <span class=\"s\">'-'</span> <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * READ DATA</span>","<span class=\"c\">     */</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readData <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"c\">// Create the data options for the chart</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_dataOptions <span class=\"k\">=</span> <span class=\"k\">{</span>","        crosstabMode<span class=\"k\">:</span> <span class=\"k\">!!</span><span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>crosstabMode<span class=\"k\">,</span>","        seriesInRows<span class=\"k\">:</span> <span class=\"k\">false</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"k\">switch</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>cccClass<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">case</span> <span class=\"s\">'pvc.HeatGridChart'</span><span class=\"k\">:</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_readDataHeatGrid<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","","        <span class=\"k\">case</span> <span class=\"s\">'pvc.BarChart'</span><span class=\"k\">:</span>","        <span class=\"k\">case</span> <span class=\"s\">'pvc.NormalizedBarChart'</span><span class=\"k\">:</span>","        <span class=\"k\">case</span> <span class=\"s\">'pvc.LineChart'</span><span class=\"k\">:</span>","        <span class=\"k\">case</span> <span class=\"s\">'pvc.StackedAreaChart'</span><span class=\"k\">:</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_readDataRelational<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","","        <span class=\"k\">case</span> <span class=\"s\">'pvc.MetricDotChart'</span><span class=\"k\">:</span>","          <span class=\"c\">// All numeric value columns</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_readDataCrosstabSingleCategory<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","","        <span class=\"k\">case</span> <span class=\"s\">'pvc.PieChart'</span><span class=\"k\">:</span>","          assert<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"Only one series supported\"</span><span class=\"k\">);</span>","          <span class=\"c\">// Single numeric value column</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_readDataCrosstabSingleCategory<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","","        <span class=\"k\">case</span> <span class=\"s\">'pvc.BulletChart'</span><span class=\"k\">:</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_readDataBullet<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">// Create the CDA table</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_cdaTable <span class=\"k\">=</span> <span class=\"k\">{</span>","        metadata<span class=\"k\">:</span>  <span class=\"k\">this</span><span class=\"k\">.</span>_metadata<span class=\"k\">,</span>","        resultset<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_resultset","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Creates a CCC resultset in pure CROSSTAB format.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * Data passes through as it comes, being simply translated to CDA format.</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readDataCrosstab <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> dataTable <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">,</span>","          colCount <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfColumns<span class=\"k\">(),</span>","          rowCount <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">();</span>","","      <span class=\"c\">// Direct translation</span>","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tc <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> tc <span class=\"k\">&lt;</span> colCount <span class=\"k\">;</span> tc<span class=\"k\">++)</span><span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span>","            dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span>tc<span class=\"k\">),</span>","            dataTable<span class=\"k\">.</span>getColumnLabel<span class=\"k\">(</span>tc<span class=\"k\">),</span>","            writeCccColumnDataType<span class=\"k\">(</span>dataTable<span class=\"k\">.</span>getColumnType<span class=\"k\">(</span>tc<span class=\"k\">)));</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_resultset <span class=\"k\">=</span> createTable<span class=\"k\">(</span>rowCount<span class=\"k\">,</span> colCount<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Creates a CDA resultset in CROSSTAB format</span>","<span class=\"c\">     * with a single aggregated category column.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * 1    - Category - aggregated row axis columns</span>","<span class=\"c\">     * 2..N - Series X - value of 'other' columns</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readDataCrosstabSingleCategory <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> dataTable <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">,</span>","          rowCount <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">();</span>","","      <span class=\"c\">// Add the aggregate category column metadata</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Categories'</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_title<span class=\"k\">,</span> <span class=\"s\">'STRING'</span><span class=\"k\">);</span>","","      <span class=\"c\">// Add the numeric columns metadata</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>tc<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">//assert(writeCccColumnDataType(dataTable.getColumnType(tc)) === 'NUMERIC');</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span>","            dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span>tc<span class=\"k\">),</span>","            dataTable<span class=\"k\">.</span>getColumnLabel<span class=\"k\">(</span>tc<span class=\"k\">),</span>","            writeCccColumnDataType<span class=\"k\">(</span>dataTable<span class=\"k\">.</span>getColumnType<span class=\"k\">(</span>tc<span class=\"k\">)));</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"c\">// Build the rows</span>","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tr <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> tr <span class=\"k\">&lt;</span> rowCount <span class=\"k\">;</span> tr<span class=\"k\">++)</span><span class=\"k\">{</span>","","        <span class=\"k\">var</span> row <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_aggregateRowAxisForTableRow<span class=\"k\">(</span>tr<span class=\"k\">)];</span>","","        <span class=\"c\">// Add other columns' values</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>tc<span class=\"k\">)</span><span class=\"k\">{</span>","          row<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","        <span class=\"k\">this</span><span class=\"k\">.</span>_resultset<span class=\"k\">.</span>push<span class=\"k\">(</span>row<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Creates a CDA resultset in a single-value RELATIONAL format.</span>","<span class=\"c\">     * Only rows with a non-null value are added to the resultset.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * 1 - Category - aggregated row axis columns</span>","<span class=\"c\">     * 2 - Series   - label of 'other' DataTable columns</span>","<span class=\"c\">     * 3 - Value    - value of corresponding 'other' DataTable column</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readDataRelational <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"c\">// format the data for a BarChart, LineChart, or StackedAreaChart</span>","","      <span class=\"k\">var</span> dataTable <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">,</span>","          rowCount <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">();</span>","","      <span class=\"k\">var</span> seriesCount <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">.</span>length<span class=\"k\">;</span>","","      <span class=\"c\">// Take the first seriesCount colors from the palette</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_colors <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>palette<span class=\"k\">.</span>colors<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> seriesCount<span class=\"k\">);</span>","","      <span class=\"c\">// Create the metadata</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Series'</span><span class=\"k\">,</span>   <span class=\"s\">'Series'</span><span class=\"k\">,</span>   <span class=\"s\">'STRING'</span><span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Category'</span><span class=\"k\">,</span> <span class=\"s\">'Category'</span><span class=\"k\">,</span> <span class=\"s\">'STRING'</span><span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Value'</span><span class=\"k\">,</span>    <span class=\"s\">'Value'</span><span class=\"k\">,</span>    <span class=\"s\">'NUMERIC'</span><span class=\"k\">);</span>","","      <span class=\"k\">if</span><span class=\"k\">(</span>rowCount <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> seriesLabels <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>tc<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">return</span> dataTable<span class=\"k\">.</span>getColumnLabel<span class=\"k\">(</span>tc<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"c\">// process the rows</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tr <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> tr <span class=\"k\">&lt;</span> rowCount <span class=\"k\">;</span> tr<span class=\"k\">++)</span> <span class=\"k\">{</span>","","          <span class=\"k\">var</span> category <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_aggregateRowAxisForTableRow<span class=\"k\">(</span>tr<span class=\"k\">);</span>","","          <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> seriesCount <span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> tc <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">[</span>i<span class=\"k\">];</span>","","            <span class=\"k\">var</span> value <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>value <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span>","              <span class=\"k\">this</span><span class=\"k\">.</span>_resultset<span class=\"k\">.</span>push<span class=\"k\">([</span>","                seriesLabels<span class=\"k\">[</span>i<span class=\"k\">],</span>","                category<span class=\"k\">,</span>","                value","              <span class=\"k\">]);</span>","            <span class=\"k\">}</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Creates a CCC resultset in pure CROSSTAB format.</span>","<span class=\"c\">     * Fills data-related options.</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readDataHeatGrid <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_readDataCrosstab<span class=\"k\">();</span>","","      <span class=\"k\">var</span> measureCount <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_measureAxis<span class=\"k\">.</span>depth<span class=\"k\">;</span>","","      <span class=\"c\">// Update data options</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_dataOptions<span class=\"k\">.</span>dataOptions <span class=\"k\">=</span> <span class=\"k\">{</span>","        categoriesCount<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>depth<span class=\"k\">,</span>","","        <span class=\"c\">// Whenever there are measures,</span>","        <span class=\"c\">//  they are mixed in the columns</span>","        measuresInColumns<span class=\"k\">:</span> measureCount <span class=\"k\">&gt;</span> <span class=\"s\">0</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Creates a CDA resultset in a custom RELATIONAL format.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * 1    - Category - aggregated row axis columns</span>","<span class=\"c\">     * 2    - Series   - label of 'other' DataTable columns</span>","<span class=\"c\">     * 3    - Value    - numeric value of corresponding 'other' DataTable column</span>","<span class=\"c\">     * 4    - Marker   - marker numeric value of corresponding 'other' DataTable column</span>","<span class=\"c\">     * 5..R - Range r  - range numeric value, taken from vizOptions.bulletRanges</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readDataBullet <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> dataTable   <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">,</span>","          rowCount    <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">(),</span>","          measureCols <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">,</span>","          seriesCount <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_otherDtColIndexes<span class=\"k\">.</span>length<span class=\"k\">,</span>","          vizOptions  <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_dataOptions<span class=\"k\">.</span>seriesInRows <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Category'</span><span class=\"k\">,</span> <span class=\"s\">'Category'</span><span class=\"k\">,</span> <span class=\"s\">'STRING'</span> <span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Series'</span><span class=\"k\">,</span>   <span class=\"s\">'Series'</span><span class=\"k\">,</span>   <span class=\"s\">'STRING'</span> <span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Value'</span><span class=\"k\">,</span>    <span class=\"s\">'Value'</span><span class=\"k\">,</span>    <span class=\"s\">'NUMERIC'</span><span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Marker'</span><span class=\"k\">,</span>   <span class=\"s\">'Marker'</span><span class=\"k\">,</span>   <span class=\"s\">'NUMERIC'</span><span class=\"k\">);</span>","","      <span class=\"k\">if</span> <span class=\"k\">(</span>vizOptions<span class=\"k\">.</span>bulletRanges<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> R <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>bulletRanges<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> R <span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_addCdaMetadata<span class=\"k\">(</span><span class=\"s\">'Range'</span>  <span class=\"k\">+</span> i<span class=\"k\">,</span> <span class=\"s\">'Range '</span> <span class=\"k\">+</span> i<span class=\"k\">,</span> <span class=\"s\">'NUMERIC'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> measuresCount <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_measureAxis<span class=\"k\">.</span>depth<span class=\"k\">;</span>","","      <span class=\"c\">// Process the rvar measuresCount = this._measureAxis.depth;ows</span>","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tr <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> tr <span class=\"k\">&lt;</span> rowCount <span class=\"k\">;</span> tr<span class=\"k\">++)</span><span class=\"k\">{</span>","","        <span class=\"k\">var</span> category <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_aggregateRowAxisForTableRow<span class=\"k\">(</span>tr<span class=\"k\">);</span>","","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> s <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> s <span class=\"k\">&lt;</span> seriesCount <span class=\"k\">;</span> s <span class=\"k\">+=</span> measuresCount<span class=\"k\">)</span> <span class=\"k\">{</span>","          <span class=\"c\">// Measures should be defined in pairs</span>","          <span class=\"c\">// Each Value measure followed by a Marker measure:</span>","          <span class=\"c\">//  &lt;ValueMeasure1, MarkerMeasure1&gt;,</span>","          <span class=\"c\">//  &lt;ValueMeasure2, MarkerMeasure2&gt;,</span>","          <span class=\"c\">//  ...</span>","          <span class=\"c\">//  &lt;ValueMeasureN [, MarkerMeasureN]&gt;</span>","          <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> m <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> m <span class=\"k\">&lt;</span> measuresCount <span class=\"k\">;</span> m <span class=\"k\">+=</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> valueColIndex  <span class=\"k\">=</span> s <span class=\"k\">+</span> m<span class=\"k\">,</span>","                markerColIndex <span class=\"k\">=</span> valueColIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span>","                tc <span class=\"k\">=</span> measureCols<span class=\"k\">[</span>valueColIndex<span class=\"k\">],</span>","                dtColParts <span class=\"k\">=</span> dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span>tc<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">);</span>","","            dtColParts<span class=\"k\">.</span>pop<span class=\"k\">();</span>","","            <span class=\"k\">var</span> row <span class=\"k\">=</span> <span class=\"k\">[</span>","              <span class=\"c\">// Normal relational part</span>","              category<span class=\"k\">,</span> <span class=\"c\">// aggregated category</span>","              dtColParts<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">),</span> <span class=\"c\">// series label</span>","              <span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">),</span>  <span class=\"c\">// series value - may be null...is it ok?</span>","","              <span class=\"c\">// Marker - may be missing on the last measure pair</span>","              m <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">&lt;</span> measuresCount <span class=\"k\">?</span>","                  <span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> measureCols<span class=\"k\">[</span>markerColIndex<span class=\"k\">])</span> <span class=\"k\">:</span>","                  vizOptions<span class=\"k\">.</span>bulletMarkers<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"c\">// TODO: 7500</span>","            <span class=\"k\">];</span>","","            <span class=\"c\">// Dynamic columns</span>","            <span class=\"k\">var</span> bulletRanges <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>bulletRanges<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>bulletRanges<span class=\"k\">)</span><span class=\"k\">{</span>","              bulletRanges<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>rangeValue<span class=\"k\">)</span><span class=\"k\">{</span>","                row<span class=\"k\">.</span>push<span class=\"k\">(</span>rangeValue<span class=\"k\">);</span>","              <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>_resultset<span class=\"k\">.</span>push<span class=\"k\">(</span>row<span class=\"k\">);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_aggregateRowAxisForTableRow <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>tr<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"c\">// Concat all of the string columns</span>","      <span class=\"k\">var</span> values <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rowDtColIndexes<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>tc<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getTableValue<span class=\"k\">(</span>tr<span class=\"k\">,</span> tc<span class=\"k\">);</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"k\">return</span> values<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_addCdaMetadata <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>colName<span class=\"k\">,</span> colLabel<span class=\"k\">,</span> colType<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_metadata<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","        colIndex<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_metadata<span class=\"k\">.</span>length<span class=\"k\">,</span>","        colName<span class=\"k\">:</span>  colName<span class=\"k\">,</span>","        colLabel<span class=\"k\">:</span> colLabel<span class=\"k\">,</span>","        colType<span class=\"k\">:</span>  colType","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"c\">/*</span>","<span class=\"c\">     * PREPARE OPTIONS</span>","<span class=\"c\">     */</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_prepareOptions <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> vizOptions <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">;</span>","","      <span class=\"k\">var</span> myself <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","      <span class=\"k\">var</span> options <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>options <span class=\"k\">=</span> <span class=\"k\">{</span>","        canvas<span class=\"k\">:</span>  <span class=\"k\">this</span><span class=\"k\">.</span>_elementName<span class=\"k\">,</span>","        animate<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","        legend<span class=\"k\">:</span>  <span class=\"k\">true</span><span class=\"k\">,</span>","        legendPosition<span class=\"k\">:</span> <span class=\"s\">\"bottom\"</span><span class=\"k\">,</span>","","        titlePosition<span class=\"k\">:</span>  <span class=\"s\">\"top\"</span><span class=\"k\">,</span>","","        margins<span class=\"k\">:</span> <span class=\"s\">20</span><span class=\"k\">,</span>","","        showTooltips<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        showValues<span class=\"k\">:</span>   <span class=\"k\">false</span><span class=\"k\">,</span>","","        clickable<span class=\"k\">:</span>    <span class=\"k\">true</span><span class=\"k\">,</span>","        selectable<span class=\"k\">:</span>   <span class=\"k\">true</span><span class=\"k\">,</span>","        ctrlSelectMode<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","        title<span class=\"k\">:</span>  <span class=\"k\">this</span><span class=\"k\">.</span>_title <span class=\"k\">==</span> <span class=\"s\">\"\"</span> <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>_title<span class=\"k\">,</span>","        colors<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>getColors<span class=\"k\">(),</span>","","        clickAction<span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">,</span>","","        mouseOverAction<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">,</span>","","        mouseUpAction<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">,</span>","","        getCategoryLabel<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>value<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">return</span> myself<span class=\"k\">.</span>_getAxisValueLabel<span class=\"k\">(</span><span class=\"s\">'row'</span><span class=\"k\">,</span> value<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        getSeriesLabel<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>value<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">return</span> myself<span class=\"k\">.</span>_getAxisValueLabel<span class=\"k\">(</span><span class=\"s\">'column'</span><span class=\"k\">,</span> value<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">// Just in case</span>","      vizOptions<span class=\"k\">.</span>height <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>height <span class=\"k\">||</span> <span class=\"s\">400</span><span class=\"k\">;</span>","      vizOptions<span class=\"k\">.</span>width  <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>width  <span class=\"k\">||</span> <span class=\"s\">400</span><span class=\"k\">;</span>","","      <span class=\"c\">// ------------</span>","","      <span class=\"c\">// Vertical Margin</span>","      <span class=\"c\">// @see #_renderChart</span>","      <span class=\"c\">//this._vMargin = Math.round(0.06 * vizOptions.height);</span>","      <span class=\"c\">//vizOptions.height -= this._vMargin;</span>","","      <span class=\"c\">// ------------</span>","","      <span class=\"k\">switch</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>cccClass<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">case</span> <span class=\"s\">'pvc.HeatGridChart'</span><span class=\"k\">:</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_prepareOptionsHeatGrid<span class=\"k\">();</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_prepareLayoutHeatGrid<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","","        <span class=\"k\">case</span> <span class=\"s\">'pvc.BulletChart'</span><span class=\"k\">:</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_prepareOptionsBullet<span class=\"k\">();</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_prepareLayoutBullet<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","","        <span class=\"k\">case</span> <span class=\"s\">'pvc.BarChart'</span><span class=\"k\">:</span>","        <span class=\"k\">case</span> <span class=\"s\">'pvc.NormalizedBarChart'</span><span class=\"k\">:</span>","        <span class=\"k\">case</span> <span class=\"s\">'pvc.StackedAreaChart'</span><span class=\"k\">:</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_prepareOptionsCategNormal<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","","        <span class=\"k\">case</span> <span class=\"s\">'pvc.LineChart'</span><span class=\"k\">:</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_prepareOptionsCategNormal<span class=\"k\">();</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_prepareOptionsLine<span class=\"k\">();</span>","          <span class=\"k\">break</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">// --------------------</span>","","      <span class=\"c\">// Copy options from the visualization metadata to the chart options</span>","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> x <span class=\"k\">in</span> vizOptions<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_shouldSkipVizOption<span class=\"k\">(</span>x<span class=\"k\">))</span><span class=\"k\">{</span>","          <span class=\"k\">var</span> v <span class=\"k\">=</span> vizOptions<span class=\"k\">[</span>x<span class=\"k\">];</span>","","          <span class=\"c\">// Change 'x' and/or 'v'</span>","          <span class=\"k\">switch</span><span class=\"k\">(</span>x<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">case</span> <span class=\"s\">'legendPosition'</span><span class=\"k\">:</span>","              v <span class=\"k\">=</span> v <span class=\"k\">&amp;&amp;</span> v<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","              <span class=\"k\">break</span><span class=\"k\">;</span>","","            <span class=\"k\">case</span> <span class=\"s\">'showLegend'</span><span class=\"k\">:</span>","              v <span class=\"k\">=</span> <span class=\"k\">((</span><span class=\"s\">''</span> <span class=\"k\">+</span> v<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">'true'</span><span class=\"k\">);</span>","              <span class=\"k\">break</span><span class=\"k\">;</span>","","            <span class=\"k\">case</span> <span class=\"s\">'legendSize'</span><span class=\"k\">:</span>","            <span class=\"k\">case</span> <span class=\"s\">'lineWidth'</span><span class=\"k\">:</span>","              v <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>v<span class=\"k\">);</span>","              <span class=\"k\">break</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","","          options<span class=\"k\">[</span>x<span class=\"k\">]</span> <span class=\"k\">=</span> v<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> axisLabelFont <span class=\"k\">=</span> options<span class=\"k\">.</span>axisLabelFont<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(!</span>axisLabelFont<span class=\"k\">)</span><span class=\"k\">{</span>","        options<span class=\"k\">.</span>axisLabelFont <span class=\"k\">=</span> <span class=\"s\">'12px sans-serif'</span><span class=\"k\">;</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        options<span class=\"k\">.</span>axisLabelFont <span class=\"k\">=</span> axisLabelFont<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\bdefault\\s*$/i</span><span class=\"k\">,</span> <span class=\"s\">'sans-serif'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper<span class=\"k\">.</span>isInteractionEnabled<span class=\"k\">())</span><span class=\"k\">{</span>","        options<span class=\"k\">.</span>showTooltips <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        options<span class=\"k\">.</span>clickable    <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        options<span class=\"k\">.</span>selectable   <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">// Calculate 'legendAlign' default value</span>","      <span class=\"k\">if</span><span class=\"k\">(!(</span><span class=\"s\">'legendAlign'</span> <span class=\"k\">in</span> options<span class=\"k\">))</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> legendPosition <span class=\"k\">=</span> options<span class=\"k\">.</span>legendPosition<span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>legendPosition <span class=\"k\">===</span> <span class=\"s\">'top'</span> <span class=\"k\">||</span> legendPosition <span class=\"k\">===</span> <span class=\"s\">'bottom'</span><span class=\"k\">)</span><span class=\"k\">{</span>","          options<span class=\"k\">.</span>legendAlign <span class=\"k\">=</span> <span class=\"s\">'center'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","          options<span class=\"k\">.</span>legendAlign <span class=\"k\">=</span> <span class=\"s\">'middle'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> vizExtPoints <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>extensionPoints<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>vizExtPoints<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> extPoints <span class=\"k\">=</span> options<span class=\"k\">.</span>extensionPoints <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> y <span class=\"k\">in</span> vizExtPoints<span class=\"k\">)</span> <span class=\"k\">{</span>","          extPoints<span class=\"k\">[</span>y<span class=\"k\">]</span> <span class=\"k\">=</span> vizExtPoints<span class=\"k\">[</span>y<span class=\"k\">];</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_prepareOptionsHeatGrid <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> myself <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","          options <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">,</span>","          vizOptions <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">;</span>","","      options<span class=\"k\">.</span>selectionChangedAction <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>cccSelections<span class=\"k\">)</span><span class=\"k\">{</span>","        myself<span class=\"k\">.</span>_notifyCccSelectionChanged<span class=\"k\">(</span>cccSelections<span class=\"k\">);</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">// Drill down on shapes</span>","      options<span class=\"k\">.</span>doubleClickAction <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">,</span> d<span class=\"k\">,</span> ev<span class=\"k\">,</span> datum<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> myself<span class=\"k\">.</span>_drillDown<span class=\"k\">(</span>myself<span class=\"k\">.</span>_readDatum<span class=\"k\">(</span>datum<span class=\"k\">));</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">// Drill down on y axis</span>","      options<span class=\"k\">.</span>yAxisDoubleClickAction <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> myself<span class=\"k\">.</span>_drillDown<span class=\"k\">(</span>myself<span class=\"k\">.</span>_readCccAxesValues<span class=\"k\">(</span>d<span class=\"k\">.</span>absValue<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">));</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">// Drill down on x axis</span>","      options<span class=\"k\">.</span>xAxisDoubleClickAction <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>d<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> myself<span class=\"k\">.</span>_drillDown<span class=\"k\">(</span>myself<span class=\"k\">.</span>_readCccAxesValues<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span> d<span class=\"k\">.</span>absValue<span class=\"k\">));</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      options<span class=\"k\">.</span>customTooltip <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">,</span> v<span class=\"k\">,</span> datum<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> myself<span class=\"k\">.</span>_getTooltipText<span class=\"k\">(</span>myself<span class=\"k\">.</span>_readDatum<span class=\"k\">(</span>datum<span class=\"k\">));</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">// ----------------</span>","","      <span class=\"k\">var</span> freeMeasures   <span class=\"k\">=</span> <span class=\"k\">[],</span>","          measuresByRole <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","      <span class=\"k\">this</span><span class=\"k\">.</span>_measureAxis<span class=\"k\">.</span>formulasInfo<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>formulaInfo<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>formulaInfo<span class=\"k\">.</span>role <span class=\"k\">!==</span> <span class=\"s\">'measure'</span><span class=\"k\">)</span><span class=\"k\">{</span>","          measuresByRole<span class=\"k\">[</span>formulaInfo<span class=\"k\">.</span>role<span class=\"k\">]</span> <span class=\"k\">=</span> formulaInfo<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","          freeMeasures<span class=\"k\">.</span>push<span class=\"k\">(</span>formulaInfo<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","","      <span class=\"c\">// Color role</span>","      <span class=\"k\">var</span> formulaInfo <span class=\"k\">=</span> measuresByRole<span class=\"k\">[</span><span class=\"s\">'color'</span><span class=\"k\">]</span> <span class=\"k\">||</span> freeMeasures<span class=\"k\">.</span>shift<span class=\"k\">();</span>","      vizOptions<span class=\"k\">.</span>colorValIdx <span class=\"k\">=</span> formulaInfo <span class=\"k\">?</span>  formulaInfo<span class=\"k\">.</span>index <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"c\">// Size role</span>","      formulaInfo <span class=\"k\">=</span> measuresByRole<span class=\"k\">[</span><span class=\"s\">'size'</span><span class=\"k\">]</span> <span class=\"k\">||</span> freeMeasures<span class=\"k\">.</span>shift<span class=\"k\">();</span>","      vizOptions<span class=\"k\">.</span>sizeValIdx <span class=\"k\">=</span> formulaInfo <span class=\"k\">?</span>  formulaInfo<span class=\"k\">.</span>index <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">if</span><span class=\"k\">(</span>vizOptions<span class=\"k\">.</span>colorValIdx <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">// No color; set the nullColor option to the first of the colorRange</span>","        <span class=\"k\">var</span> nullColor <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>colorRange <span class=\"k\">&amp;&amp;</span> vizOptions<span class=\"k\">.</span>colorRange<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","        vizOptions<span class=\"k\">.</span>nullColor <span class=\"k\">=</span> nullColor <span class=\"k\">||</span> <span class=\"s\">'red'</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_prepareLayoutHeatGrid <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> vizOptions <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">;</span>","","      <span class=\"c\">// TODO: is it ok to access \"vizOptions.controller.domNode\" ?</span>","      vizOptions<span class=\"k\">.</span>controller<span class=\"k\">.</span>domNode<span class=\"k\">.</span>style<span class=\"k\">.</span>overflow <span class=\"k\">=</span> <span class=\"s\">'hidden'</span><span class=\"k\">;</span> <span class=\"c\">// Hide overflow</span>","","      <span class=\"k\">var</span> measureCount <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_measureAxis<span class=\"k\">.</span>depth<span class=\"k\">,</span>","          catsDepth    <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_rowAxis<span class=\"k\">.</span>depth<span class=\"k\">,</span>","          sersDepth    <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_columnAxis<span class=\"k\">.</span>depth<span class=\"k\">,</span>","          catsBreadth  <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">()</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">),</span>","          sersBreadth  <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getNumberOfColumns<span class=\"k\">()</span> <span class=\"k\">-</span> catsDepth<span class=\"k\">;</span>","","      <span class=\"k\">if</span><span class=\"k\">(</span>measureCount <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>","        sersBreadth <span class=\"k\">/=</span> measureCount<span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> width  <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>width<span class=\"k\">,</span>","          height <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>height<span class=\"k\">,</span>","          currRatio <span class=\"k\">=</span> width <span class=\"k\">/</span> height<span class=\"k\">,</span>","          xyChartRatio <span class=\"k\">=</span> catsBreadth <span class=\"k\">/</span> sersBreadth<span class=\"k\">;</span>","","      <span class=\"c\">// Min desirable sizes according to depth</span>","      <span class=\"k\">var</span> MAX_AXIS_SIZE    <span class=\"k\">=</span> <span class=\"s\">300</span><span class=\"k\">,</span>","          MIN_LEVEL_HEIGHT <span class=\"k\">=</span> <span class=\"s\">70</span><span class=\"k\">,</span>","          MAX_LEVEL_HEIGHT <span class=\"k\">=</span> <span class=\"s\">200</span><span class=\"k\">,</span>","          MAX_AXIS_RATIO   <span class=\"k\">=</span> <span class=\"s\">0.35</span><span class=\"k\">;</span>","","      <span class=\"k\">var</span> minXAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>MAX_AXIS_SIZE<span class=\"k\">,</span> catsDepth <span class=\"k\">*</span> MIN_LEVEL_HEIGHT<span class=\"k\">),</span>","          minYAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>MAX_AXIS_SIZE<span class=\"k\">,</span> sersDepth <span class=\"k\">*</span> MIN_LEVEL_HEIGHT<span class=\"k\">),</span>","          maxXAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>MAX_AXIS_SIZE<span class=\"k\">,</span> catsDepth <span class=\"k\">*</span> MAX_LEVEL_HEIGHT<span class=\"k\">,</span> height <span class=\"k\">*</span> MAX_AXIS_RATIO<span class=\"k\">),</span>","          maxYAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>MAX_AXIS_SIZE<span class=\"k\">,</span> sersDepth <span class=\"k\">*</span> MAX_LEVEL_HEIGHT<span class=\"k\">,</span> width  <span class=\"k\">*</span> MAX_AXIS_RATIO<span class=\"k\">);</span>","","      <span class=\"k\">var</span> xAxisSize<span class=\"k\">,</span>","          yAxisSize<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>xyChartRatio <span class=\"k\">&gt;</span> currRatio<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// lock width</span>","        <span class=\"k\">var</span> extraHeight <span class=\"k\">=</span> height <span class=\"k\">-</span> width <span class=\"k\">/</span> xyChartRatio<span class=\"k\">;</span>","","        yAxisSize <span class=\"k\">=</span> minYAxisSize<span class=\"k\">;</span>","","        xAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>extraHeight<span class=\"k\">,</span> maxXAxisSize<span class=\"k\">);</span>","        xAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>xAxisSize<span class=\"k\">,</span>   minXAxisSize<span class=\"k\">);</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>xyChartRatio <span class=\"k\">&lt;</span> currRatio<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// lock height</span>","        <span class=\"k\">var</span> extraWidth <span class=\"k\">=</span> width <span class=\"k\">-</span> height <span class=\"k\">*</span> xyChartRatio<span class=\"k\">;</span>","","        xAxisSize <span class=\"k\">=</span> minXAxisSize<span class=\"k\">;</span>","","        yAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>extraWidth<span class=\"k\">,</span> maxYAxisSize<span class=\"k\">);</span>","        yAxisSize <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>yAxisSize<span class=\"k\">,</span>  minYAxisSize<span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">// ------------------</span>","","      <span class=\"c\">// Update Axes sizes</span>","      vizOptions<span class=\"k\">.</span>xAxisSize <span class=\"k\">=</span> xAxisSize<span class=\"k\">;</span>","      vizOptions<span class=\"k\">.</span>yAxisSize <span class=\"k\">=</span> yAxisSize<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_prepareOptionsCategNormal <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> myself <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","          options <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">;</span>","","      <span class=\"c\">// Drill on categories first and only then on series</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_drillAxes <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'row'</span><span class=\"k\">,</span> <span class=\"s\">'column'</span><span class=\"k\">];</span>","","      options<span class=\"k\">.</span>customTooltip <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">,</span> v<span class=\"k\">,</span> datum<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> myself<span class=\"k\">.</span>_getTooltipText<span class=\"k\">(</span>myself<span class=\"k\">.</span>_readDatum<span class=\"k\">(</span>datum<span class=\"k\">));</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">// Use selection event handler instead of clickAction</span>","      options<span class=\"k\">.</span>selectionChangedAction <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>cccSelections<span class=\"k\">)</span><span class=\"k\">{</span>","        myself<span class=\"k\">.</span>_notifyCccSelectionChanged<span class=\"k\">(</span>cccSelections<span class=\"k\">);</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">// Drill down on shapes</span>","      options<span class=\"k\">.</span>doubleClickAction <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">,</span> v<span class=\"k\">,</span> ev<span class=\"k\">,</span> datum<span class=\"k\">)</span><span class=\"k\">{</span>","        myself<span class=\"k\">.</span>_drillDown<span class=\"k\">(</span>myself<span class=\"k\">.</span>_readDatum<span class=\"k\">(</span>datum<span class=\"k\">));</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_prepareOptionsLine <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> vizOptions <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">;</span>","","      <span class=\"k\">var</span> shape <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>shape<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>shape <span class=\"k\">&amp;&amp;</span> shape <span class=\"k\">===</span> <span class=\"s\">'none'</span><span class=\"k\">)</span><span class=\"k\">{</span>","        vizOptions<span class=\"k\">.</span>showDots <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        vizOptions<span class=\"k\">.</span>showDots <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        vizOptions<span class=\"k\">.</span>extensionPoints<span class=\"k\">.</span>dot_shape <span class=\"k\">=</span> shape<span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_prepareOptionsBullet <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> myself <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","          options <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">;</span>","","      options<span class=\"k\">.</span>legend <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","      <span class=\"c\">// Drill down on shapes</span>","      options<span class=\"k\">.</span>axisDoubleClickAction <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> c <span class=\"k\">=</span> d<span class=\"k\">.</span>title<span class=\"k\">,</span>","            s <span class=\"k\">=</span> d<span class=\"k\">.</span>subtitle<span class=\"k\">;</span>","","        myself<span class=\"k\">.</span>_drillDown<span class=\"k\">(</span>myself<span class=\"k\">.</span>_readCccAxesValues<span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">));</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      options<span class=\"k\">.</span>clickAction <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>c<span class=\"k\">,</span> s<span class=\"k\">)</span> <span class=\"k\">{</span>","        myself<span class=\"k\">.</span>_notifySelectionChanged<span class=\"k\">(</span>","            <span class=\"k\">[</span> myself<span class=\"k\">.</span>_convertKeysSelectionCccToAnalyzer<span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">)</span> <span class=\"k\">]);</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_prepareLayoutBullet <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> vizOptions <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">;</span>","","      <span class=\"k\">var</span> isVertical <span class=\"k\">=</span> vizOptions<span class=\"k\">.</span>orientation <span class=\"k\">==</span> <span class=\"s\">'vertical'</span><span class=\"k\">;</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_resultset<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">20</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        vizOptions<span class=\"k\">.</span>bulletSize <span class=\"k\">=</span> <span class=\"s\">10</span><span class=\"k\">;</span>","        vizOptions<span class=\"k\">.</span>bulletSpacing <span class=\"k\">=</span> isVertical <span class=\"k\">?</span> <span class=\"s\">60</span> <span class=\"k\">:</span> <span class=\"s\">20</span><span class=\"k\">;</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_resultset<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        vizOptions<span class=\"k\">.</span>bulletSize <span class=\"k\">=</span> <span class=\"s\">15</span><span class=\"k\">;</span>","        vizOptions<span class=\"k\">.</span>bulletSpacing <span class=\"k\">=</span> isVertical <span class=\"k\">?</span> <span class=\"s\">80</span> <span class=\"k\">:</span> <span class=\"s\">30</span><span class=\"k\">;</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        vizOptions<span class=\"k\">.</span>bulletSize <span class=\"k\">=</span> <span class=\"s\">20</span><span class=\"k\">;</span>","        vizOptions<span class=\"k\">.</span>bulletSpacing <span class=\"k\">=</span> isVertical <span class=\"k\">?</span> <span class=\"s\">120</span> <span class=\"k\">:</span> <span class=\"s\">50</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> totalSpace <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"s\">2</span> <span class=\"k\">+</span> vizOptions<span class=\"k\">.</span>bulletSize <span class=\"k\">+</span> vizOptions<span class=\"k\">.</span>bulletSpacing<span class=\"k\">)</span> <span class=\"k\">*</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_resultset<span class=\"k\">.</span>length<span class=\"k\">;</span>","","      <span class=\"c\">// TODO: vizOptions.controller.domNode</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>isVertical<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>totalSpace <span class=\"k\">&gt;</span> vizOptions<span class=\"k\">.</span>width<span class=\"k\">)</span> <span class=\"k\">{</span>","          vizOptions<span class=\"k\">.</span>controller<span class=\"k\">.</span>domNode<span class=\"k\">.</span>style<span class=\"k\">.</span>overflowX <span class=\"k\">=</span> <span class=\"s\">'auto'</span><span class=\"k\">;</span>","          vizOptions<span class=\"k\">.</span>controller<span class=\"k\">.</span>domNode<span class=\"k\">.</span>style<span class=\"k\">.</span>overflowY <span class=\"k\">=</span> <span class=\"s\">'hidden'</span><span class=\"k\">;</span>","","          vizOptions<span class=\"k\">.</span>width <span class=\"k\">=</span> totalSpace<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>totalSpace <span class=\"k\">&gt;</span> vizOptions<span class=\"k\">.</span>height<span class=\"k\">)</span> <span class=\"k\">{</span>","          vizOptions<span class=\"k\">.</span>controller<span class=\"k\">.</span>domNode<span class=\"k\">.</span>style<span class=\"k\">.</span>overflowY <span class=\"k\">=</span> <span class=\"s\">'auto'</span><span class=\"k\">;</span>","          vizOptions<span class=\"k\">.</span>controller<span class=\"k\">.</span>domNode<span class=\"k\">.</span>style<span class=\"k\">.</span>overflowX <span class=\"k\">=</span> <span class=\"s\">'hidden'</span><span class=\"k\">;</span>","","          vizOptions<span class=\"k\">.</span>height <span class=\"k\">=</span> totalSpace<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","<span class=\"c\">// TODO - probably the skip logic should be inverted,</span>","<span class=\"c\">// this would be specified in terms of inclusion of CCC options.</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_shouldSkipVizOption <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>option<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">(</span>option <span class=\"k\">in</span> skipVizOtions<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Set of visualization options that</span>","<span class=\"c\">     * should not be copied to the CCC options.</span>","<span class=\"c\">     */</span>","    <span class=\"k\">var</span> skipVizOtions <span class=\"k\">=</span> pv<span class=\"k\">.</span>dict<span class=\"k\">([</span>","      <span class=\"s\">'cccClass'</span><span class=\"k\">,</span>","      <span class=\"s\">'crosstabMode'</span><span class=\"k\">,</span>","      <span class=\"s\">'extensionPoints'</span><span class=\"k\">,</span>","      <span class=\"s\">'action'</span><span class=\"k\">,</span>","      <span class=\"s\">'autoRange'</span><span class=\"k\">,</span>","      <span class=\"s\">'backgroundColorEnd'</span><span class=\"k\">,</span>","      <span class=\"s\">'backgroundFill'</span><span class=\"k\">,</span>","      <span class=\"s\">'chartType'</span><span class=\"k\">,</span>","      <span class=\"s\">'controller'</span><span class=\"k\">,</span>","      <span class=\"s\">'customChartType'</span><span class=\"k\">,</span>","      <span class=\"s\">'displayUnits'</span><span class=\"k\">,</span>","","      <span class=\"s\">'labelSize'</span><span class=\"k\">,</span>","      <span class=\"s\">'labelStyle'</span><span class=\"k\">,</span>","","      <span class=\"s\">'legendBackgroundColor'</span><span class=\"k\">,</span>","      <span class=\"s\">'legendColor'</span><span class=\"k\">,</span>","      <span class=\"s\">'legendFontFamily'</span><span class=\"k\">,</span>","      <span class=\"s\">'legendStyle'</span><span class=\"k\">,</span>","","      <span class=\"c\">// NOTE: analyzer's legendSize is more like a \"legentFontSize\",</span>","      <span class=\"c\">// while CCC's is the legend panel's size (width or height)</span>","      <span class=\"s\">'legendSize'</span><span class=\"k\">,</span>","","      <span class=\"s\">'lineShape'</span><span class=\"k\">,</span>","      <span class=\"s\">'maxChartsPerRow'</span><span class=\"k\">,</span>","      <span class=\"s\">'maxValues'</span><span class=\"k\">,</span>","      <span class=\"s\">'metrics'</span><span class=\"k\">,</span>","      <span class=\"s\">'palette'</span><span class=\"k\">,</span>","      <span class=\"s\">'selections'</span><span class=\"k\">,</span>","      <span class=\"s\">'seriesIncludeMeasures'</span>","    <span class=\"k\">],</span>","        <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">);</span>","","","    <span class=\"c\">/*</span>","<span class=\"c\">     * RENDER</span>","<span class=\"c\">     */</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_renderChart <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","      <span class=\"k\">while</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>removeChild<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_element<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">// TODO - if we don't recreate a new chart it does not display new data, fix this...</span>","      <span class=\"c\">// if( this._currentChartType != vizOptions.cccClass ) {</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_currentChartType <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>cccClass<span class=\"k\">;</span>","","      <span class=\"k\">var</span> chartClass <span class=\"k\">=</span> eval<span class=\"k\">(</span><span class=\"s\">\"(\"</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>_currentChartType <span class=\"k\">+</span> <span class=\"s\">\")\"</span><span class=\"k\">);</span> <span class=\"c\">// TODO - get rid of eval</span>","      ","      <span class=\"k\">var</span> selectionsWhereSpec<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_isResize <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_chart <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_chart<span class=\"k\">.</span>constructor <span class=\"k\">===</span> chartClass<span class=\"k\">)</span><span class=\"k\">{</span>","          selectionsWhereSpec <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_buildWhereSpec<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_chart<span class=\"k\">.</span>dataEngine<span class=\"k\">.</span>getSelections<span class=\"k\">());</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>selectionsWhereSpec <span class=\"k\">&amp;&amp;</span> selectionsWhereSpec<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","              <span class=\"k\">var</span> prevRenderCallback <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>renderCallback<span class=\"k\">;</span>","              <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>renderCallback <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","                  <span class=\"k\">if</span><span class=\"k\">(</span>prevRenderCallback<span class=\"k\">)</span> <span class=\"k\">{</span>","                      prevRenderCallback<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","                  <span class=\"k\">}</span>","                  ","                  <span class=\"k\">var</span> datums <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>dataEngine<span class=\"k\">.</span>getWhere<span class=\"k\">(</span>selectionsWhereSpec<span class=\"k\">);</span>","                  <span class=\"k\">this</span><span class=\"k\">.</span>dataEngine<span class=\"k\">.</span>setSelections<span class=\"k\">(</span>datums<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","              <span class=\"k\">}</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      ","      <span class=\"k\">this</span><span class=\"k\">.</span>_isResize <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_chart <span class=\"k\">=</span> <span class=\"k\">new</span> chartClass<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_chart<span class=\"k\">.</span>setData<span class=\"k\">(</span>$<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_cdaTable<span class=\"k\">),</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataOptions<span class=\"k\">);</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_chart<span class=\"k\">.</span>render<span class=\"k\">();</span>","","      <span class=\"c\">// NOTE: 'vertical' is default, so can be missing</span>","      <span class=\"c\">// Change the margin of the svg element</span>","      <span class=\"c\">// The HG chart comes with another firstChild... (?)</span>","      <span class=\"c\">//var element = this._element.firstChild;</span>","      <span class=\"c\">//while(element &amp;&amp; (element.tagName.toLowerCase()) !== 'svg'){</span>","      <span class=\"c\">//    element = element.nextSibling;</span>","      <span class=\"c\">//}</span>","","      <span class=\"c\">//if(element){</span>","      <span class=\"c\">//    // TODO: chart re-render because of series visibility changes looses this...</span>","      <span class=\"c\">//    if(this.options.orientation === 'horizontal'){</span>","      <span class=\"c\">//        element.style.marginBottom = this._vMargin + 'px';</span>","      <span class=\"c\">//    } else {</span>","      <span class=\"c\">//        element.style.marginTop = this._vMargin + 'px';</span>","      <span class=\"c\">//    }</span>","      <span class=\"c\">//}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// -----------------------------</span>","<span class=\"c\">// INTERACTIVE / CLIENT-SIDE ONLY</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readDatum <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>datum<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> dimensions <span class=\"k\">=</span> datum<span class=\"k\">.</span>elem<span class=\"k\">;</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_readCccAxesValues<span class=\"k\">(</span>","          dimensions<span class=\"k\">.</span>series<span class=\"k\">.</span>absValue<span class=\"k\">,</span>","          dimensions<span class=\"k\">.</span>category<span class=\"k\">.</span>absValue<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_readCccAxesValues <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"c\">// Ensure arrays</span>","      <span class=\"k\">var</span> rowVals <span class=\"k\">=</span> readCccValue<span class=\"k\">(</span>c<span class=\"k\">),</span>","          colVals <span class=\"k\">=</span> readCccValue<span class=\"k\">(</span>s<span class=\"k\">);</span>","","      <span class=\"c\">// TODO: this options is really needed</span>","      <span class=\"c\">// or can be infered from the way data is sent?</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>colVals <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>seriesIncludeMeasures<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">// Remove the last element from series,</span>","        <span class=\"c\">// because it's the measure's name</span>","        colVals <span class=\"k\">=</span> colVals<span class=\"k\">.</span>slice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span>","        colVals<span class=\"k\">.</span>pop<span class=\"k\">();</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> axesVals <span class=\"k\">=</span> <span class=\"k\">{</span>","        row<span class=\"k\">:</span>     rowVals<span class=\"k\">,</span>","        column<span class=\"k\">:</span>  colVals<span class=\"k\">,</span>","        measure<span class=\"k\">:</span> <span class=\"k\">null</span> <span class=\"c\">// filled below, after \"absolutization\"</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Ensure key axes values are absolute</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_keyAxes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>axis<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> vals <span class=\"k\">=</span> axesVals<span class=\"k\">[</span>axis<span class=\"k\">];</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>vals<span class=\"k\">)</span><span class=\"k\">{</span>","          axesVals<span class=\"k\">[</span>axis<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_buildMdxAbsoluteValues<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_allAxesInfo<span class=\"k\">[</span>axis<span class=\"k\">],</span> vals<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"c\">// Array of measure cells: {v:..., f:...}, or null</span>","      axesVals<span class=\"k\">.</span>measure <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getCrossCell<span class=\"k\">(</span>axesVals<span class=\"k\">.</span>row<span class=\"k\">,</span> axesVals<span class=\"k\">.</span>column<span class=\"k\">);</span>","","      <span class=\"k\">return</span> axesVals<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getCrossCell <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>rowVals<span class=\"k\">,</span> colVals<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(!</span>rowVals <span class=\"k\">||</span> <span class=\"k\">!</span>colVals<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_crossTable<span class=\"k\">.</span>childrenByKey<span class=\"k\">[</span>rowVals<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">)];</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>result<span class=\"k\">)</span><span class=\"k\">{</span>","        result <span class=\"k\">=</span> result<span class=\"k\">.</span>childrenByKey<span class=\"k\">[</span>colVals<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">)];</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> result <span class=\"k\">&amp;&amp;</span> result<span class=\"k\">.</span>measures<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * TOOLTIPS</span>","<span class=\"c\">     */</span>","","<span class=\"c\">// NOTE: tooltips are NOT rendered when interaction is disabled,</span>","<span class=\"c\">//  because showTooltips is set to false.</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getTooltipText <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axesVals<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"c\">/**</span>","<span class=\"c\">       * Array of HTML lines which constitute the tooltip.</span>","<span class=\"c\">       * @see describeAxis</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> tooltipLines <span class=\"k\">=</span> <span class=\"k\">[];</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Add tooltip lines with the pairs \"form: value\" for each of the roles.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_allAxes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>axis<span class=\"k\">)</span><span class=\"k\">{</span>","        describeAxis<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_allAxesInfo<span class=\"k\">[</span>axis<span class=\"k\">],</span> axesVals<span class=\"k\">[</span>axis<span class=\"k\">]);</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Add drill-down information to the tooltip.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> drillDownInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getDrillDownInfo<span class=\"k\">(</span>axesVals<span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>drillDownInfo<span class=\"k\">)</span><span class=\"k\">{</span>","        tooltipLines<span class=\"k\">.</span>push<span class=\"k\">(</span>","            <span class=\"s\">\"&lt;div class='tipsy-footer'&gt;Double-click to show \"</span> <span class=\"k\">+</span>","                escapeHtml<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper<span class=\"k\">.</span>getFormulaLabel<span class=\"k\">(</span>drillDownInfo<span class=\"k\">.</span>directChild<span class=\"k\">))</span> <span class=\"k\">+</span>","                <span class=\"s\">\"&lt;/div&gt;\"</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Join tooltip lines with HTML line breaks.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">return</span> tooltipLines<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'&lt;br /&gt;'</span><span class=\"k\">);</span>","","      <span class=\"c\">/** @instance */</span>","      <span class=\"k\">function</span> describeAxis<span class=\"k\">(</span>axisInfo<span class=\"k\">,</span> values<span class=\"k\">)</span><span class=\"k\">{</span>","        axisInfo<span class=\"k\">.</span>formulasInfo<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>formInfo<span class=\"k\">,</span> index<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">var</span> value <span class=\"k\">=</span> pvc<span class=\"k\">.</span>nullTo<span class=\"k\">(</span>","              <span class=\"k\">this</span><span class=\"k\">.</span>_getAxisValueLabel<span class=\"k\">(</span>axisInfo<span class=\"k\">.</span>id<span class=\"k\">,</span> values<span class=\"k\">[</span>index<span class=\"k\">]),</span>","              <span class=\"s\">\"-\"</span><span class=\"k\">);</span>","","          <span class=\"c\">// ex: \"Line: Ships\"</span>","          tooltipLines<span class=\"k\">.</span>push<span class=\"k\">(</span>escapeHtml<span class=\"k\">(</span>formInfo<span class=\"k\">.</span>label<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">': '</span> <span class=\"k\">+</span> escapeHtml<span class=\"k\">(</span>value<span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"c\">/*</span>","<span class=\"c\">     * SELECTION</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_notifySelectionChanged <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>selections<span class=\"k\">)</span><span class=\"k\">{</span>","      pentaho<span class=\"k\">.</span>events<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"select\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","        source<span class=\"k\">:</span>        <span class=\"k\">this</span><span class=\"k\">,</span>","        selections<span class=\"k\">:</span>    selections<span class=\"k\">,</span>","        selectionMode<span class=\"k\">:</span> <span class=\"s\">\"REPLACE\"</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_notifyCccSelectionChanged <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>cccSelections<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_notifySelectionChanged<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_convertSelectionsCccToAnalyzer<span class=\"k\">(</span>cccSelections<span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Converts CCC selections to Analyzer selections.</span>","<span class=\"c\">     * Used on selection changed and on axes' drill down.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * A CCC selection is an instance of pvc.Datum.</span>","<span class=\"c\">     * Its relevant part has the structure:</span>","<span class=\"c\">     * {</span>","<span class=\"c\">     *   elem: {</span>","<span class=\"c\">     *      series:   { value: [\"[Time].[2003]\", \"[Time].[2003].[QTR4]\"] }</span>","<span class=\"c\">     *      category: { value: [\"[Markets].[EMEA]\", \"[Order Status].[Resolved]\"] }</span>","<span class=\"c\">     *   }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *   value: array</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * axesVals:</span>","<span class=\"c\">     * {</span>","<span class=\"c\">     *     column:  s,</span>","<span class=\"c\">     *     row:     c,</span>","<span class=\"c\">     *     measure: v</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * A corresponding Analyzer selection would have the</span>","<span class=\"c\">     * following structure:</span>","<span class=\"c\">     * {</span>","<span class=\"c\">     *    type:     'cell',</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *    column:      table column index ??</span>","<span class=\"c\">     *    columnId:    [\"[Time].[Years]\", \"[Time].[Quarters]\"   ], // formulas</span>","<span class=\"c\">     *    columnItem:  [\"[Time].[2003]\",  \"[Time].[2003].[QTR4]\"], // values</span>","<span class=\"c\">     *    columnLabel: \"2003~QTR4~Sales\",</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *    row:          table row index ??</span>","<span class=\"c\">     *    rowId:       [\"[Markets].[Territory]\", \"[Order Status].[Type]\"    ]  // formulas</span>","<span class=\"c\">     *    rowItem:     [\"[Markets].[EMEA]\",      \"[Order Status].[Resolved]\"], // values</span>","<span class=\"c\">     *    rowLabel:    \"Type\",</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *    value:       28550.59 // formatted joined by ~ ?</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_convertSelectionsCccToAnalyzer <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>cccSelections<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> cccSelections<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_convertSelectionCccToAnalyzer<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_convertSelectionCccToAnalyzer <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>cccSelection<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_convertKeysSelectionCccToAnalyzer<span class=\"k\">(</span>","          cccSelection<span class=\"k\">.</span>elem<span class=\"k\">.</span>series<span class=\"k\">.</span>absValue<span class=\"k\">,</span>","          cccSelection<span class=\"k\">.</span>elem<span class=\"k\">.</span>category<span class=\"k\">.</span>absValue<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_convertKeysSelectionCccToAnalyzer <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"c\">/**</span>","<span class=\"c\">       * Values for each axis.</span>","<span class=\"c\">       * Convert CCC selection to an axesVals.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> axesVals <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_readCccAxesValues<span class=\"k\">(</span>s<span class=\"k\">,</span> c<span class=\"k\">);</span>","","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_convertAxesValuesToAnalyzerSelection<span class=\"k\">(</span>axesVals<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_convertAxesValuesToAnalyzerSelection <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axesVals<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"c\">/**</span>","<span class=\"c\">       * The Analyzer cell-selection object.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> selection <span class=\"k\">=</span> <span class=\"k\">{</span>type<span class=\"k\">:</span> <span class=\"s\">'cell'</span><span class=\"k\">}</span><span class=\"k\">;</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Add each key axis info to 'selection'.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_keyAxes<span class=\"k\">.</span>forEach<span class=\"k\">(</span>addKeyAxisSelectionInfo<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Add a description of the selected values.</span>","<span class=\"c\">       * Currently, Analyzer discards selection.value</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> measureVals <span class=\"k\">=</span> axesVals<span class=\"k\">.</span>measure<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>measureVals <span class=\"k\">&amp;&amp;</span> measureVals<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>","        selection<span class=\"k\">.</span>value <span class=\"k\">=</span> measureVals<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>cell<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"k\">return</span> cell<span class=\"k\">.</span>f<span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\" ~ \"</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> selection<span class=\"k\">;</span>","","      <span class=\"c\">// --------------</span>","      <span class=\"c\">// Helper functions</span>","","      <span class=\"c\">/** @instance */</span>","      <span class=\"k\">function</span> addKeyAxisSelectionInfo<span class=\"k\">(</span>axis<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> axisInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_allAxesInfo<span class=\"k\">[</span>axis<span class=\"k\">],</span>","            vals <span class=\"k\">=</span> axesVals<span class=\"k\">[</span>axis<span class=\"k\">];</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>vals <span class=\"k\">&amp;&amp;</span> vals<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"c\">// Dummy property, just to force Analyzer to read the axis info</span>","          selection<span class=\"k\">[</span>axis<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","          selection<span class=\"k\">[</span>axis <span class=\"k\">+</span> <span class=\"s\">'Id'</span><span class=\"k\">]</span> <span class=\"k\">=</span> axisInfo<span class=\"k\">.</span>formulas<span class=\"k\">;</span>","          selection<span class=\"k\">[</span>axis <span class=\"k\">+</span> <span class=\"s\">'Item'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_buildMdxAbsoluteValues<span class=\"k\">(</span>axisInfo<span class=\"k\">,</span> vals<span class=\"k\">);</span>","          selection<span class=\"k\">[</span>axis <span class=\"k\">+</span> <span class=\"s\">'Label'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getAxisValueLabel<span class=\"k\">(</span>axis<span class=\"k\">,</span> vals<span class=\"k\">[</span>vals<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">]);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_buildWhereSpec <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>cccSelections<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> whereSpec <span class=\"k\">=</span> <span class=\"k\">[];</span>","        ","        <span class=\"k\">if</span><span class=\"k\">(</span>cccSelections<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> whereSpec <span class=\"k\">=</span> <span class=\"k\">[];</span>","            ","            <span class=\"k\">var</span> addDatum <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>datum<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> datumFilter <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                ","                <span class=\"k\">var</span> elems <span class=\"k\">=</span> datum<span class=\"k\">.</span>elem<span class=\"k\">;</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> dimName <span class=\"k\">in</span> elems<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>dimName <span class=\"k\">!==</span> <span class=\"s\">'value'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        datumFilter<span class=\"k\">[</span>dimName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span>elems<span class=\"k\">[</span>dimName<span class=\"k\">].</span>path<span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                ","                whereSpec<span class=\"k\">.</span>push<span class=\"k\">(</span>datumFilter<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            ","            cccSelections<span class=\"k\">.</span>forEach<span class=\"k\">(</span>addDatum<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        ","        <span class=\"k\">return</span> whereSpec<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    ","    <span class=\"c\">/*</span>","<span class=\"c\">     * DRILLING</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_drillDown <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axesVals<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"c\">/**</span>","<span class=\"c\">       * Information about the axis and formula to drill on.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> drillInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getDrillDownInfo<span class=\"k\">(</span>axesVals<span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(!</span>drillInfo<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"c\">// Drilling is disabled OR Nothing to drill on.</span>","        <span class=\"c\">// A double-click is triggered to support \"content linking\".</span>","        pentaho<span class=\"k\">.</span>events<span class=\"k\">.</span>trigger<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"doubleclick\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","          source<span class=\"k\">:</span>     <span class=\"k\">this</span><span class=\"k\">,</span>","          selections<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>_convertAxesValuesToAnalyzerSelection<span class=\"k\">(</span>axesVals<span class=\"k\">)]</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * The context for the click action.</span>","<span class=\"c\">       * Stores 'KEEP' and 'KEEP_AND_DRILL' instructions.</span>","<span class=\"c\">       * @see useFormula</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> actionContext <span class=\"k\">=</span> <span class=\"k\">[];</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * The set of hierarchy names</span>","<span class=\"c\">       * already included in 'actionContext'.</span>","<span class=\"c\">       *</span>","<span class=\"c\">       * Only one instruction per dimension hierarchy is generated.</span>","<span class=\"c\">       * Each instruction fixes the value of</span>","<span class=\"c\">       * the deepest used formula of a hierarchy</span>","<span class=\"c\">       * to the MDX absolute value present in 'axesVals'.</span>","<span class=\"c\">       * @see keep</span>","<span class=\"c\">       * @see useFormula</span>","<span class=\"c\">       */</span>","      <span class=\"k\">var</span> usedHierarchiesSet <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","      <span class=\"c\">/* Drill on drillInfo.axis */</span>","      keepAndDrill<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> drillInfo<span class=\"k\">);</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Keep values from hierarchies other than the drilled one.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_keyAxes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>axis<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> vals <span class=\"k\">=</span> axesVals<span class=\"k\">[</span>axis<span class=\"k\">];</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>vals<span class=\"k\">)</span><span class=\"k\">{</span>","          keep<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> axis<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>_allAxesInfo<span class=\"k\">[</span>axis<span class=\"k\">].</span>formulasInfo<span class=\"k\">,</span> vals<span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","      <span class=\"c\">// --------------</span>","","      <span class=\"c\">// Maintains other existing filters</span>","      <span class=\"k\">var</span> keepGem <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper<span class=\"k\">.</span>click<span class=\"k\">(</span>actionContext<span class=\"k\">,</span> keepGem<span class=\"k\">);</span>","","      <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","      <span class=\"c\">// ----------------</span>","      <span class=\"c\">// Helper methods</span>","","      <span class=\"c\">/** @instance */</span>","      <span class=\"k\">function</span> keepAndDrill<span class=\"k\">(</span>drillInfo<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> useFormula<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> drillInfo<span class=\"k\">.</span>formulaInfo<span class=\"k\">,</span> drillInfo<span class=\"k\">.</span>values<span class=\"k\">,</span> <span class=\"s\">'KEEP_AND_DRILL'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">/** @instance */</span>","      <span class=\"k\">function</span> keep<span class=\"k\">(</span>axis<span class=\"k\">,</span> formsInfo<span class=\"k\">,</span> vals<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>vals<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> V <span class=\"k\">=</span> vals<span class=\"k\">.</span>length <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> V <span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","            <span class=\"c\">// Only include formulas of a given hierarchy once</span>","            <span class=\"k\">var</span> formInfo <span class=\"k\">=</span> formsInfo<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">if</span><span class=\"k\">(!(</span>formInfo<span class=\"k\">.</span>hierarchy <span class=\"k\">in</span> usedHierarchiesSet<span class=\"k\">))</span><span class=\"k\">{</span>","              <span class=\"k\">var</span> deepestInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getAxisDeepestHierarchyFormula<span class=\"k\">(</span>axis<span class=\"k\">,</span> formInfo<span class=\"k\">.</span>formula<span class=\"k\">,</span> V<span class=\"k\">);</span>","","              assert<span class=\"k\">(</span>deepestInfo<span class=\"k\">,</span> <span class=\"s\">\"At least formInfo must be a possibility.\"</span><span class=\"k\">);</span>","","              useFormula<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> deepestInfo<span class=\"k\">.</span>formulaInfo<span class=\"k\">,</span> vals<span class=\"k\">,</span> <span class=\"s\">'KEEP'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">/** @instance */</span>","      <span class=\"k\">function</span> useFormula<span class=\"k\">(</span>formInfo<span class=\"k\">,</span> vals<span class=\"k\">,</span> action<span class=\"k\">)</span><span class=\"k\">{</span>","        usedHierarchiesSet<span class=\"k\">[</span>formInfo<span class=\"k\">.</span>hierarchy<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","        <span class=\"k\">var</span> axisInfo <span class=\"k\">=</span> formInfo<span class=\"k\">.</span>axis<span class=\"k\">,</span>","            hvalue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_buildMdxAbsoluteValue<span class=\"k\">(</span>axisInfo<span class=\"k\">,</span> formInfo<span class=\"k\">.</span>index<span class=\"k\">,</span> vals<span class=\"k\">);</span>","","        actionContext<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","          action<span class=\"k\">:</span>  action<span class=\"k\">,</span>","          formula<span class=\"k\">:</span> formInfo<span class=\"k\">.</span>formula<span class=\"k\">,</span>","          member<span class=\"k\">:</span>  hvalue<span class=\"k\">,</span>","          caption<span class=\"k\">:</span> escapeHtml<span class=\"k\">(</span>axisInfo<span class=\"k\">.</span>valueLabel<span class=\"k\">[</span>hvalue<span class=\"k\">])</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getDrillDownInfo <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axesVals<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper<span class=\"k\">.</span>isDrillEnabled<span class=\"k\">())</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"c\">/**</span>","<span class=\"c\">       * Find an axis to drill on.</span>","<span class=\"c\">       * The order of search is that of 'this._keyAxes'.</span>","<span class=\"c\">       */</span>","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_drillAxes<span class=\"k\">.</span>length <span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> axis <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_drillAxes<span class=\"k\">[</span>i<span class=\"k\">],</span>","            drillInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getAxisDrillDownInfo<span class=\"k\">(</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>_allAxesInfo<span class=\"k\">[</span>axis<span class=\"k\">],</span>","                axesVals<span class=\"k\">[</span>axis<span class=\"k\">]);</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span>drillInfo<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">return</span> drillInfo<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">// 1) Take the formula corresponding to</span>","<span class=\"c\">//     the last specified value in 'vals' of axis - name it: LVF.</span>","<span class=\"c\">//     That value is the value that the user double-clicked on.</span>","<span class=\"c\">//</span>","<span class=\"c\">//     'vals' may contain fewer values than formulas of the axis.</span>","<span class=\"c\">//     The ones available are matched to formulas by index.</span>","<span class=\"c\">//     (This happens when a hierarchy node that is not the deepest is double-clicked)</span>","<span class=\"c\">//</span>","<span class=\"c\">// 2) Get its hierarchy id - HID</span>","<span class=\"c\">//</span>","<span class=\"c\">//    There might be fomulas in this axis,</span>","<span class=\"c\">//    that are from the same hierarchy - HID - as LVF,</span>","<span class=\"c\">//    that are descendants of LVF,</span>","<span class=\"c\">//    but</span>","<span class=\"c\">//    that are placed above it</span>","<span class=\"c\">//    (formulas of an axis may be placed in any order...)</span>","<span class=\"c\">//</span>","<span class=\"c\">// 3) From the formulas in the axis,</span>","<span class=\"c\">//    that have the hierarchy HID,</span>","<span class=\"c\">//    get the one that no other is descendant of - the deepest (it may be LVF).</span>","<span class=\"c\">//</span>","<span class=\"c\">//    This is done using meta-information about a formula hierarchy</span>","<span class=\"c\">//    that provides the hierarchy level of each formula.</span>","<span class=\"c\">//</span>","<span class=\"c\">// Suppose that there are N formulas of the desired hierarchy HID.</span>","<span class=\"c\">//</span>","<span class=\"c\">// In case the axis contains N formulas of a hierarchy but</span>","<span class=\"c\">//    the supplied values only</span>","<span class=\"c\">// Drill on the *hierarchy* of the last form in vals</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getAxisDrillDownInfo <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axisInfo<span class=\"k\">,</span> vals<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"c\">// Drilling requires fixing all values in 'vals'.</span>","      <span class=\"c\">// If there are no values...then there is nothing to drill-on</span>","      <span class=\"k\">var</span> V<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>axisInfo <span class=\"k\">&amp;&amp;</span> axisInfo<span class=\"k\">.</span>depth <span class=\"k\">&amp;&amp;</span> vals <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>V <span class=\"k\">=</span> vals<span class=\"k\">.</span>length<span class=\"k\">))</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> formInfo <span class=\"k\">=</span> axisInfo<span class=\"k\">.</span>formulasInfo<span class=\"k\">[</span>V <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>formInfo<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">var</span> drillInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_getAxisDeepestHierarchyFormula<span class=\"k\">(</span>axisInfo<span class=\"k\">.</span>id<span class=\"k\">,</span> formInfo<span class=\"k\">.</span>formula<span class=\"k\">,</span> V<span class=\"k\">);</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>drillInfo <span class=\"k\">&amp;&amp;</span> drillInfo<span class=\"k\">.</span>directChild<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"c\">// Make deepestInfo into a drillInfo.</span>","            drillInfo<span class=\"k\">.</span>values <span class=\"k\">=</span> vals<span class=\"k\">;</span>","            <span class=\"k\">return</span> drillInfo<span class=\"k\">;</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Finds the formula in 'forms',</span>","<span class=\"c\">     * that is of the same hierarchy of the form 'hierarchyForm',</span>","<span class=\"c\">     * and is the deepest.</span>","<span class=\"c\">     * If 'maxDepth' is specified, then, additionally,</span>","<span class=\"c\">     * that form must have an index in 'forms' that is less than 'maxDepth'.</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * Returns the following information, about the found form, if any:</span>","<span class=\"c\">     * &lt;pre&gt;</span>","<span class=\"c\">     * var deepestInfo = {</span>","<span class=\"c\">     *    formulaInfo: the deepest formula info object</span>","<span class=\"c\">     *    directChild: \"[child formula]\" // the direct child formula of .formula, if any</span>","<span class=\"c\">     * };</span>","<span class=\"c\">     * &lt;/pre&gt;</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_getAxisDeepestHierarchyFormula <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axis<span class=\"k\">,</span> formulaOfHierarchy<span class=\"k\">,</span> maxDepth<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> hForms <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper<span class=\"k\">.</span>getHierarchyFormulas<span class=\"k\">(</span>","          formulaOfHierarchy<span class=\"k\">,</span>","          <span class=\"c\">/* includeHidden:   */</span> <span class=\"k\">false</span><span class=\"k\">,</span>","          <span class=\"c\">/* excludeChildren: */</span> <span class=\"k\">false</span><span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>hForms<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>maxDepth <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span>","          maxDepth <span class=\"k\">=</span> Infinity<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> hForms<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">;</span> i <span class=\"k\">&gt;=</span> <span class=\"s\">0</span>  <span class=\"k\">;</span> i<span class=\"k\">--)</span><span class=\"k\">{</span>","          <span class=\"k\">var</span> hFormInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_formulasInfo<span class=\"k\">[</span>hForms<span class=\"k\">[</span>i<span class=\"k\">]];</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>hFormInfo <span class=\"k\">&amp;&amp;</span> hFormInfo<span class=\"k\">.</span>axis<span class=\"k\">.</span>id <span class=\"k\">===</span> axis <span class=\"k\">&amp;&amp;</span> hFormInfo<span class=\"k\">.</span>index <span class=\"k\">&lt;</span> maxDepth<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"c\">// Belongs to the axis' forms and is within allowed depth</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span>","              formulaInfo<span class=\"k\">:</span> hFormInfo<span class=\"k\">,</span>","              directChild<span class=\"k\">:</span> hForms<span class=\"k\">[</span>i <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">null</span> <span class=\"c\">// undefined -&gt; null conversion</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_buildMdxAbsoluteValues <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>axisInfo<span class=\"k\">,</span> vals<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> vals<span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span><span class=\"c\">/** @ignore */</span>val<span class=\"k\">,</span> index<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_buildMdxAbsoluteValue<span class=\"k\">(</span>axisInfo<span class=\"k\">,</span> index<span class=\"k\">,</span> vals<span class=\"k\">);</span>","      <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>_buildMdxAbsoluteValue <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>","        axisInfo<span class=\"k\">,</span>","        targetIndex<span class=\"k\">,</span>","        vals<span class=\"k\">)</span><span class=\"k\">{</span>","","      <span class=\"k\">var</span> targetVal <span class=\"k\">=</span> vals<span class=\"k\">[</span>targetIndex<span class=\"k\">];</span>","","      <span class=\"c\">// Empty value or</span>","      <span class=\"c\">// already an MDX absolute value?</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>targetVal <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span>","          targetVal <span class=\"k\">===</span> <span class=\"s\">''</span>  <span class=\"k\">||</span>","          targetVal<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"[\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> targetVal<span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> targetFormInfo <span class=\"k\">=</span> axisInfo<span class=\"k\">.</span>formulasInfo<span class=\"k\">[</span>targetIndex<span class=\"k\">],</span>","          mdxVals <span class=\"k\">=</span> <span class=\"k\">[</span> wrapMdxValue<span class=\"k\">(</span>targetFormInfo<span class=\"k\">.</span>hierarchy<span class=\"k\">)</span> <span class=\"k\">],</span>","          L <span class=\"k\">=</span> vals<span class=\"k\">.</span>length<span class=\"k\">;</span>","","      <span class=\"c\">// Traverse all ascendant formulas down to (including) 'targetFormInfo.formula'</span>","      <span class=\"k\">var</span> hForms <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizHelper<span class=\"k\">.</span>getHierarchyFormulas<span class=\"k\">(</span>","          targetFormInfo<span class=\"k\">.</span>formula<span class=\"k\">,</span>","          <span class=\"c\">/* includeHidden:   */</span> <span class=\"k\">false</span><span class=\"k\">,</span>","          <span class=\"c\">/* excludeChildren: */</span> <span class=\"k\">true</span><span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>hForms<span class=\"k\">)</span><span class=\"k\">{</span>","        hForms<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>levelForm<span class=\"k\">)</span><span class=\"k\">{</span>","          <span class=\"k\">var</span> formInfo <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_formulasInfo<span class=\"k\">[</span>levelForm<span class=\"k\">];</span>","          <span class=\"k\">if</span><span class=\"k\">(</span>formInfo <span class=\"k\">&amp;&amp;</span> formInfo<span class=\"k\">.</span>axis <span class=\"k\">===</span> axisInfo <span class=\"k\">&amp;&amp;</span> formInfo<span class=\"k\">.</span>index <span class=\"k\">&lt;</span> L<span class=\"k\">)</span><span class=\"k\">{</span>","            mdxVals<span class=\"k\">.</span>push<span class=\"k\">(</span>wrapMdxValue<span class=\"k\">(</span>vals<span class=\"k\">[</span>formInfo<span class=\"k\">.</span>index<span class=\"k\">]));</span>","          <span class=\"k\">}</span>","          <span class=\"c\">// Assume the value is not relevant :-/ ??</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> mdxVals<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> wrapMdxValue<span class=\"k\">(</span>value<span class=\"k\">)</span><span class=\"k\">{</span>","      value <span class=\"k\">=</span> <span class=\"s\">''</span> <span class=\"k\">+</span> pvc<span class=\"k\">.</span>nullTo<span class=\"k\">(</span>value<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","      <span class=\"k\">if</span><span class=\"k\">(!</span>value <span class=\"k\">||</span> value<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"[\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","        value <span class=\"k\">=</span> <span class=\"s\">'['</span> <span class=\"k\">+</span> value <span class=\"k\">+</span> <span class=\"s\">']'</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     setHighlights</span>","<span class=\"c\">     Sets the items on the chart that should be highlighted</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>setHighlights <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>selections<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>_ownChange<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// reentry control</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>_selections <span class=\"k\">=</span> selections<span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_chart<span class=\"k\">.</span>clearSelections <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>selections <span class=\"k\">||</span> selections<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">))</span><span class=\"k\">{</span>","          <span class=\"c\">// will cause selectionChangedAction being called</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_ownChange <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","          <span class=\"k\">try</span><span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_chart<span class=\"k\">.</span>clearSelections<span class=\"k\">();</span>","          <span class=\"k\">}</span> <span class=\"k\">finally</span><span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_ownChange <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","<span class=\"c\">//        if(this._dataTable &amp;&amp; this._vizOptions) {</span>","<span class=\"c\">//        //disabled   this.draw(this._dataTable, this._vizOptions);</span>","<span class=\"c\">//        }</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// TODO: what's this for? Column/Bar?</span>","    <span class=\"c\">/*</span>","<span class=\"c\">     getOutputParameters</span>","<span class=\"c\">     Returns the output parameters of the chart.</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getOutputParameters <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","      <span class=\"k\">var</span> params <span class=\"k\">=</span> <span class=\"k\">[];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>cccClass <span class=\"k\">==</span> <span class=\"s\">'pvc.PieChart'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        params<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">[</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">),</span>","          <span class=\"k\">true</span><span class=\"k\">,</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">)</span>","        <span class=\"k\">]);</span>","      <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> j <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getNumberOfColumns<span class=\"k\">()</span> <span class=\"k\">;</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","          params<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">[</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span>j<span class=\"k\">),</span>","            <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span>j<span class=\"k\">)</span>","          <span class=\"k\">]);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> params<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>resize <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>width<span class=\"k\">,</span> height<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> vizOptions <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_originalVizOptions<span class=\"k\">;</span>","","      vizOptions<span class=\"k\">.</span>width  <span class=\"k\">=</span> width<span class=\"k\">;</span>","      vizOptions<span class=\"k\">.</span>height <span class=\"k\">=</span> height<span class=\"k\">;</span>","      vizOptions<span class=\"k\">.</span>isResize <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","      <span class=\"k\">this</span><span class=\"k\">.</span>draw<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">,</span> vizOptions<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// TODO - is the current selection accounting needed?</span>","    <span class=\"c\">/*</span>","<span class=\"c\">     getColors</span>","<span class=\"c\">     Returns the colors to use.</span>","<span class=\"c\">     This needs to take into account selected and unselected items.</span>","<span class=\"c\">     */</span>","    pentaho<span class=\"k\">.</span>ccc<span class=\"k\">.</span>CccChart<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getColors <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_colors<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>_colors<span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">var</span> colors <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","      <span class=\"k\">var</span> paletteMap <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_vizOptions<span class=\"k\">.</span>metrics<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>paletteMap<span class=\"k\">;</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>paletteMap<span class=\"k\">)</span> <span class=\"k\">{</span>","        colors <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> r <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> r <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getNumberOfRows<span class=\"k\">()</span> <span class=\"k\">;</span> r<span class=\"k\">++)</span> <span class=\"k\">{</span>","          <span class=\"k\">var</span> item <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getValue<span class=\"k\">(</span>r<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">);</span>","          <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>_selections <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_selections<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> done <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> selIdx <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> selIdx <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>_selections<span class=\"k\">.</span>length <span class=\"k\">;</span> selIdx<span class=\"k\">++)</span> <span class=\"k\">{</span>","              <span class=\"k\">var</span> selection <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>_selections<span class=\"k\">[</span>selIdx<span class=\"k\">];</span>","              <span class=\"k\">if</span><span class=\"k\">((</span>selection<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'row'</span>    <span class=\"k\">&amp;&amp;</span> selection<span class=\"k\">.</span>rowItem <span class=\"k\">==</span> item<span class=\"k\">)</span> <span class=\"k\">||</span>","                  <span class=\"k\">(</span>selection<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'column'</span> <span class=\"k\">&amp;&amp;</span> selection<span class=\"k\">.</span>colId <span class=\"k\">==</span> <span class=\"k\">this</span><span class=\"k\">.</span>_dataTable<span class=\"k\">.</span>getColumnId<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">)))</span> <span class=\"k\">{</span>","                colors<span class=\"k\">.</span>push<span class=\"k\">(</span>paletteMap<span class=\"k\">[</span>item<span class=\"k\">]);</span>","                done <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","              <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span><span class=\"k\">(!</span>done<span class=\"k\">)</span> <span class=\"k\">{</span>","              <span class=\"c\">// this item is not selected, so make it grey</span>","              colors<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"s\">\"#bbbbbb\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","          <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            colors<span class=\"k\">.</span>push<span class=\"k\">(</span>paletteMap<span class=\"k\">[</span>item<span class=\"k\">]);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> colors<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// @private</span>","<span class=\"c\">// @static</span>","    <span class=\"k\">function</span> readCccValue<span class=\"k\">(</span>v<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(</span>v <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>v <span class=\"k\">instanceof</span> Array<span class=\"k\">))</span><span class=\"k\">{</span>","        <span class=\"c\">// Ensure grouped values/attributes are correctly turned into arrays</span>","        v <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"s\">''</span> <span class=\"k\">+</span> v<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">'~'</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> v<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// @private</span>","<span class=\"c\">// @static</span>","    <span class=\"k\">function</span> writeCccColumnDataType<span class=\"k\">(</span>colType<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">switch</span><span class=\"k\">(</span>colType<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">case</span> <span class=\"s\">'string'</span><span class=\"k\">:</span> <span class=\"k\">return</span> <span class=\"s\">'STRING'</span><span class=\"k\">;</span>","        <span class=\"k\">case</span> <span class=\"s\">'number'</span><span class=\"k\">:</span> <span class=\"k\">return</span> <span class=\"s\">'NUMERIC'</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"Unsupported data type\"</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// @private</span>","<span class=\"c\">// @static</span>","    <span class=\"k\">function</span> createTable<span class=\"k\">(</span>rowCount<span class=\"k\">,</span> colCount<span class=\"k\">,</span> readCellValue<span class=\"k\">,</span> context<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> table <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">(</span>rowCount<span class=\"k\">);</span>","      <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tr <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> tr <span class=\"k\">&lt;</span> rowCount<span class=\"k\">;</span> tr<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> row <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">(</span>colCount<span class=\"k\">);</span>","","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> tc <span class=\"k\">=</span> <span class=\"s\">0</span> <span class=\"k\">;</span> tc <span class=\"k\">&lt;</span> colCount <span class=\"k\">;</span> tc<span class=\"k\">++)</span><span class=\"k\">{</span>","          row<span class=\"k\">[</span>tc<span class=\"k\">]</span> <span class=\"k\">=</span> readCellValue<span class=\"k\">.</span>call<span class=\"k\">(</span>context<span class=\"k\">,</span> tr<span class=\"k\">,</span> tc<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        table<span class=\"k\">[</span>tr<span class=\"k\">]</span> <span class=\"k\">=</span> row<span class=\"k\">;</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> table<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// @private</span>","<span class=\"c\">// @static</span>","<span class=\"c\">// from cv.util.escapeHtml</span>","    <span class=\"k\">function</span> escapeHtml<span class=\"k\">(</span>str<span class=\"k\">,</span> noSingleQuotes<span class=\"k\">)</span><span class=\"k\">{</span>","      str <span class=\"k\">=</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;/gm</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;amp;\"</span><span class=\"k\">)</span>","          <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;/gm</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;lt;\"</span><span class=\"k\">)</span>","          <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&gt;/gm</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;gt;\"</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/\"/gm</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;quot;\"</span><span class=\"k\">);</span>","","      <span class=\"k\">if</span><span class=\"k\">(!</span>noSingleQuotes<span class=\"k\">)</span><span class=\"k\">{</span>","        str <span class=\"k\">=</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/'/gm</span><span class=\"k\">,</span> <span class=\"s\">\"&amp;#39;\"</span><span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> str<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// @private</span>","<span class=\"c\">// @static</span>","    <span class=\"k\">function</span> assert<span class=\"k\">(</span>condition<span class=\"k\">,</span> conditionMessage<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">if</span><span class=\"k\">(!</span>condition<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> message <span class=\"k\">=</span> <span class=\"s\">\"Assertion failed.\"</span><span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>conditionMessage <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span>","          message <span class=\"k\">+=</span> <span class=\"s\">\"</span><span class=\"t\">\\n\\\"</span><span class=\"s\">\"</span> <span class=\"k\">+</span> conditionMessage <span class=\"k\">+</span> <span class=\"s\">\"</span><span class=\"t\">\\\"</span><span class=\"s\">\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span>message<span class=\"k\">);</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// from pentaho / cv</span>","    <span class=\"k\">function</span> createVizDataReq<span class=\"k\">(</span>rowLabel<span class=\"k\">,</span> columnLabel<span class=\"k\">,</span> measureLabel<span class=\"k\">,</span> hasMulti<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> json <span class=\"k\">=</span> <span class=\"k\">[</span>","        <span class=\"k\">{</span> id<span class=\"k\">:</span> <span class=\"s\">'rows'</span><span class=\"k\">,</span>","          dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","          dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","          caption<span class=\"k\">:</span> rowLabel<span class=\"k\">,</span>","          required<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","          allowMultiple<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","          zoneId<span class=\"k\">:</span> <span class=\"s\">\"rowAttributes\"</span><span class=\"k\">,</span>","          defaultAppend<span class=\"k\">:</span> <span class=\"k\">true</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> id<span class=\"k\">:</span> <span class=\"s\">'columns'</span><span class=\"k\">,</span>","          dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","          dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","          caption<span class=\"k\">:</span> columnLabel<span class=\"k\">,</span>","          required<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","          allowMultiple<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","          zoneId<span class=\"k\">:</span><span class=\"s\">\"rowAttributes\"</span> <span class=\"c\">// Only pivot table should use the columnAttribute zone</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"k\">{</span> id<span class=\"k\">:</span> <span class=\"s\">'measures'</span><span class=\"k\">,</span>","          dataType<span class=\"k\">:</span> <span class=\"s\">'number'</span><span class=\"k\">,</span>","          dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","          caption<span class=\"k\">:</span> measureLabel<span class=\"k\">,</span>","          required<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","          allowMultiple<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","          zoneId<span class=\"k\">:</span> <span class=\"s\">\"measures\"</span><span class=\"k\">,</span>","          defaultAppend<span class=\"k\">:</span> <span class=\"k\">true</span>","        <span class=\"k\">}</span>","      <span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>hasMulti<span class=\"k\">)</span>","        json<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span> id<span class=\"k\">:</span> <span class=\"s\">'multi'</span><span class=\"k\">,</span>","          dataType<span class=\"k\">:</span> <span class=\"s\">'string'</span><span class=\"k\">,</span>","          dataStructure<span class=\"k\">:</span> <span class=\"s\">'column'</span><span class=\"k\">,</span>","          caption<span class=\"k\">:</span> cvCatalog<span class=\"k\">[</span><span class=\"s\">'dropZoneLabels_MULTI_CHART'</span><span class=\"k\">],</span>","          allowMultiple<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","          required<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","          zoneId<span class=\"k\">:</span> <span class=\"s\">\"rowAttributes\"</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","      <span class=\"k\">return</span> json<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","  <span class=\"k\">}</span><span class=\"k\">)();</span> <span class=\"c\">// END Private Scope</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['vizapi/ccc/ccc_wrapper.js'][1]++;
pen.define(["cdf/lib/CCC/pvc-d1.0", "common-ui/vizapi/VizController"], (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2]++;
  pentaho = (((typeof pentaho) != "undefined")? pentaho: {});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][5]++;
  (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][7]++;
  pentaho.ccc = (pentaho.ccc || {});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][10]++;
  function defVisualization(viz) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][11]++;
    pentaho.visualizations.push(viz);
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][18]++;
  var lineStrokeStyle = "#A0A0A0";
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][20]++;
  var baseCategChartArgs = {legend: true, yAxisSize: 100, yAxisFullGrid: true, yAxisEndLine: true, yAxisDomainRoundMode: "tick", yAxisDesiredTickCount: 10, xAxisFullGrid: true, xAxisSize: 100, xAxisEndLine: true, xAxisDesiredTickCount: 10, xAxisDomainRoundMode: "tick", extensionPoints: {yAxisRule_strokeStyle: lineStrokeStyle, yAxisEndLine_strokeStyle: lineStrokeStyle, yAxisGrid_strokeWidth: "2px", yAxisGrid_strokeStyle: lineStrokeStyle, xAxisRule_strokeStyle: lineStrokeStyle, xAxisEndLine_strokeStyle: lineStrokeStyle, xAxisGrid_strokeWidth: "2px", xAxisGrid_strokeStyle: lineStrokeStyle}, tipsySettings: {html: true, gravity: "c", fade: false, followMouse: true}, seriesIncludeMeasures: true};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][57]++;
  var baseVertiCategChartArgs = pvc.create(baseCategChartArgs, {legendPosition: "right", legendAlign: "top", extensionPoints: {xAxisLabel_textAngle: ((- Math.PI) / 6), xAxisLabel_textAlign: "right", xAxisLabel_textBaseline: "top", yAxisTicks_strokeStyle: lineStrokeStyle}});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][69]++;
  var baseHorizCategChartArgs = pvc.create(baseCategChartArgs, {orientation: "horizontal", yAxisSize: 150, xAxisSize: 50, xAxisPosition: "top", legendPosition: "right", legendAlign: "middle", extensionPoints: {xAxisTicks_strokeStyle: lineStrokeStyle}});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][82]++;
  var mixinBarChartArgs = {cccClass: "pvc.BarChart", panelSizeRatio: 0.59999999999999998}, baseVertiBarChartArgs = pvc.create(baseVertiCategChartArgs, mixinBarChartArgs), baseHorizBarChartArgs = pvc.create(baseHorizCategChartArgs, mixinBarChartArgs);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][91]++;
  defVisualization({id: "ccc_bar", type: "barchart", source: "CCC", name: "CCC Column", "class": "pentaho.ccc.CccChart", args: pvc.create(baseVertiBarChartArgs), propMap: [], dataReqs: [{name: "Default", reqs: createVizDataReq("Category", "Series", "Value")}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][107]++;
  defVisualization({id: "ccc_barstacked", type: "barchart", source: "CCC", name: "CCC Stacked Column", "class": "pentaho.ccc.CccChart", args: pvc.create(baseVertiBarChartArgs, {stacked: true}), propMap: [], dataReqs: [{name: "Default", reqs: createVizDataReq("Category", "Series", "Value")}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][124]++;
  defVisualization({id: "ccc_horzbar", type: "horzbarchart", source: "CCC", name: "CCC Bar", "class": "pentaho.ccc.CccChart", args: pvc.create(baseHorizBarChartArgs), propMap: [], dataReqs: [{name: "Default", reqs: createVizDataReq("Category", "Series", "Value")}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][139]++;
  defVisualization({id: "ccc_horzbarstacked", type: "horzbarchart", source: "CCC", name: "CCC Stacked Bar", "class": "pentaho.ccc.CccChart", args: pvc.create(baseHorizBarChartArgs, {stacked: true}), propMap: [], dataReqs: [{name: "Default", reqs: createVizDataReq("Category", "Series", "Value")}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][156]++;
  defVisualization({id: "ccc_barnormalized", type: "barchart", source: "CCC", name: "CCC 100% Stacked Column", "class": "pentaho.ccc.CccChart", args: pvc.create(baseVertiBarChartArgs, {cccClass: "pvc.NormalizedBarChart"}), propMap: [], dataReqs: [{name: "Default", reqs: createVizDataReq("Category", "Series", "Value")}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][173]++;
  defVisualization({id: "ccc_horzbarnormalized", type: "horzbarchart", source: "CCC", name: "CCC 100% Stacked Bar", "class": "pentaho.ccc.CccChart", args: pvc.create(baseHorizBarChartArgs, {cccClass: "pvc.NormalizedBarChart"}), propMap: [], dataReqs: [{name: "Default", reqs: createVizDataReq("Category", "Series", "Value")}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][190]++;
  defVisualization({id: "ccc_line", type: "linechart", source: "CCC", name: "CCC Line", "class": "pentaho.ccc.CccChart", args: pvc.create(baseVertiCategChartArgs, {cccClass: "pvc.LineChart", shape: "circle"}), propMap: [], dataReqs: [{name: "Default", reqs: pvc.arrayAppend(createVizDataReq("Category", "Series", "Value"), [{id: "shape", dataType: "string", values: ["none", "circle", "cross", "diamond", "square", "triangle"], ui: {labels: ["None", "Circle", "Cross", "Diamond", "Square", "Triangle"], group: "options", type: "combo", caption: "Shape"}}])}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][224]++;
  defVisualization({id: "ccc_area", type: "areachart", source: "CCC", name: "CCC Area", "class": "pentaho.ccc.CccChart", args: pvc.create(baseVertiCategChartArgs, {cccClass: "pvc.StackedAreaChart", showLines: true}), propMap: [], dataReqs: [{name: "Default", reqs: createVizDataReq("Category", "Series", "Value")}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][242]++;
  defVisualization({id: "ccc_scatter", type: "scatter", source: "CCC", name: "CCC Scatter", "class": "pentaho.ccc.CccChart", args: {cccClass: "pvc.MetricDotChart", showDots: true, yAxisSize: 30, xAxisSize: 30, xAxisFullGrid: true, yAxisFullGrid: true}, propMap: [], dataReqs: [{name: "Default", reqs: [{id: "rows", dataType: "string", dataStructure: "column", caption: "Category", required: true}, {id: "x", dataType: "number", dataStructure: "column", caption: "X Axis", required: true, allowMultiple: false}, {id: "y", dataType: "number", dataStructure: "column", caption: "Y Axis", required: true, allowMultiple: true}]}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][286]++;
  defVisualization({id: "ccc_pie", type: "piechart", source: "CCC", name: "CCC Pie Chart", "class": "pentaho.ccc.CccChart", args: {cccClass: "pvc.PieChart"}, propMap: [], dataReqs: [{name: "Default", reqs: [{id: "rows", dataType: "string", dataStructure: "column", caption: "Slices", required: true}, {id: "measures", dataType: "number", dataStructure: "column", caption: "Values", required: true}]}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][317]++;
  defVisualization({id: "ccc_heatgrid", type: "heatgrid", source: "CCC", name: "Heat Grid", "class": "pentaho.ccc.CccChart", args: {cccClass: "pvc.HeatGridChart", crosstabMode: true, normPerBaseCategory: false, showXScale: true, xAxisPosition: "bottom", showYScale: true, yAxisPosition: "left", seriesInRows: false, timeSeries: false, panelSizeRatio: 0.80000000000000004, orientation: "vertical", showValues: false, valuesAnchor: "right", titlePosition: "top", titleSize: 25, xAxisSize: 30, yAxisSize: 50, xAxisFullGrid: false, yAxisFullGrid: false, orthoAxisOrdinal: false, scalingType: "linear", numSD: 2, nullColor: "#efc5ad", extensionPoints: [], useShapes: true, shape: "square", isMultiValued: true, useCompositeAxis: true, colorValIdx: 0, sizeValIdx: 1, ctrlSelectMode: false, tipsySettings: {html: true, gravity: "c", fade: false, followMouse: true, opacity: 1}}, propMap: [], dataReqs: [{name: "Default", reqs: [{id: "rows", dataType: "string", dataStructure: "row", caption: "x_axis", required: true, allowMultiple: true}, {id: "columns", dataType: "string", dataStructure: "column", caption: "y_axis", required: false, allowMultiple: true}, {id: "color", dataType: "number", dataStructure: "column", caption: "color_by", required: false, allowMultiple: false}, {id: "size", dataType: "number", dataStructure: "column", caption: "size_by", required: false, allowMultiple: false}, {id: "pattern", dataType: "string", values: ["GRADIENT", "3-COLOR", "5-COLOR"], ui: {labels: ["gradient", "step_3", "step_5"], group: "options", type: "combo", caption: "Pattern"}}, {id: "colorSet", dataType: "string", values: ["ryg", "ryb", "blue", "gray"], ui: {labels: ["RYG", "RYB", "blue_scale", "gray_scale"], group: "options", type: "combo", caption: "Color"}}, {id: "reverseColors", dataType: "boolean", ui: {label: "reverse_colors", group: "options", type: "checkbox"}}, {id: "shape", dataType: "string", values: ["square", "circle"], ui: {labels: ["square", "circle"], group: "options", type: "combo", caption: "Shape"}}, {id: "optionsBtn", dataType: "none", ui: {group: "options", type: "button", label: "chart_options", seperator: true}}]}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][461]++;
  defVisualization({id: "ccc_bulletchart", type: "bulletchart", source: "CCC", name: "Bullet Chart", "class": "pentaho.ccc.CccChart", args: {cccClass: "pvc.BulletChart", crosstabMode: true, showValues: true, showXScale: true, xAxisPosition: "bottom", showYScale: true, yAxisPosition: "left", legendPosition: "bottom", seriesInRows: true, bulletTitle: "Test for title", bulletSubtitle: "Test for subtitle", bulletMeasures: [], bulletMarkers: ["7500"], bulletRanges: ["3000", "6500", "9000"], bulletMargin: 50, timeSeries: false, timeSeriesFormat: "%Y-%m-%d", panelSizeRatio: 0.80000000000000004, orientation: "vertical", valuesAnchor: "right", titlePosition: "top", titleSize: 25, xAxisSize: 30, yAxisSize: 50, xAxisFullGrid: false, yAxisFullGrid: false, orthoAxisOrdinal: false, scalingType: "linear", numSD: 2, extensionPoints: [["bulletRuleLabel_font", "7pt sans"]], normPerBaseCategory: true, useShapes: true, useCompositeAxis: true}, propMap: [], dataReqs: [{name: "Default", reqs: [{id: "rows", dataType: "string", dataStructure: "row", caption: "Across", required: true}, {id: "columns", dataType: "string", dataStructure: "column", caption: "Down", required: true}, {id: "measures", dataType: "number", dataStructure: "column", caption: "Values", required: true}]}]});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][545]++;
  pentaho.ccc.CccChart = (function (element) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][551]++;
  this._keyAxes = ["column", "row"];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][552]++;
  this._drillAxes = this._keyAxes;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][555]++;
  this._allAxes = this._keyAxes.slice(0);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][556]++;
  this._allAxes.push("measure");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][558]++;
  this._element = element;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][559]++;
  this._elementName = element.id;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][561]++;
  this._cdaTable = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][562]++;
  this._metadata = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][563]++;
  this._resultset = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][565]++;
  this._dataTable = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][567]++;
  this._rowDtColIndexes = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][568]++;
  this._otherDtColIndexes = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][570]++;
  this._vizOptions = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][571]++;
  this._originalVizOptions = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][572]++;
  this._dataOptions = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][574]++;
  this._selections = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][576]++;
  this._currentChartType = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][578]++;
  this._colors = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][579]++;
  this._title = null;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][588]++;
  pentaho.ccc.CccChart.prototype.draw = (function (dataTable, vizOptions) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][590]++;
  this._metadata = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][591]++;
  this._resultset = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][592]++;
  this._cdaTable = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][594]++;
  this._colors = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][598]++;
  this._dataTable = dataTable;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][599]++;
  this._crossTable = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][601]++;
  this._rowDtColIndexes = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][602]++;
  this._otherDtColIndexes = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][606]++;
  this._vizHelper = cv.pentahoVisualizationHelpers[vizOptions.customChartType];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][608]++;
  this._initializeOptions(vizOptions);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][610]++;
  this._initializeAxesMetadata();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][612]++;
  this._buildCrossTable();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][614]++;
  this._readData();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][616]++;
  this._prepareOptions();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][618]++;
  this._renderChart();
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][625]++;
  pentaho.ccc.CccChart.prototype._initializeOptions = (function (vizOptions) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][627]++;
  this._originalVizOptions = $.extend({}, vizOptions);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][628]++;
  this._isResize = (! (! vizOptions.isResize));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][629]++;
  (delete vizOptions.isResize);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][632]++;
  vizOptions = (this._vizOptions = $.extend({}, vizOptions));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][636]++;
  var chartArgsExtPoints = this.controller.currentViz.args.extensionPoints;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][637]++;
  if (chartArgsExtPoints) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][638]++;
    vizOptions.extensionPoints = pvc.create(chartArgsExtPoints, vizOptions.extensionPoints);
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][642]++;
  this._selections = vizOptions.selections;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][644]++;
  return vizOptions;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][653]++;
  function AxisInfo(axis, formulaInfos) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][654]++;
    this.id = axis;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][656]++;
    this.formulasInfo = formulaInfos;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][658]++;
    this.depth = this.formulasInfo.length;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][660]++;
    this.formulas = this.formulasInfo.map((function (formInfo) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][662]++;
  formInfo.axis = this;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][664]++;
  return formInfo.formula;
}), this);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][670]++;
    this.valueLabel = {};
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][673]++;
  AxisInfo.prototype.getAxisLabel = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][674]++;
  return this.formulasInfo.map((function (formInfo) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][674]++;
  return formInfo.label;
}), this).join(" and ");
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][678]++;
  pentaho.ccc.CccChart.prototype._calcFilteredAxisFormulasInfo = (function (axis) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][679]++;
  var formulasInfo = this._vizHelper.getAxisFormulasInfo(axis);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][680]++;
  if ((axis !== "measure")) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][681]++;
    return formulasInfo;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][684]++;
  var filtered = [], usedMeasureIds = this._getUsedMeasuresIds();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][687]++;
  formulasInfo.forEach((function (formulaInfo) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][688]++;
  var meaId = formulaInfo.id;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][689]++;
  if ((meaId && pvc.hasOwn(usedMeasureIds, meaId))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][690]++;
    formulaInfo.index = filtered.length;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][691]++;
    formulaInfo.role = usedMeasureIds[meaId];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][692]++;
    filtered.push(formulaInfo);
  }
}));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][696]++;
  return filtered;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][699]++;
  pentaho.ccc.CccChart.prototype._getUsedMeasuresIds = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][705]++;
  assert(this._rowAxis, "Measure axis must be the last one to be processed.");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][707]++;
  var dataTable = this._dataTable, dtColCount = dataTable.getNumberOfColumns(), seenMeasureIds = {}, lastMeasureId;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][712]++;
  for (var tc = this._rowAxis.depth; (tc < dtColCount); (tc++)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][713]++;
    var dtColId = dataTable.getColumnId(tc), dtColParts = dtColId.split("~"), meaId = ((dtColParts.length > 1)? dtColParts.pop(): dtColParts[0]);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][717]++;
    if ((meaId && ((! lastMeasureId) || (lastMeasureId !== meaId)))) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][718]++;
      if (pvc.hasOwn(seenMeasureIds, meaId)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][720]++;
        break;
      }
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][723]++;
      var role = "measure";
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][724]++;
      var dataReq = dataTable.getColumnProperty(tc, "dataReq");
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][725]++;
      if ((dataReq && dataReq.id)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][727]++;
        role = dataReq.id;
      }
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][730]++;
      seenMeasureIds[meaId] = role;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][732]++;
      lastMeasureId = meaId;
    }
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][736]++;
  return seenMeasureIds;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][739]++;
  pentaho.ccc.CccChart.prototype._initializeAxesMetadata = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][740]++;
  var myself = this;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][748]++;
  this._formulasInfo = {};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][762]++;
  this._allAxesInfo = pv.dict(this._allAxes, (function (axis) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][763]++;
  var axisInfo = new AxisInfo(axis, myself._calcFilteredAxisFormulasInfo(axis));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][765]++;
  myself[("_" + axisInfo.id + "Axis")] = axisInfo;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][767]++;
  axisInfo.formulasInfo.forEach(indexFormula, myself);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][769]++;
  return axisInfo;
}));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][773]++;
  function indexFormula(formInfo) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][774]++;
    var form = formInfo.formula, id = formInfo.id;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][780]++;
    if (form) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][781]++;
      this._formulasInfo[form] = formInfo;
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][784]++;
    if ((id && (form !== id))) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][785]++;
      assert((formInfo.axis.id === "measure"), "Must be a measure");
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][788]++;
      this._formulasInfo[id] = formInfo;
    }
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][793]++;
  this._title = this._rowAxis.getAxisLabel();
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][796]++;
  pentaho.ccc.CccChart.prototype._buildCrossTable = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][811]++;
  var dataTable = this._dataTable, dtColCount = dataTable.getNumberOfColumns(), dtRowCount = dataTable.getNumberOfRows();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][815]++;
  assert((dtColCount > 0), "DataTable must have at least one column");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][819]++;
  this._rowDtColIndexes = pv.range(this._rowAxis.depth);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][821]++;
  assert((this._rowDtColIndexes.length > 0), "There must exist at least one row axis formula.");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][824]++;
  this._otherDtColIndexes = pv.range(this._rowAxis.depth, dtColCount);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][828]++;
  this._crossTable = {children: [], childrenByKey: {}};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][833]++;
  if ((dtRowCount === 0)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][834]++;
    return;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][837]++;
  var otherDtColsInfo = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][838]++;
  this._otherDtColIndexes.forEach((function (tc) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][839]++;
  var dtColId = this._dataTable.getColumnId(tc), dtColParts = dtColId.split("~"), colValsJoined, meaId;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][844]++;
  if ((dtColParts.length > 1)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][845]++;
    meaId = dtColParts.pop();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][846]++;
    colValsJoined = dtColParts.join("~");
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][848]++;
    meaId = dtColParts[0];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][849]++;
    colValsJoined = "";
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][853]++;
  var meaInfo = this._formulasInfo[meaId];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][854]++;
  if ((! meaInfo)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][856]++;
    return;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][859]++;
  var meaIndex = meaInfo.index;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][862]++;
  if (colValsJoined) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][864]++;
    var joinedLabels = dataTable.getColumnLabel(tc), colLabels = joinedLabels.split("~");
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][867]++;
    if ((colLabels.length > 1)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][868]++;
      colLabels.pop();
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][871]++;
    dtColParts.forEach((function (colVal, level) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][872]++;
  this._columnAxis.valueLabel[colVal] = colLabels[level];
}), this);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][878]++;
    this._columnAxis.valueLabel[colValsJoined] = colLabels.join(" ~ ");
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][881]++;
  otherDtColsInfo.push({column: tc, measureIndex: meaIndex, keyValues: dtColParts, key: colValsJoined});
}), this);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][890]++;
  for (var tr = 0; (tr < dtRowCount); (tr++)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][891]++;
    var rowLabels = [], rowVals = this._rowDtColIndexes.map((function (tc) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][893]++;
  var rowVal = this._getTableValue(tr, tc), rowLabel = ((rowVal == null)? "-": dataTable.getFormattedValue(tr, tc));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][898]++;
  this._rowAxis.valueLabel[rowVal] = rowLabel;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][899]++;
  rowLabels.push(rowLabel);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][901]++;
  return rowVal;
}), this);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][904]++;
    var crossRow = {key: rowVals.join("~"), keyValues: rowVals, children: [], childrenByKey: {}};
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][914]++;
    this._rowAxis.valueLabel[crossRow.key] = rowLabels.join(" ~ ");
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][916]++;
    this._crossTable.children.push(crossRow);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][917]++;
    this._crossTable.childrenByKey[crossRow.key] = crossRow;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][919]++;
    otherDtColsInfo.forEach((function (dtColInfo) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][920]++;
  var crossCol = crossRow.childrenByKey[dtColInfo.key];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][921]++;
  if ((! crossCol)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][922]++;
    crossCol = {key: dtColInfo.key, keyValues: dtColInfo.keyValues, measures: []};
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][928]++;
    crossRow.children.push(crossCol);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][929]++;
    crossRow.childrenByKey[crossCol.key] = crossCol;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][932]++;
  var tc = dtColInfo.column, value = this._getTableValue(tr, tc);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][935]++;
  var measure = {v: value, f: ((value == null)? "-": dataTable.getFormattedValue(tr, tc))};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][940]++;
  crossCol.measures[dtColInfo.measureIndex] = measure;
}), this);
}
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][945]++;
  pentaho.ccc.CccChart.prototype._getAxisValueLabel = (function (axis, value) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][946]++;
  switch (axis) {
  case "column":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][947]++;
    return this._columnAxis.valueLabel[value];
  case "row":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][948]++;
    return this._rowAxis.valueLabel[value];
  case "measure":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][949]++;
    return value.f;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][951]++;
  throw new Error(("Invalid axis: '" + axis + "'"));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][955]++;
  pentaho.ccc.CccChart.prototype._getTableValue = (function (tr, tc) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][956]++;
  var value = this._dataTable.getValue(tr, tc);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][957]++;
  return ((value === "-")? null: value);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][964]++;
  pentaho.ccc.CccChart.prototype._readData = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][966]++;
  this._dataOptions = {crosstabMode: (! (! this._vizOptions.crosstabMode)), seriesInRows: false};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][971]++;
  switch (this._vizOptions.cccClass) {
  case "pvc.HeatGridChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][973]++;
    this._readDataHeatGrid();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][974]++;
    break;
  case "pvc.BarChart":
  case "pvc.NormalizedBarChart":
  case "pvc.LineChart":
  case "pvc.StackedAreaChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][980]++;
    this._readDataRelational();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][981]++;
    break;
  case "pvc.MetricDotChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][985]++;
    this._readDataCrosstabSingleCategory();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][986]++;
    break;
  case "pvc.PieChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][989]++;
    assert((this._otherDtColIndexes.length === 1), "Only one series supported");
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][991]++;
    this._readDataCrosstabSingleCategory();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][992]++;
    break;
  case "pvc.BulletChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][995]++;
    this._readDataBullet();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][996]++;
    break;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1000]++;
  this._cdaTable = {metadata: this._metadata, resultset: this._resultset};
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1011]++;
  pentaho.ccc.CccChart.prototype._readDataCrosstab = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1012]++;
  var dataTable = this._dataTable, colCount = dataTable.getNumberOfColumns(), rowCount = dataTable.getNumberOfRows();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1017]++;
  for (var tc = 0; (tc < colCount); (tc++)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1018]++;
    this._addCdaMetadata(dataTable.getColumnId(tc), dataTable.getColumnLabel(tc), writeCccColumnDataType(dataTable.getColumnType(tc)));
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1024]++;
  this._resultset = createTable(rowCount, colCount, this._getTableValue, this);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1034]++;
  pentaho.ccc.CccChart.prototype._readDataCrosstabSingleCategory = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1035]++;
  var dataTable = this._dataTable, rowCount = dataTable.getNumberOfRows();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1039]++;
  this._addCdaMetadata("Categories", this._title, "STRING");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1042]++;
  this._otherDtColIndexes.forEach((function (tc) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1045]++;
  this._addCdaMetadata(dataTable.getColumnId(tc), dataTable.getColumnLabel(tc), writeCccColumnDataType(dataTable.getColumnType(tc)));
}), this);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1052]++;
  for (var tr = 0; (tr < rowCount); (tr++)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1054]++;
    var row = [this._aggregateRowAxisForTableRow(tr)];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1057]++;
    this._otherDtColIndexes.forEach((function (tc) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1058]++;
  row.push(this._getTableValue(tr, tc));
}), this);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1061]++;
    this._resultset.push(row);
}
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1073]++;
  pentaho.ccc.CccChart.prototype._readDataRelational = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1076]++;
  var dataTable = this._dataTable, rowCount = dataTable.getNumberOfRows();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1079]++;
  var seriesCount = this._otherDtColIndexes.length;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1082]++;
  this._colors = this._vizOptions.palette.colors.slice(0, seriesCount);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1085]++;
  this._addCdaMetadata("Series", "Series", "STRING");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1086]++;
  this._addCdaMetadata("Category", "Category", "STRING");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1087]++;
  this._addCdaMetadata("Value", "Value", "NUMERIC");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1089]++;
  if ((rowCount > 0)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1090]++;
    var seriesLabels = this._otherDtColIndexes.map((function (tc) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1091]++;
  return dataTable.getColumnLabel(tc);
}));
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1095]++;
    for (var tr = 0; (tr < rowCount); (tr++)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1097]++;
      var category = this._aggregateRowAxisForTableRow(tr);
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1099]++;
      for (var i = 0; (i < seriesCount); (i++)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1100]++;
        var tc = this._otherDtColIndexes[i];
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1102]++;
        var value = this._getTableValue(tr, tc);
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1103]++;
        if ((value != null)) {
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1104]++;
          this._resultset.push([seriesLabels[i], category, value]);
        }
}
}
  }
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1119]++;
  pentaho.ccc.CccChart.prototype._readDataHeatGrid = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1120]++;
  this._readDataCrosstab();
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1122]++;
  var measureCount = this._measureAxis.depth;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1125]++;
  this._dataOptions.dataOptions = {categoriesCount: this._rowAxis.depth, measuresInColumns: (measureCount > 0)};
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1143]++;
  pentaho.ccc.CccChart.prototype._readDataBullet = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1144]++;
  var dataTable = this._dataTable, rowCount = dataTable.getNumberOfRows(), measureCols = this._otherDtColIndexes, seriesCount = this._otherDtColIndexes.length, vizOptions = this._vizOptions;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1150]++;
  this._dataOptions.seriesInRows = true;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1152]++;
  this._addCdaMetadata("Category", "Category", "STRING");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1153]++;
  this._addCdaMetadata("Series", "Series", "STRING");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1154]++;
  this._addCdaMetadata("Value", "Value", "NUMERIC");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1155]++;
  this._addCdaMetadata("Marker", "Marker", "NUMERIC");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1157]++;
  if (vizOptions.bulletRanges) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1158]++;
    for (var i = 0, R = vizOptions.bulletRanges.length; (i < R); (i++)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1159]++;
      this._addCdaMetadata(("Range" + i), ("Range " + i), "NUMERIC");
}
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1163]++;
  var measuresCount = this._measureAxis.depth;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1166]++;
  for (var tr = 0; (tr < rowCount); (tr++)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1168]++;
    var category = this._aggregateRowAxisForTableRow(tr);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1170]++;
    for (var s = 0; (s < seriesCount); (s += measuresCount)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1177]++;
      for (var m = 0; (m < measuresCount); (m += 2)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1178]++;
        var valueColIndex = (s + m), markerColIndex = (valueColIndex + 1), tc = measureCols[valueColIndex], dtColParts = dataTable.getColumnId(tc).split("~");
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1183]++;
        dtColParts.pop();
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1185]++;
        var row = [category, dtColParts.join("~"), this._getTableValue(tr, tc), (((m + 1) < measuresCount)? this._getTableValue(tr, measureCols[markerColIndex]): vizOptions.bulletMarkers[0])];
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1198]++;
        var bulletRanges = vizOptions.bulletRanges;
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1199]++;
        if (bulletRanges) {
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1200]++;
          bulletRanges.forEach((function (rangeValue) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1201]++;
  row.push(rangeValue);
}));
        }
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1205]++;
        this._resultset.push(row);
}
}
}
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1211]++;
  pentaho.ccc.CccChart.prototype._aggregateRowAxisForTableRow = (function (tr) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1213]++;
  var values = this._rowDtColIndexes.map((function (tc) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1214]++;
  return this._getTableValue(tr, tc);
}), this);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1217]++;
  return values.join("~");
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1220]++;
  pentaho.ccc.CccChart.prototype._addCdaMetadata = (function (colName, colLabel, colType) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1221]++;
  this._metadata.push({colIndex: this._metadata.length, colName: colName, colLabel: colLabel, colType: colType});
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1234]++;
  pentaho.ccc.CccChart.prototype._prepareOptions = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1235]++;
  var vizOptions = this._vizOptions;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1237]++;
  var myself = this;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1238]++;
  var options = (this.options = {canvas: this._elementName, animate: false, legend: true, legendPosition: "bottom", titlePosition: "top", margins: 20, showTooltips: true, showValues: false, clickable: true, selectable: true, ctrlSelectMode: false, title: ((this._title == "")? null: this._title), colors: this.getColors(), clickAction: null, mouseOverAction: (function () {
}), mouseUpAction: (function () {
}), getCategoryLabel: (function (value) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1266]++;
  return myself._getAxisValueLabel("row", value);
}), getSeriesLabel: (function (value) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1270]++;
  return myself._getAxisValueLabel("column", value);
})});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1275]++;
  vizOptions.height = (vizOptions.height || 400);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1276]++;
  vizOptions.width = (vizOptions.width || 400);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1287]++;
  switch (this._vizOptions.cccClass) {
  case "pvc.HeatGridChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1289]++;
    this._prepareOptionsHeatGrid();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1290]++;
    this._prepareLayoutHeatGrid();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1291]++;
    break;
  case "pvc.BulletChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1294]++;
    this._prepareOptionsBullet();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1295]++;
    this._prepareLayoutBullet();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1296]++;
    break;
  case "pvc.BarChart":
  case "pvc.NormalizedBarChart":
  case "pvc.StackedAreaChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1301]++;
    this._prepareOptionsCategNormal();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1302]++;
    break;
  case "pvc.LineChart":
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1305]++;
    this._prepareOptionsCategNormal();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1306]++;
    this._prepareOptionsLine();
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1307]++;
    break;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1313]++;
  for (var x in vizOptions) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1314]++;
    if ((! this._shouldSkipVizOption(x))) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1315]++;
      var v = vizOptions[x];
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1318]++;
      switch (x) {
      case "legendPosition":
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1320]++;
        v = (v && v.toLowerCase());
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1321]++;
        break;
      case "showLegend":
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1324]++;
        v = (("" + v) === "true");
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1325]++;
        break;
      case "legendSize":
      case "lineWidth":
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1329]++;
        v = parseFloat(v);
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1330]++;
        break;
      }
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1333]++;
      options[x] = v;
    }
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1337]++;
  var axisLabelFont = options.axisLabelFont;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1338]++;
  if ((! axisLabelFont)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1339]++;
    options.axisLabelFont = "12px sans-serif";
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1341]++;
    options.axisLabelFont = axisLabelFont.replace(/\bdefault\s*$/i, "sans-serif");
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1344]++;
  if ((! this._vizHelper.isInteractionEnabled())) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1345]++;
    options.showTooltips = false;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1346]++;
    options.clickable = false;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1347]++;
    options.selectable = false;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1351]++;
  if ((! ("legendAlign" in options))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1352]++;
    var legendPosition = options.legendPosition;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1354]++;
    if (((legendPosition === "top") || (legendPosition === "bottom"))) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1355]++;
      options.legendAlign = "center";
    }
    else {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1357]++;
      options.legendAlign = "middle";
    }
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1361]++;
  var vizExtPoints = vizOptions.extensionPoints;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1362]++;
  if (vizExtPoints) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1363]++;
    var extPoints = (options.extensionPoints = {});
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1364]++;
    for (var y in vizExtPoints) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1365]++;
      extPoints[y] = vizExtPoints[y];
}
  }
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1371]++;
  pentaho.ccc.CccChart.prototype._prepareOptionsHeatGrid = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1372]++;
  var myself = this, options = this.options, vizOptions = this._vizOptions;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1376]++;
  options.selectionChangedAction = (function (cccSelections) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1377]++;
  myself._notifyCccSelectionChanged(cccSelections);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1381]++;
  options.doubleClickAction = (function (s, c, d, ev, datum) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1382]++;
  return myself._drillDown(myself._readDatum(datum));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1386]++;
  options.yAxisDoubleClickAction = (function (d) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1387]++;
  return myself._drillDown(myself._readCccAxesValues(d.absValue, null));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1391]++;
  options.xAxisDoubleClickAction = (function (d) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1392]++;
  return myself._drillDown(myself._readCccAxesValues(null, d.absValue));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1395]++;
  options.customTooltip = (function (s, c, v, datum) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1396]++;
  return myself._getTooltipText(myself._readDatum(datum));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1401]++;
  var freeMeasures = [], measuresByRole = {};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1404]++;
  this._measureAxis.formulasInfo.forEach((function (formulaInfo) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1405]++;
  if ((formulaInfo.role !== "measure")) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1406]++;
    measuresByRole[formulaInfo.role] = formulaInfo;
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1408]++;
    freeMeasures.push(formulaInfo);
  }
}));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1413]++;
  var formulaInfo = (measuresByRole.color || freeMeasures.shift());
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1414]++;
  vizOptions.colorValIdx = (formulaInfo? formulaInfo.index: null);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1417]++;
  formulaInfo = (measuresByRole.size || freeMeasures.shift());
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1418]++;
  vizOptions.sizeValIdx = (formulaInfo? formulaInfo.index: null);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1420]++;
  if ((vizOptions.colorValIdx == null)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1422]++;
    var nullColor = (vizOptions.colorRange && vizOptions.colorRange[0]);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1423]++;
    vizOptions.nullColor = (nullColor || "red");
  }
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1427]++;
  pentaho.ccc.CccChart.prototype._prepareLayoutHeatGrid = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1428]++;
  var vizOptions = this._vizOptions;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1431]++;
  vizOptions.controller.domNode.style.overflow = "hidden";
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1433]++;
  var measureCount = this._measureAxis.depth, catsDepth = this._rowAxis.depth, sersDepth = this._columnAxis.depth, catsBreadth = Math.max(1, (this._dataTable.getNumberOfRows() - 1)), sersBreadth = (this._dataTable.getNumberOfColumns() - catsDepth);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1439]++;
  if ((measureCount > 0)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1440]++;
    sersBreadth /= measureCount;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1443]++;
  var width = vizOptions.width, height = vizOptions.height, currRatio = (width / height), xyChartRatio = (catsBreadth / sersBreadth);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1449]++;
  var MAX_AXIS_SIZE = 300, MIN_LEVEL_HEIGHT = 70, MAX_LEVEL_HEIGHT = 200, MAX_AXIS_RATIO = 0.34999999999999998;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1454]++;
  var minXAxisSize = Math.min(MAX_AXIS_SIZE, (catsDepth * MIN_LEVEL_HEIGHT)), minYAxisSize = Math.min(MAX_AXIS_SIZE, (sersDepth * MIN_LEVEL_HEIGHT)), maxXAxisSize = Math.min(MAX_AXIS_SIZE, (catsDepth * MAX_LEVEL_HEIGHT), (height * MAX_AXIS_RATIO)), maxYAxisSize = Math.min(MAX_AXIS_SIZE, (sersDepth * MAX_LEVEL_HEIGHT), (width * MAX_AXIS_RATIO));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1459]++;
  var xAxisSize, yAxisSize;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1461]++;
  if ((xyChartRatio > currRatio)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1462]++;
    var extraHeight = (height - (width / xyChartRatio));
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1464]++;
    yAxisSize = minYAxisSize;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1466]++;
    xAxisSize = Math.min(extraHeight, maxXAxisSize);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1467]++;
    xAxisSize = Math.max(xAxisSize, minXAxisSize);
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1468]++;
    if ((xyChartRatio < currRatio)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1469]++;
      var extraWidth = (width - (height * xyChartRatio));
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1471]++;
      xAxisSize = minXAxisSize;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1473]++;
      yAxisSize = Math.min(extraWidth, maxYAxisSize);
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1474]++;
      yAxisSize = Math.max(yAxisSize, minYAxisSize);
    }
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1480]++;
  vizOptions.xAxisSize = xAxisSize;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1481]++;
  vizOptions.yAxisSize = yAxisSize;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1485]++;
  pentaho.ccc.CccChart.prototype._prepareOptionsCategNormal = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1486]++;
  var myself = this, options = this.options;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1490]++;
  this._drillAxes = ["row", "column"];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1492]++;
  options.customTooltip = (function (s, c, v, datum) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1493]++;
  return myself._getTooltipText(myself._readDatum(datum));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1497]++;
  options.selectionChangedAction = (function (cccSelections) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1498]++;
  myself._notifyCccSelectionChanged(cccSelections);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1502]++;
  options.doubleClickAction = (function (s, c, v, ev, datum) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1503]++;
  myself._drillDown(myself._readDatum(datum));
});
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1507]++;
  pentaho.ccc.CccChart.prototype._prepareOptionsLine = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1508]++;
  var vizOptions = this._vizOptions;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1510]++;
  var shape = vizOptions.shape;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1511]++;
  if ((shape && (shape === "none"))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1512]++;
    vizOptions.showDots = false;
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1514]++;
    vizOptions.showDots = true;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1515]++;
    vizOptions.extensionPoints.dot_shape = shape;
  }
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1520]++;
  pentaho.ccc.CccChart.prototype._prepareOptionsBullet = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1521]++;
  var myself = this, options = this.options;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1524]++;
  options.legend = false;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1527]++;
  options.axisDoubleClickAction = (function (d) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1528]++;
  var c = d.title, s = d.subtitle;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1531]++;
  myself._drillDown(myself._readCccAxesValues(s, c));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1534]++;
  options.clickAction = (function (c, s) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1535]++;
  myself._notifySelectionChanged([myself._convertKeysSelectionCccToAnalyzer(s, c)]);
});
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1540]++;
  pentaho.ccc.CccChart.prototype._prepareLayoutBullet = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1541]++;
  var vizOptions = this._vizOptions;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1543]++;
  var isVertical = (vizOptions.orientation == "vertical");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1544]++;
  if ((this._resultset.length > 20)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1545]++;
    vizOptions.bulletSize = 10;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1546]++;
    vizOptions.bulletSpacing = (isVertical? 60: 20);
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1547]++;
    if ((this._resultset.length > 10)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1548]++;
      vizOptions.bulletSize = 15;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1549]++;
      vizOptions.bulletSpacing = (isVertical? 80: 30);
    }
    else {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1551]++;
      vizOptions.bulletSize = 20;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1552]++;
      vizOptions.bulletSpacing = (isVertical? 120: 50);
    }
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1555]++;
  var totalSpace = ((2 + vizOptions.bulletSize + vizOptions.bulletSpacing) * this._resultset.length);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1559]++;
  if (isVertical) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1560]++;
    if ((totalSpace > vizOptions.width)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1561]++;
      vizOptions.controller.domNode.style.overflowX = "auto";
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1562]++;
      vizOptions.controller.domNode.style.overflowY = "hidden";
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1564]++;
      vizOptions.width = totalSpace;
    }
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1567]++;
    if ((totalSpace > vizOptions.height)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1568]++;
      vizOptions.controller.domNode.style.overflowY = "auto";
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1569]++;
      vizOptions.controller.domNode.style.overflowX = "hidden";
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1571]++;
      vizOptions.height = totalSpace;
    }
  }
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1579]++;
  pentaho.ccc.CccChart.prototype._shouldSkipVizOption = (function (option) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1580]++;
  return (option in skipVizOtions);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1587]++;
  var skipVizOtions = pv.dict(["cccClass", "crosstabMode", "extensionPoints", "action", "autoRange", "backgroundColorEnd", "backgroundFill", "chartType", "controller", "customChartType", "displayUnits", "labelSize", "labelStyle", "legendBackgroundColor", "legendColor", "legendFontFamily", "legendStyle", "legendSize", "lineShape", "maxChartsPerRow", "maxValues", "metrics", "palette", "selections", "seriesIncludeMeasures"], (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1620]++;
  return true;
}));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1627]++;
  pentaho.ccc.CccChart.prototype._renderChart = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1629]++;
  while (this._element.firstChild) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1630]++;
    this._element.removeChild(this._element.firstChild);
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1635]++;
  this._currentChartType = this._vizOptions.cccClass;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1637]++;
  var chartClass = eval(("(" + this._currentChartType + ")"));
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1639]++;
  var selectionsWhereSpec;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1640]++;
  if ((this._isResize && this._chart && (this._chart.constructor === chartClass))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1641]++;
    selectionsWhereSpec = this._buildWhereSpec(this._chart.dataEngine.getSelections());
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1642]++;
    if ((selectionsWhereSpec && selectionsWhereSpec.length)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1643]++;
      var prevRenderCallback = this.options.renderCallback;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1644]++;
      this.options.renderCallback = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1645]++;
  if (prevRenderCallback) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1646]++;
    prevRenderCallback.call(this);
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1649]++;
  var datums = this.dataEngine.getWhere(selectionsWhereSpec);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1650]++;
  this.dataEngine.setSelections(datums, true);
});
    }
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1655]++;
  this._isResize = false;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1656]++;
  this._chart = new chartClass(this.options);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1657]++;
  this._chart.setData($.extend(true, {}, this._cdaTable), this._dataOptions);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1658]++;
  this._chart.render();
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1680]++;
  pentaho.ccc.CccChart.prototype._readDatum = (function (datum) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1681]++;
  var dimensions = datum.elem;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1682]++;
  return this._readCccAxesValues(dimensions.series.absValue, dimensions.category.absValue);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1687]++;
  pentaho.ccc.CccChart.prototype._readCccAxesValues = (function (s, c) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1689]++;
  var rowVals = readCccValue(c), colVals = readCccValue(s);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1694]++;
  if ((colVals && this._vizOptions.seriesIncludeMeasures)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1697]++;
    colVals = colVals.slice(0);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1698]++;
    colVals.pop();
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1701]++;
  var axesVals = {row: rowVals, column: colVals, measure: null};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1710]++;
  this._keyAxes.forEach((function (axis) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1711]++;
  var vals = axesVals[axis];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1712]++;
  if (vals) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1713]++;
    axesVals[axis] = this._buildMdxAbsoluteValues(this._allAxesInfo[axis], vals);
  }
}), this);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1718]++;
  axesVals.measure = this._getCrossCell(axesVals.row, axesVals.column);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1720]++;
  return axesVals;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1723]++;
  pentaho.ccc.CccChart.prototype._getCrossCell = (function (rowVals, colVals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1724]++;
  if (((! rowVals) || (! colVals))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1725]++;
    return null;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1728]++;
  var result = this._crossTable.childrenByKey[rowVals.join("~")];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1729]++;
  if (result) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1730]++;
    result = result.childrenByKey[colVals.join("~")];
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1733]++;
  return (result && result.measures);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1742]++;
  pentaho.ccc.CccChart.prototype._getTooltipText = (function (axesVals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1747]++;
  var tooltipLines = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1752]++;
  this._allAxes.forEach((function (axis) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1753]++;
  describeAxis.call(this, this._allAxesInfo[axis], axesVals[axis]);
}), this);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1759]++;
  var drillDownInfo = this._getDrillDownInfo(axesVals);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1760]++;
  if (drillDownInfo) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1761]++;
    tooltipLines.push(("<div class='tipsy-footer'>Double-click to show " + escapeHtml(this._vizHelper.getFormulaLabel(drillDownInfo.directChild)) + "</div>"));
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1770]++;
  return tooltipLines.join("<br />");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1773]++;
  function describeAxis(axisInfo, values) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1774]++;
    axisInfo.formulasInfo.forEach((function (formInfo, index) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1775]++;
  var value = pvc.nullTo(this._getAxisValueLabel(axisInfo.id, values[index]), "-");
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1780]++;
  tooltipLines.push((escapeHtml(formInfo.label) + ": " + escapeHtml(value)));
}), this);
}
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1789]++;
  pentaho.ccc.CccChart.prototype._notifySelectionChanged = (function (selections) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1790]++;
  pentaho.events.trigger(this, "select", {source: this, selections: selections, selectionMode: "REPLACE"});
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1797]++;
  pentaho.ccc.CccChart.prototype._notifyCccSelectionChanged = (function (cccSelections) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1798]++;
  this._notifySelectionChanged(this._convertSelectionsCccToAnalyzer(cccSelections));
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1842]++;
  pentaho.ccc.CccChart.prototype._convertSelectionsCccToAnalyzer = (function (cccSelections) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1843]++;
  return cccSelections.map(this._convertSelectionCccToAnalyzer, this);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1846]++;
  pentaho.ccc.CccChart.prototype._convertSelectionCccToAnalyzer = (function (cccSelection) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1847]++;
  return this._convertKeysSelectionCccToAnalyzer(cccSelection.elem.series.absValue, cccSelection.elem.category.absValue);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1852]++;
  pentaho.ccc.CccChart.prototype._convertKeysSelectionCccToAnalyzer = (function (s, c) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1857]++;
  var axesVals = this._readCccAxesValues(s, c);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1859]++;
  return this._convertAxesValuesToAnalyzerSelection(axesVals);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1862]++;
  pentaho.ccc.CccChart.prototype._convertAxesValuesToAnalyzerSelection = (function (axesVals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1866]++;
  var selection = {type: "cell"};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1871]++;
  this._keyAxes.forEach(addKeyAxisSelectionInfo, this);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1877]++;
  var measureVals = axesVals.measure;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1878]++;
  if ((measureVals && measureVals.length)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1879]++;
    selection.value = measureVals.map((function (cell) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1879]++;
  return cell.f;
})).join(" ~ ");
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1883]++;
  return selection;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1889]++;
  function addKeyAxisSelectionInfo(axis) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1890]++;
    var axisInfo = this._allAxesInfo[axis], vals = axesVals[axis];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1893]++;
    if ((vals && vals.length)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1895]++;
      selection[axis] = true;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1896]++;
      selection[(axis + "Id")] = axisInfo.formulas;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1897]++;
      selection[(axis + "Item")] = this._buildMdxAbsoluteValues(axisInfo, vals);
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1898]++;
      selection[(axis + "Label")] = this._getAxisValueLabel(axis, vals[(vals.length - 1)]);
    }
}
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1903]++;
  pentaho.ccc.CccChart.prototype._buildWhereSpec = (function (cccSelections) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1904]++;
  var whereSpec = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1906]++;
  if (cccSelections.length) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1907]++;
    var whereSpec = [];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1909]++;
    var addDatum = (function (datum) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1910]++;
  var datumFilter = {};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1912]++;
  var elems = datum.elem;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1913]++;
  for (var dimName in elems) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1914]++;
    if ((dimName !== "value")) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1915]++;
      datumFilter[dimName] = [elems[dimName].path];
    }
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1919]++;
  whereSpec.push(datumFilter);
});
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1922]++;
    cccSelections.forEach(addDatum);
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1925]++;
  return whereSpec;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1931]++;
  pentaho.ccc.CccChart.prototype._drillDown = (function (axesVals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1935]++;
  var drillInfo = this._getDrillDownInfo(axesVals);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1936]++;
  if ((! drillInfo)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1939]++;
    pentaho.events.trigger(this, "doubleclick", {source: this, selections: [this._convertAxesValuesToAnalyzerSelection(axesVals)]});
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1944]++;
    return false;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1952]++;
  var actionContext = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1965]++;
  var usedHierarchiesSet = {};
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1968]++;
  keepAndDrill.call(this, drillInfo);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1973]++;
  this._keyAxes.forEach((function (axis) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1974]++;
  var vals = axesVals[axis];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1975]++;
  if (vals) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1976]++;
    keep.call(this, axis, this._allAxesInfo[axis].formulasInfo, vals);
  }
}), this);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1983]++;
  var keepGem = true;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1984]++;
  this._vizHelper.click(actionContext, keepGem);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1986]++;
  return true;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1992]++;
  function keepAndDrill(drillInfo) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1993]++;
    return useFormula.call(this, drillInfo.formulaInfo, drillInfo.values, "KEEP_AND_DRILL");
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1997]++;
  function keep(axis, formsInfo, vals) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1998]++;
    if (vals) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][1999]++;
      for (var i = 0, V = vals.length; (i < V); (i++)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2001]++;
        var formInfo = formsInfo[i];
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2002]++;
        if ((! (formInfo.hierarchy in usedHierarchiesSet))) {
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2003]++;
          var deepestInfo = this._getAxisDeepestHierarchyFormula(axis, formInfo.formula, V);
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2005]++;
          assert(deepestInfo, "At least formInfo must be a possibility.");
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2007]++;
          useFormula.call(this, deepestInfo.formulaInfo, vals, "KEEP");
        }
}
    }
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2014]++;
  function useFormula(formInfo, vals, action) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2015]++;
    usedHierarchiesSet[formInfo.hierarchy] = true;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2017]++;
    var axisInfo = formInfo.axis, hvalue = this._buildMdxAbsoluteValue(axisInfo, formInfo.index, vals);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2020]++;
    actionContext.push({action: action, formula: formInfo.formula, member: hvalue, caption: escapeHtml(axisInfo.valueLabel[hvalue])});
}
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2029]++;
  pentaho.ccc.CccChart.prototype._getDrillDownInfo = (function (axesVals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2030]++;
  if ((! this._vizHelper.isDrillEnabled())) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2031]++;
    return null;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2038]++;
  for (var i = 0; (i < this._drillAxes.length); (i++)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2039]++;
    var axis = this._drillAxes[i], drillInfo = this._getAxisDrillDownInfo(this._allAxesInfo[axis], axesVals[axis]);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2044]++;
    if (drillInfo) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2045]++;
      return drillInfo;
    }
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2049]++;
  return null;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2081]++;
  pentaho.ccc.CccChart.prototype._getAxisDrillDownInfo = (function (axisInfo, vals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2084]++;
  var V;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2085]++;
  if ((axisInfo && axisInfo.depth && vals && (V = vals.length))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2086]++;
    var formInfo = axisInfo.formulasInfo[(V - 1)];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2087]++;
    if (formInfo) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2088]++;
      var drillInfo = this._getAxisDeepestHierarchyFormula(axisInfo.id, formInfo.formula, V);
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2089]++;
      if ((drillInfo && drillInfo.directChild)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2091]++;
        drillInfo.values = vals;
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2092]++;
        return drillInfo;
      }
    }
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2097]++;
  return null;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2115]++;
  pentaho.ccc.CccChart.prototype._getAxisDeepestHierarchyFormula = (function (axis, formulaOfHierarchy, maxDepth) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2116]++;
  var hForms = this._vizHelper.getHierarchyFormulas(formulaOfHierarchy, false, false);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2120]++;
  if (hForms) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2121]++;
    if ((maxDepth == null)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2122]++;
      maxDepth = Infinity;
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2125]++;
    for (var i = (hForms.length - 1); (i >= 0); (i--)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2126]++;
      var hFormInfo = this._formulasInfo[hForms[i]];
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2127]++;
      if ((hFormInfo && (hFormInfo.axis.id === axis) && (hFormInfo.index < maxDepth))) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2129]++;
        return ({formulaInfo: hFormInfo, directChild: (hForms[(i + 1)] || null)});
      }
}
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2137]++;
  return null;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2140]++;
  pentaho.ccc.CccChart.prototype._buildMdxAbsoluteValues = (function (axisInfo, vals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2141]++;
  return vals.map((function (val, index) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2142]++;
  return this._buildMdxAbsoluteValue(axisInfo, index, vals);
}), this);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2146]++;
  pentaho.ccc.CccChart.prototype._buildMdxAbsoluteValue = (function (axisInfo, targetIndex, vals) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2151]++;
  var targetVal = vals[targetIndex];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2155]++;
  if (((targetVal == null) || (targetVal === "") || (targetVal.charAt(0) === "["))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2158]++;
    return targetVal;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2161]++;
  var targetFormInfo = axisInfo.formulasInfo[targetIndex], mdxVals = [wrapMdxValue(targetFormInfo.hierarchy)], L = vals.length;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2166]++;
  var hForms = this._vizHelper.getHierarchyFormulas(targetFormInfo.formula, false, true);
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2170]++;
  if (hForms) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2171]++;
    hForms.forEach((function (levelForm) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2172]++;
  var formInfo = this._formulasInfo[levelForm];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2173]++;
  if ((formInfo && (formInfo.axis === axisInfo) && (formInfo.index < L))) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2174]++;
    mdxVals.push(wrapMdxValue(vals[formInfo.index]));
  }
}), this);
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2180]++;
  return mdxVals.join(".");
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2183]++;
  function wrapMdxValue(value) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2184]++;
    value = ("" + pvc.nullTo(value, ""));
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2185]++;
    if (((! value) || (value.charAt(0) !== "["))) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2186]++;
      value = ("[" + value + "]");
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2189]++;
    return value;
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2196]++;
  pentaho.ccc.CccChart.prototype.setHighlights = (function (selections) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2197]++;
  if ((! this._ownChange)) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2198]++;
    this._selections = selections;
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2199]++;
    if ((this._chart.clearSelections && ((! selections) || (selections.length == 0)))) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2201]++;
      this._ownChange = true;
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2202]++;
      try {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2203]++;
        this._chart.clearSelections();
      }
      finally {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2205]++;
        this._ownChange = false;
      }
    }
  }
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2220]++;
  pentaho.ccc.CccChart.prototype.getOutputParameters = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2222]++;
  var params = [];
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2223]++;
  if ((this._vizOptions.cccClass == "pvc.PieChart")) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2224]++;
    params.push([this._dataTable.getColumnId(0), true, this._dataTable.getColumnId(0)]);
  }
  else {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2230]++;
    for (var j = 0; (j < this._dataTable.getNumberOfColumns()); (j++)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2231]++;
      params.push([this._dataTable.getColumnId(j), true, this._dataTable.getColumnId(j)]);
}
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2239]++;
  return params;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2242]++;
  pentaho.ccc.CccChart.prototype.resize = (function (width, height) {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2243]++;
  var vizOptions = this._originalVizOptions;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2245]++;
  vizOptions.width = width;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2246]++;
  vizOptions.height = height;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2247]++;
  vizOptions.isResize = true;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2248]++;
  this.draw(this._dataTable, vizOptions);
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2257]++;
  pentaho.ccc.CccChart.prototype.getColors = (function () {
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2258]++;
  if (this._colors) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2259]++;
    return this._colors;
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2262]++;
  var colors = null;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2264]++;
  var paletteMap = this._vizOptions.metrics[0].paletteMap;
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2265]++;
  if (paletteMap) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2266]++;
    colors = [];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2267]++;
    for (var r = 0; (r < this._dataTable.getNumberOfRows()); (r++)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2268]++;
      var item = this._dataTable.getValue(r, 0);
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2269]++;
      if ((this._selections && (this._selections.length > 0))) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2270]++;
        var done = false;
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2271]++;
        for (var selIdx = 0; (selIdx < this._selections.length); (selIdx++)) {
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2272]++;
          var selection = this._selections[selIdx];
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2273]++;
          if ((((selection.type == "row") && (selection.rowItem == item)) || ((selection.type == "column") && (selection.colId == this._dataTable.getColumnId(1))))) {
            _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2275]++;
            colors.push(paletteMap[item]);
            _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2276]++;
            done = true;
            _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2277]++;
            break;
          }
}
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2281]++;
        if ((! done)) {
          _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2283]++;
          colors.push("#bbbbbb");
        }
      }
      else {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2287]++;
        colors.push(paletteMap[item]);
      }
}
  }
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2292]++;
  return colors;
});
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2297]++;
  function readCccValue(v) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2298]++;
    if (((v != null) && (! (v instanceof Array)))) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2300]++;
      v = ("" + v).split("~");
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2303]++;
    return v;
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2308]++;
  function writeCccColumnDataType(colType) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2309]++;
    switch (colType) {
    case "string":
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2310]++;
      return "STRING";
    case "number":
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2311]++;
      return "NUMERIC";
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2314]++;
    throw new Error("Unsupported data type");
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2319]++;
  function createTable(rowCount, colCount, readCellValue, context) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2320]++;
    var table = new Array(rowCount);
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2321]++;
    for (var tr = 0; (tr < rowCount); (tr++)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2322]++;
      var row = new Array(colCount);
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2324]++;
      for (var tc = 0; (tc < colCount); (tc++)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2325]++;
        row[tc] = readCellValue.call(context, tr, tc);
}
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2328]++;
      table[tr] = row;
}
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2331]++;
    return table;
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2337]++;
  function escapeHtml(str, noSingleQuotes) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2338]++;
    str = str.replace(/&/gm, "&amp;").replace(/</gm, "&lt;").replace(/>/gm, "&gt;").replace(/"/gm, "&quot;");
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2342]++;
    if ((! noSingleQuotes)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2343]++;
      str = str.replace(/'/gm, "&#39;");
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2346]++;
    return str;
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2351]++;
  function assert(condition, conditionMessage) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2352]++;
    if ((! condition)) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2353]++;
      var message = "Assertion failed.";
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2354]++;
      if ((conditionMessage != null)) {
        _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2355]++;
        message += ("\n\"" + conditionMessage + "\"");
      }
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2358]++;
      throw new Error(message);
    }
}
  _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2363]++;
  function createVizDataReq(rowLabel, columnLabel, measureLabel, hasMulti) {
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2364]++;
    var json = [{id: "rows", dataType: "string", dataStructure: "column", caption: rowLabel, required: true, allowMultiple: true, zoneId: "rowAttributes", defaultAppend: true}, {id: "columns", dataType: "string", dataStructure: "column", caption: columnLabel, required: false, allowMultiple: true, zoneId: "rowAttributes"}, {id: "measures", dataType: "number", dataStructure: "column", caption: measureLabel, required: true, allowMultiple: true, zoneId: "measures", defaultAppend: true}];
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2392]++;
    if (hasMulti) {
      _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2393]++;
      json.push({id: "multi", dataType: "string", dataStructure: "column", caption: cvCatalog.dropZoneLabels_MULTI_CHART, allowMultiple: false, required: false, zoneId: "rowAttributes"});
    }
    _$jscoverage['vizapi/ccc/ccc_wrapper.js'][2401]++;
    return json;
}
})();
}));
